
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package minisql;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0188\000\002\002\004\000\002\006\002\000\002\003" +
    "\003\000\002\004\004\000\002\004\003\000\002\005\004" +
    "\000\002\005\004\000\002\005\004\000\002\005\004\000" +
    "\002\005\004\000\002\005\004\000\002\005\004\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\005" +
    "\004\000\002\005\004\000\002\005\004\000\002\005\003" +
    "\000\002\005\003\000\002\005\004\000\002\005\005\000" +
    "\002\005\003\000\002\245\011\000\002\247\010\000\002" +
    "\247\003\000\002\246\003\000\002\246\003\000\002\246" +
    "\003\000\002\251\003\000\002\251\006\000\002\250\005" +
    "\000\002\250\003\000\002\236\010\000\002\237\004\000" +
    "\002\237\004\000\002\240\003\000\002\240\003\000\002" +
    "\240\003\000\002\241\005\000\002\241\003\000\002\242" +
    "\003\000\002\242\003\000\002\243\004\000\002\243\006" +
    "\000\002\243\006\000\002\243\004\000\002\243\006\000" +
    "\002\243\006\000\002\244\006\000\002\226\023\000\002" +
    "\227\003\000\002\227\003\000\002\231\003\000\002\231" +
    "\007\000\002\231\003\000\002\232\006\000\002\230\003" +
    "\000\002\230\003\000\002\223\005\000\002\223\005\000" +
    "\002\224\006\000\002\224\004\000\002\224\003\000\002" +
    "\225\004\000\002\225\003\000\002\204\007\000\002\204" +
    "\006\000\002\205\007\000\002\205\003\000\002\202\006" +
    "\000\002\203\006\000\002\203\003\000\002\207\015\000" +
    "\002\210\004\000\002\210\003\000\002\211\003\000\002" +
    "\211\003\000\002\212\003\000\002\212\003\000\002\213" +
    "\007\000\002\214\004\000\002\214\003\000\002\215\003" +
    "\000\002\215\003\000\002\215\003\000\002\215\003\000" +
    "\002\216\004\000\002\216\003\000\002\217\003\000\002" +
    "\217\003\000\002\217\005\000\002\220\004\000\002\220" +
    "\003\000\002\221\003\000\002\221\003\000\002\222\003" +
    "\000\002\222\003\000\002\163\004\000\002\164\004\000" +
    "\002\164\004\000\002\164\004\000\002\164\004\000\002" +
    "\164\004\000\002\165\004\000\002\166\003\000\002\166" +
    "\003\000\002\167\006\000\002\167\004\000\002\170\006" +
    "\000\002\171\003\000\002\171\003\000\002\172\003\000" +
    "\002\172\003\000\002\172\003\000\002\172\003\000\002" +
    "\172\003\000\002\172\003\000\002\172\003\000\002\173" +
    "\004\000\002\174\005\000\002\174\004\000\002\174\004" +
    "\000\002\175\003\000\002\176\006\000\002\176\005\000" +
    "\002\176\006\000\002\176\004\000\002\233\004\000\002" +
    "\233\003\000\002\177\005\000\002\200\004\000\002\201" +
    "\005\000\002\201\003\000\002\201\005\000\002\201\005" +
    "\000\002\162\004\000\002\162\003\000\002\125\004\000" +
    "\002\126\004\000\002\126\005\000\002\126\004\000\002" +
    "\126\004\000\002\126\004\000\002\127\004\000\002\130" +
    "\010\000\002\130\004\000\002\130\003\000\002\130\003" +
    "\000\002\131\006\000\002\131\006\000\002\131\006\000" +
    "\002\131\006\000\002\131\006\000\002\131\003\000\002" +
    "\142\004\000\002\142\003\000\002\132\007\000\002\132" +
    "\003\000\002\133\003\000\002\133\003\000\002\133\003" +
    "\000\002\133\003\000\002\134\011\000\002\135\005\000" +
    "\002\235\004\000\002\235\003\000\002\234\003\000\002" +
    "\234\003\000\002\234\003\000\002\136\006\000\002\136" +
    "\010\000\002\136\003\000\002\137\006\000\002\140\005" +
    "\000\002\140\003\000\002\141\004\000\002\145\006\000" +
    "\002\146\007\000\002\147\004\000\002\147\004\000\002" +
    "\147\003\000\002\150\004\000\002\151\005\000\002\151" +
    "\003\000\002\152\004\000\002\152\003\000\002\153\006" +
    "\000\002\153\006\000\002\153\003\000\002\153\003\000" +
    "\002\153\003\000\002\153\006\000\002\153\003\000\002" +
    "\153\003\000\002\153\003\000\002\153\003\000\002\153" +
    "\003\000\002\153\003\000\002\153\003\000\002\153\006" +
    "\000\002\153\003\000\002\153\003\000\002\153\003\000" +
    "\002\153\003\000\002\153\010\000\002\153\010\000\002" +
    "\153\010\000\002\154\004\000\002\154\003\000\002\155" +
    "\010\000\002\155\003\000\002\155\004\000\002\155\005" +
    "\000\002\155\014\000\002\155\004\000\002\155\006\000" +
    "\002\155\004\000\002\161\006\000\002\161\003\000\002" +
    "\143\010\000\002\143\003\000\002\156\003\000\002\156" +
    "\003\000\002\157\003\000\002\144\003\000\002\144\005" +
    "\000\002\071\013\000\002\072\003\000\002\072\004\000" +
    "\002\073\003\000\002\073\003\000\002\073\004\000\002" +
    "\073\003\000\002\074\005\000\002\075\003\000\002\075" +
    "\003\000\002\075\005\000\002\076\004\000\002\076\003" +
    "\000\002\077\003\000\002\077\003\000\002\100\006\000" +
    "\002\100\006\000\002\100\006\000\002\100\006\000\002" +
    "\100\006\000\002\100\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\004\000\002\102\003\000\002\102\003" +
    "\000\002\103\004\000\002\103\004\000\002\103\003\000" +
    "\002\104\003\000\002\104\003\000\002\105\003\000\002" +
    "\067\005\000\002\106\003\000\002\106\003\000\002\106" +
    "\003\000\002\106\003\000\002\106\003\000\002\107\005" +
    "\000\002\110\004\000\002\110\003\000\002\111\004\000" +
    "\002\111\004\000\002\111\003\000\002\111\003\000\002" +
    "\112\013\000\002\112\003\000\002\113\003\000\002\113" +
    "\004\000\002\113\004\000\002\113\004\000\002\113\003" +
    "\000\002\114\003\000\002\114\003\000\002\116\006\000" +
    "\002\116\003\000\002\117\004\000\002\117\003\000\002" +
    "\120\006\000\002\120\006\000\002\121\004\000\002\121" +
    "\003\000\002\122\007\000\002\122\007\000\002\122\003" +
    "\000\002\123\003\000\002\123\003\000\002\123\003\000" +
    "\002\124\004\000\002\124\003\000\002\056\010\000\002" +
    "\056\010\000\002\057\003\000\002\057\003\000\002\060" +
    "\005\000\002\060\003\000\002\061\004\000\002\062\005" +
    "\000\002\062\003\000\002\063\006\000\002\064\004\000" +
    "\002\065\005\000\002\065\003\000\002\066\004\000\002" +
    "\066\003\000\002\042\004\000\002\043\004\000\002\043" +
    "\003\000\002\041\005\000\002\041\003\000\002\041\003" +
    "\000\002\041\004\000\002\041\004\000\002\041\006\000" +
    "\002\044\004\000\002\045\004\000\002\045\003\000\002" +
    "\046\006\000\002\047\003\000\002\047\003\000\002\050" +
    "\005\000\002\051\005\000\002\051\003\000\002\052\004" +
    "\000\002\053\003\000\002\053\003\000\002\054\006\000" +
    "\002\055\005\000\002\055\003\000\002\040\005\000\002" +
    "\002\012\000\002\025\004\000\002\027\007\000\002\027" +
    "\003\000\002\026\003\000\002\031\005\000\002\031\005" +
    "\000\002\031\003\000\002\032\005\000\002\032\005\000" +
    "\002\032\003\000\002\033\005\000\002\033\003\000\002" +
    "\033\003\000\002\034\003\000\002\034\003\000\002\036" +
    "\003\000\002\037\003\000\002\037\003\000\002\013\010" +
    "\000\002\010\003\000\002\010\003\000\002\014\005\000" +
    "\002\014\003\000\002\017\005\000\002\017\003\000\002" +
    "\020\003\000\002\020\003\000\002\016\007\000\002\016" +
    "\003\000\002\021\004\000\002\021\003\000\002\022\003" +
    "\000\002\022\006\000\002\023\003\000\002\023\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\206\004\000\002\007\003\000\002\007" +
    "\003\000\002\007\003\000\002\007\003\000\002\007\003" +
    "\000\002\007\003\000\002\007\006\000\002\007\003\000" +
    "\002\007\003\000\002\015\004\000\002\011\003\000\002" +
    "\011\004\000\002\012\004\000\002\012\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u032a\000\042\003\030\340\016\373\047\u0101\015\u0102" +
    "\010\u0104\041\u010c\037\u0110\025\u0125\040\u0131\021\u0156\020" +
    "\u016a\014\u016b\024\u016d\034\u016e\046\u0177\036\001\002\000" +
    "\006\346\122\347\123\001\002\000\006\346\122\347\123" +
    "\001\002\000\006\346\122\347\123\001\002\000\006\346" +
    "\122\347\123\001\002\000\004\u0103\u0327\001\002\000\006" +
    "\346\122\347\123\001\002\000\006\346\122\347\123\001" +
    "\002\000\006\346\122\347\123\001\002\000\004\371\100" +
    "\001\002\000\006\342\u0307\371\000\001\002\000\006\341" +
    "\000\342\u0307\001\002\000\004\002\u0306\001\002\000\014" +
    "\u0103\u02bb\u0105\u02b8\u0106\u02b9\u0126\u02bc\u012f\u02ba\001\002\000" +
    "\004\371\100\001\002\000\060\002\uffee\003\uffee\340\uffee" +
    "\346\uffee\347\uffee\373\uffee\u0101\uffee\u0102\uffee\u0104\uffee\u010c" +
    "\uffee\u0110\uffee\u0125\uffee\u0131\uffee\u0156\uffee\u016a\uffee\u016b\uffee" +
    "\u016c\uffee\u016d\uffee\u016e\uffee\u0171\uffee\u0175\uffee\u0176\uffee\u0177" +
    "\uffee\001\002\000\006\346\122\347\123\001\002\000\006" +
    "\u0172\u02b4\u0173\u02b3\001\002\000\044\342\u0233\343\000\354" +
    "\000\365\000\366\000\370\000\371\000\377\u0230\u010a\000" +
    "\u0111\u022f\u0112\000\u0113\000\u0114\000\u0115\000\u0116\000\u0118" +
    "\u0232\u0164\000\001\002\000\006\346\122\347\123\001\002" +
    "\000\006\346\122\347\123\001\002\000\060\002\uffeb\003" +
    "\uffeb\340\uffeb\346\uffeb\347\uffeb\373\uffeb\u0101\uffeb\u0102\uffeb" +
    "\u0104\uffeb\u010c\uffeb\u0110\uffeb\u0125\uffeb\u0131\uffeb\u0156\uffeb\u016a" +
    "\uffeb\u016b\uffeb\u016c\uffeb\u016d\uffeb\u016e\uffeb\u0171\uffeb\u0175\uffeb" +
    "\u0176\uffeb\u0177\uffeb\001\002\000\006\346\122\347\123\001" +
    "\002\000\006\346\122\347\123\001\002\000\006\346\122" +
    "\347\123\001\002\000\006\371\100\u0164\052\001\002\000" +
    "\014\346\000\347\000\371\100\u0129\000\u0164\052\001\002" +
    "\000\004\u016b\024\001\002\000\006\371\000\u010e\u01cb\001" +
    "\002\000\032\353\214\u0103\211\u0105\000\u0106\203\u0126\204" +
    "\u012f\212\u013e\205\u013f\207\u0140\215\u0162\000\u0163\000\u016f" +
    "\000\001\002\000\016\u0103\133\u0105\126\u0106\125\u0126\127" +
    "\u0163\131\u016f\134\001\002\000\060\002\uffef\003\uffef\340" +
    "\uffef\346\uffef\347\uffef\373\uffef\u0101\uffef\u0102\uffef\u0104\uffef" +
    "\u010c\uffef\u0110\uffef\u0125\uffef\u0131\uffef\u0156\uffef\u016a\uffef\u016b" +
    "\uffef\u016c\uffef\u016d\uffef\u016e\uffef\u0171\uffef\u0175\uffef\u0176\uffef" +
    "\u0177\uffef\001\002\000\006\346\122\347\123\001\002\000" +
    "\060\002\ufffd\003\ufffd\340\ufffd\346\ufffd\347\ufffd\373\ufffd" +
    "\u0101\ufffd\u0102\ufffd\u0104\ufffd\u010c\ufffd\u0110\ufffd\u0125\ufffd\u0131" +
    "\ufffd\u0156\ufffd\u016a\ufffd\u016b\ufffd\u016c\ufffd\u016d\ufffd\u016e\ufffd" +
    "\u0171\ufffd\u0175\ufffd\u0176\ufffd\u0177\ufffd\001\002\000\044\002" +
    "\uffff\003\030\340\016\373\047\u0101\015\u0102\010\u0104\041" +
    "\u010c\037\u0110\025\u0125\040\u0131\021\u0156\020\u016a\014\u016b" +
    "\024\u016d\034\u016e\046\u0177\036\001\002\000\004\371\100" +
    "\001\002\000\006\u0130\050\u0164\052\001\002\000\004\u0109" +
    "\076\001\002\000\004\372\054\001\002\000\004\371\053" +
    "\001\002\000\142\341\ufe88\344\ufe88\346\ufe88\347\ufe88\351" +
    "\ufe88\352\ufe88\353\ufe88\367\ufe88\372\ufe88\374\ufe88\375\ufe88" +
    "\376\ufe88\377\ufe88\u0100\ufe88\u0103\ufe88\u010a\ufe88\u010f\ufe88\u0117" +
    "\ufe88\u011f\ufe88\u0121\ufe88\u0122\ufe88\u0127\ufe88\u0129\ufe88\u0132\ufe88" +
    "\u0134\ufe88\u0136\ufe88\u0137\ufe88\u013c\ufe88\u013e\ufe88\u0144\ufe88\u0145" +
    "\ufe88\u0146\ufe88\u0147\ufe88\u0148\ufe88\u0149\ufe88\u014a\ufe88\u014b\ufe88" +
    "\u014c\ufe88\u014d\ufe88\u014e\ufe88\u014f\ufe88\u0150\ufe88\u0151\ufe88\u0152" +
    "\ufe88\u0153\ufe88\u0154\ufe88\u0155\ufe88\u017d\ufe88\001\002\000\016" +
    "\354\064\365\065\366\056\370\062\u010a\061\u0164\052\001" +
    "\002\000\064\341\ufe9f\344\ufe9f\346\ufe9f\347\ufe9f\351\ufe9f" +
    "\352\ufe9f\353\ufe9f\374\ufe9f\375\ufe9f\376\ufe9f\377\ufe9f\u0100" +
    "\ufe9f\u010a\ufe9f\u010f\ufe9f\u0117\ufe9f\u011f\ufe9f\u0121\ufe9f\u0122\ufe9f" +
    "\u0127\ufe9f\u0132\ufe9f\u0134\ufe9f\u0136\ufe9f\u0137\ufe9f\u013e\ufe9f\u017d" +
    "\ufe9f\001\002\000\116\341\ufea1\343\ufea1\344\ufea1\346\ufea1" +
    "\347\ufea1\350\ufea1\351\ufea1\352\ufea1\353\ufea1\354\ufea1\365" +
    "\ufea1\366\ufea1\370\ufea1\371\ufea1\374\ufea1\375\ufea1\376\ufea1" +
    "\377\ufea1\u0100\ufea1\u010a\ufea1\u010f\ufea1\u0112\ufea1\u0113\ufea1\u0114" +
    "\ufea1\u0115\ufea1\u0116\ufea1\u0117\ufea1\u011f\ufea1\u0121\ufea1\u0122\ufea1" +
    "\u0127\ufea1\u0132\ufea1\u0134\ufea1\u0136\ufea1\u0137\ufea1\u013e\ufea1\u0164" +
    "\ufea1\u017d\ufea1\001\002\000\064\341\ufe8b\344\ufe8b\346\ufe8b" +
    "\347\ufe8b\351\ufe8b\352\ufe8b\353\ufe8b\374\ufe8b\375\ufe8b\376" +
    "\ufe8b\377\ufe8b\u0100\ufe8b\u010a\ufe8b\u010f\ufe8b\u0117\ufe8b\u011f\ufe8b" +
    "\u0121\ufe8b\u0122\ufe8b\u0127\ufe8b\u0132\ufe8b\u0134\ufe8b\u0136\ufe8b\u0137" +
    "\ufe8b\u013e\ufe8b\u017d\ufe8b\001\002\000\064\341\ufe9e\344\ufe9e" +
    "\346\ufe9e\347\ufe9e\351\ufe9e\352\ufe9e\353\ufe9e\374\ufe9e\375" +
    "\ufe9e\376\ufe9e\377\ufe9e\u0100\ufe9e\u010a\ufe9e\u010f\ufe9e\u0117\ufe9e" +
    "\u011f\ufe9e\u0121\ufe9e\u0122\ufe9e\u0127\ufe9e\u0132\ufe9e\u0134\ufe9e\u0136" +
    "\ufe9e\u0137\ufe9e\u013e\ufe9e\u017d\ufe9e\001\002\000\064\341\ufe8a" +
    "\344\ufe8a\346\ufe8a\347\ufe8a\351\ufe8a\352\ufe8a\353\ufe8a\374" +
    "\ufe8a\375\ufe8a\376\ufe8a\377\ufe8a\u0100\ufe8a\u010a\ufe8a\u010f\ufe8a" +
    "\u0117\ufe8a\u011f\ufe8a\u0121\ufe8a\u0122\ufe8a\u0127\ufe8a\u0132\ufe8a\u0134" +
    "\ufe8a\u0136\ufe8a\u0137\ufe8a\u013e\ufe8a\u017d\ufe8a\001\002\000\064" +
    "\341\ufea0\344\ufea0\346\ufea0\347\ufea0\351\ufea0\352\ufea0\353" +
    "\ufea0\374\ufea0\375\ufea0\376\ufea0\377\ufea0\u0100\ufea0\u010a\ufea0" +
    "\u010f\ufea0\u0117\ufea0\u011f\ufea0\u0121\ufea0\u0122\ufea0\u0127\ufea0\u0132" +
    "\ufea0\u0134\ufea0\u0136\ufea0\u0137\ufea0\u013e\ufea0\u017d\ufea0\001\002" +
    "\000\064\341\ufe89\344\ufe89\346\ufe89\347\ufe89\351\ufe89\352" +
    "\ufe89\353\ufe89\374\ufe89\375\ufe89\376\ufe89\377\ufe89\u0100\ufe89" +
    "\u010a\ufe89\u010f\ufe89\u0117\ufe89\u011f\ufe89\u0121\ufe89\u0122\ufe89\u0127" +
    "\ufe89\u0132\ufe89\u0134\ufe89\u0136\ufe89\u0137\ufe89\u013e\ufe89\u017d\ufe89" +
    "\001\002\000\064\341\ufe8c\344\ufe8c\346\ufe8c\347\ufe8c\351" +
    "\ufe8c\352\ufe8c\353\ufe8c\374\ufe8c\375\ufe8c\376\ufe8c\377\ufe8c" +
    "\u0100\ufe8c\u010a\ufe8c\u010f\ufe8c\u0117\ufe8c\u011f\ufe8c\u0121\ufe8c\u0122" +
    "\ufe8c\u0127\ufe8c\u0132\ufe8c\u0134\ufe8c\u0136\ufe8c\u0137\ufe8c\u013e\ufe8c" +
    "\u017d\ufe8c\001\002\000\116\341\ufea2\343\ufea2\344\ufea2\346" +
    "\ufea2\347\ufea2\350\ufea2\351\ufea2\352\ufea2\353\ufea2\354\ufea2" +
    "\365\ufea2\366\ufea2\370\ufea2\371\ufea2\374\ufea2\375\ufea2\376" +
    "\ufea2\377\ufea2\u0100\ufea2\u010a\ufea2\u010f\ufea2\u0112\ufea2\u0113\ufea2" +
    "\u0114\ufea2\u0115\ufea2\u0116\ufea2\u0117\ufea2\u011f\ufea2\u0121\ufea2\u0122" +
    "\ufea2\u0127\ufea2\u0132\ufea2\u0134\ufea2\u0136\ufea2\u0137\ufea2\u013e\ufea2" +
    "\u0164\ufea2\u017d\ufea2\001\002\000\010\346\000\347\000\374" +
    "\067\001\002\000\004\u0164\052\001\002\000\006\346\uffbf" +
    "\347\uffbf\001\002\000\006\346\uffbc\347\uffbc\001\002\000" +
    "\004\372\073\001\002\000\016\354\064\365\065\366\056" +
    "\370\062\u010a\061\u0164\052\001\002\000\010\346\000\347" +
    "\000\374\067\001\002\000\006\346\uffbd\347\uffbd\001\002" +
    "\000\010\346\000\347\000\374\067\001\002\000\006\346" +
    "\uffbe\347\uffbe\001\002\000\264\341\000\343\000\344\000" +
    "\345\115\346\000\347\000\351\000\352\000\353\000\354" +
    "\000\355\000\356\000\357\000\360\000\361\000\363\000" +
    "\364\000\365\000\366\000\367\000\370\000\371\000\372" +
    "\000\373\000\374\000\375\000\376\000\377\000\u0100\000" +
    "\u0104\000\u0109\000\u010a\000\u010d\000\u010e\000\u010f\000\u0117" +
    "\000\u0119\000\u011a\000\u011b\000\u011c\000\u011d\000\u011f\000" +
    "\u0121\000\u0122\000\u0123\000\u0124\000\u0127\000\u0128\000\u0129" +
    "\000\u0132\000\u0134\000\u0136\000\u0137\000\u013b\000\u013c\000" +
    "\u013e\000\u0143\000\u0144\000\u0145\000\u0146\000\u0147\000\u0148" +
    "\000\u0149\000\u014a\000\u014b\000\u014c\000\u014d\000\u014e\000" +
    "\u014f\000\u0150\000\u0151\000\u0152\000\u0153\000\u0154\000\u0155" +
    "\000\u0156\000\u0159\000\u015a\000\u015b\000\u015c\000\u015d\000" +
    "\u015e\000\u0161\000\u0164\000\u0178\000\u0179\000\u017a\000\u017b" +
    "\000\u017d\000\001\002\000\022\346\000\347\000\354\064" +
    "\365\065\366\056\370\062\u010a\061\u0164\052\001\002\000" +
    "\014\344\ufe89\346\ufe89\347\ufe89\372\112\374\ufe89\001\002" +
    "\000\010\344\uffc2\346\uffc2\347\uffc2\001\002\000\006\346" +
    "\uffc5\347\uffc5\001\002\000\012\344\000\346\000\347\000" +
    "\374\106\001\002\000\024\344\000\346\000\347\000\354" +
    "\064\365\065\366\056\370\062\u010a\061\u0164\052\001\002" +
    "\000\010\344\uffc3\346\uffc3\347\uffc3\001\002\000\010\344" +
    "\uffc0\346\uffc0\347\uffc0\001\002\000\010\344\uffc1\346\uffc1" +
    "\347\uffc1\001\002\000\016\354\064\365\065\366\056\370" +
    "\062\u010a\061\u0164\052\001\002\000\012\344\000\346\000" +
    "\347\000\374\106\001\002\000\010\344\uffc4\346\uffc4\347" +
    "\uffc4\001\002\000\004\371\100\001\002\000\262\341\ufe7e" +
    "\343\ufe7e\344\ufe7e\346\ufe7e\347\ufe7e\351\ufe7e\352\ufe7e\353" +
    "\ufe7e\354\ufe7e\355\ufe7e\356\ufe7e\357\ufe7e\360\ufe7e\361\ufe7e" +
    "\363\ufe7e\364\ufe7e\365\ufe7e\366\ufe7e\367\ufe7e\370\ufe7e\371" +
    "\ufe7e\372\ufe7e\373\ufe7e\374\ufe7e\375\ufe7e\376\ufe7e\377\ufe7e" +
    "\u0100\ufe7e\u0104\ufe7e\u0109\ufe7e\u010a\ufe7e\u010d\ufe7e\u010e\ufe7e\u010f" +
    "\ufe7e\u0117\ufe7e\u0119\ufe7e\u011a\ufe7e\u011b\ufe7e\u011c\ufe7e\u011d\ufe7e" +
    "\u011f\ufe7e\u0121\ufe7e\u0122\ufe7e\u0123\ufe7e\u0124\ufe7e\u0127\ufe7e\u0128" +
    "\ufe7e\u0129\ufe7e\u0132\ufe7e\u0134\ufe7e\u0136\ufe7e\u0137\ufe7e\u013b\ufe7e" +
    "\u013c\ufe7e\u013e\ufe7e\u0143\ufe7e\u0144\ufe7e\u0145\ufe7e\u0146\ufe7e\u0147" +
    "\ufe7e\u0148\ufe7e\u0149\ufe7e\u014a\ufe7e\u014b\ufe7e\u014c\ufe7e\u014d\ufe7e" +
    "\u014e\ufe7e\u014f\ufe7e\u0150\ufe7e\u0151\ufe7e\u0152\ufe7e\u0153\ufe7e\u0154" +
    "\ufe7e\u0155\ufe7e\u0156\ufe7e\u0159\ufe7e\u015a\ufe7e\u015b\ufe7e\u015c\ufe7e" +
    "\u015d\ufe7e\u015e\ufe7e\u0161\ufe7e\u0164\ufe7e\u0178\ufe7e\u0179\ufe7e\u017a" +
    "\ufe7e\u017b\ufe7e\u017d\ufe7e\001\002\000\262\341\ufe7d\343\ufe7d" +
    "\344\ufe7d\346\ufe7d\347\ufe7d\351\ufe7d\352\ufe7d\353\ufe7d\354" +
    "\ufe7d\355\ufe7d\356\ufe7d\357\ufe7d\360\ufe7d\361\ufe7d\363\ufe7d" +
    "\364\ufe7d\365\ufe7d\366\ufe7d\367\ufe7d\370\ufe7d\371\ufe7d\372" +
    "\ufe7d\373\ufe7d\374\ufe7d\375\ufe7d\376\ufe7d\377\ufe7d\u0100\ufe7d" +
    "\u0104\ufe7d\u0109\ufe7d\u010a\ufe7d\u010d\ufe7d\u010e\ufe7d\u010f\ufe7d\u0117" +
    "\ufe7d\u0119\ufe7d\u011a\ufe7d\u011b\ufe7d\u011c\ufe7d\u011d\ufe7d\u011f\ufe7d" +
    "\u0121\ufe7d\u0122\ufe7d\u0123\ufe7d\u0124\ufe7d\u0127\ufe7d\u0128\ufe7d\u0129" +
    "\ufe7d\u0132\ufe7d\u0134\ufe7d\u0136\ufe7d\u0137\ufe7d\u013b\ufe7d\u013c\ufe7d" +
    "\u013e\ufe7d\u0143\ufe7d\u0144\ufe7d\u0145\ufe7d\u0146\ufe7d\u0147\ufe7d\u0148" +
    "\ufe7d\u0149\ufe7d\u014a\ufe7d\u014b\ufe7d\u014c\ufe7d\u014d\ufe7d\u014e\ufe7d" +
    "\u014f\ufe7d\u0150\ufe7d\u0151\ufe7d\u0152\ufe7d\u0153\ufe7d\u0154\ufe7d\u0155" +
    "\ufe7d\u0156\ufe7d\u0159\ufe7d\u015a\ufe7d\u015b\ufe7d\u015c\ufe7d\u015d\ufe7d" +
    "\u015e\ufe7d\u0161\ufe7d\u0164\ufe7d\u0178\ufe7d\u0179\ufe7d\u017a\ufe7d\u017b" +
    "\ufe7d\u017d\ufe7d\001\002\000\262\341\ufe7c\343\ufe7c\344\ufe7c" +
    "\346\ufe7c\347\ufe7c\351\ufe7c\352\ufe7c\353\ufe7c\354\ufe7c\355" +
    "\ufe7c\356\ufe7c\357\ufe7c\360\ufe7c\361\ufe7c\363\ufe7c\364\ufe7c" +
    "\365\ufe7c\366\ufe7c\367\ufe7c\370\ufe7c\371\ufe7c\372\ufe7c\373" +
    "\ufe7c\374\ufe7c\375\ufe7c\376\ufe7c\377\ufe7c\u0100\ufe7c\u0104\ufe7c" +
    "\u0109\ufe7c\u010a\ufe7c\u010d\ufe7c\u010e\ufe7c\u010f\ufe7c\u0117\ufe7c\u0119" +
    "\ufe7c\u011a\ufe7c\u011b\ufe7c\u011c\ufe7c\u011d\ufe7c\u011f\ufe7c\u0121\ufe7c" +
    "\u0122\ufe7c\u0123\ufe7c\u0124\ufe7c\u0127\ufe7c\u0128\ufe7c\u0129\ufe7c\u0132" +
    "\ufe7c\u0134\ufe7c\u0136\ufe7c\u0137\ufe7c\u013b\ufe7c\u013c\ufe7c\u013e\ufe7c" +
    "\u0143\ufe7c\u0144\ufe7c\u0145\ufe7c\u0146\ufe7c\u0147\ufe7c\u0148\ufe7c\u0149" +
    "\ufe7c\u014a\ufe7c\u014b\ufe7c\u014c\ufe7c\u014d\ufe7c\u014e\ufe7c\u014f\ufe7c" +
    "\u0150\ufe7c\u0151\ufe7c\u0152\ufe7c\u0153\ufe7c\u0154\ufe7c\u0155\ufe7c\u0156" +
    "\ufe7c\u0159\ufe7c\u015a\ufe7c\u015b\ufe7c\u015c\ufe7c\u015d\ufe7c\u015e\ufe7c" +
    "\u0161\ufe7c\u0164\ufe7c\u0178\ufe7c\u0179\ufe7c\u017a\ufe7c\u017b\ufe7c\u017d" +
    "\ufe7c\001\002\000\060\002\ufffe\003\ufffe\340\ufffe\346\ufffe" +
    "\347\ufffe\373\ufffe\u0101\ufffe\u0102\ufffe\u0104\ufffe\u010c\ufffe\u0110" +
    "\ufffe\u0125\ufffe\u0131\ufffe\u0156\ufffe\u016a\ufffe\u016b\ufffe\u016c\ufffe" +
    "\u016d\ufffe\u016e\ufffe\u0171\ufffe\u0175\ufffe\u0176\ufffe\u0177\ufffe\001" +
    "\002\000\060\002\ufe9c\003\ufe9c\340\ufe9c\346\ufe9c\347\ufe9c" +
    "\373\ufe9c\u0101\ufe9c\u0102\ufe9c\u0104\ufe9c\u010c\ufe9c\u0110\ufe9c\u0125" +
    "\ufe9c\u0131\ufe9c\u0156\ufe9c\u016a\ufe9c\u016b\ufe9c\u016c\ufe9c\u016d\ufe9c" +
    "\u016e\ufe9c\u0171\ufe9c\u0175\ufe9c\u0176\ufe9c\u0177\ufe9c\001\002\000" +
    "\060\002\ufe9b\003\ufe9b\340\ufe9b\346\ufe9b\347\ufe9b\373\ufe9b" +
    "\u0101\ufe9b\u0102\ufe9b\u0104\ufe9b\u010c\ufe9b\u0110\ufe9b\u0125\ufe9b\u0131" +
    "\ufe9b\u0156\ufe9b\u016a\ufe9b\u016b\ufe9b\u016c\ufe9b\u016d\ufe9b\u016e\ufe9b" +
    "\u0171\ufe9b\u0175\ufe9b\u0176\ufe9b\u0177\ufe9b\001\002\000\060\002" +
    "\ufff7\003\ufff7\340\ufff7\346\ufff7\347\ufff7\373\ufff7\u0101\ufff7" +
    "\u0102\ufff7\u0104\ufff7\u010c\ufff7\u0110\ufff7\u0125\ufff7\u0131\ufff7\u0156" +
    "\ufff7\u016a\ufff7\u016b\ufff7\u016c\ufff7\u016d\ufff7\u016e\ufff7\u0171\ufff7" +
    "\u0175\ufff7\u0176\ufff7\u0177\ufff7\001\002\000\006\371\000\u0107" +
    "\141\001\002\000\006\371\000\u0107\141\001\002\000\006" +
    "\371\000\u0107\141\001\002\000\006\346\ufec9\347\ufec9\001" +
    "\002\000\004\371\100\001\002\000\006\346\ufec5\347\ufec5" +
    "\001\002\000\006\371\000\u0107\141\001\002\000\004\371" +
    "\100\001\002\000\006\346\ufec4\347\ufec4\001\002\000\006" +
    "\346\ufec2\347\ufec2\001\002\000\004\371\ufec7\001\002\000" +
    "\004\371\100\001\002\000\004\u0108\142\001\002\000\004" +
    "\371\ufec8\001\002\000\010\346\000\347\000\374\145\001" +
    "\002\000\006\346\ufec6\347\ufec6\001\002\000\004\371\100" +
    "\001\002\000\006\346\ufec0\347\ufec0\001\002\000\006\346" +
    "\ufebe\347\ufebe\001\002\000\006\346\ufebf\347\ufebf\001\002" +
    "\000\006\346\ufec3\347\ufec3\001\002\000\004\371\100\001" +
    "\002\000\010\346\000\347\000\374\154\001\002\000\004" +
    "\371\100\001\002\000\006\346\ufec1\347\ufec1\001\002\000" +
    "\024\344\ufeb2\346\ufeb2\347\ufeb2\351\ufeb2\u0121\ufeb2\u0122\ufeb2" +
    "\u0123\ufeb2\u0124\ufeb2\u017d\ufeb2\001\002\000\026\344\000\346" +
    "\000\347\000\351\000\374\154\u0121\000\u0122\000\u0123\000" +
    "\u0124\000\u017d\000\001\002\000\024\344\ufeb3\346\ufeb3\347" +
    "\ufeb3\351\ufeb3\u0121\ufeb3\u0122\ufeb3\u0123\ufeb3\u0124\ufeb3\u017d\ufeb3" +
    "\001\002\000\004\371\100\001\002\000\006\371\100\u0109" +
    "\164\001\002\000\006\346\ufebb\347\ufebb\001\002\000\004" +
    "\371\100\001\002\000\010\346\000\347\000\374\154\001" +
    "\002\000\006\346\ufebc\347\ufebc\001\002\000\006\346\ufebd" +
    "\347\ufebd\001\002\000\006\346\ufeb7\347\ufeb7\001\002\000" +
    "\010\346\000\347\000\374\172\001\002\000\004\371\100" +
    "\001\002\000\006\346\ufeba\347\ufeba\001\002\000\006\346" +
    "\ufeb8\347\ufeb8\001\002\000\004\u0109\164\001\002\000\006" +
    "\346\ufeb9\347\ufeb9\001\002\000\004\371\100\001\002\000" +
    "\010\346\000\347\000\374\154\001\002\000\006\346\ufeb4" +
    "\347\ufeb4\001\002\000\006\346\uff77\347\uff77\001\002\000" +
    "\004\371\100\001\002\000\004\371\u019a\001\002\000\004" +
    "\u0105\uff62\001\002\000\010\u0162\u014a\u0163\u0149\u016f\u014b\001" +
    "\002\000\006\343\uff61\u0105\uff61\001\002\000\012\u0105\uff5f" +
    "\u0162\uffb6\u0163\uffb6\u016f\uffb6\001\002\000\004\371\100\001" +
    "\002\000\004\371\100\001\002\000\004\u0105\217\001\002" +
    "\000\004\u0156\216\001\002\000\006\343\uff60\u0105\uff60\001" +
    "\002\000\010\u0162\uffb7\u0163\uffb7\u016f\uffb7\001\002\000\004" +
    "\371\100\001\002\000\006\346\uff75\347\uff75\001\002\000" +
    "\004\u0109\222\001\002\000\004\371\100\001\002\000\004" +
    "\343\224\001\002\000\004\371\100\001\002\000\012\344" +
    "\000\374\000\u0123\245\u0124\244\001\002\000\004\344\227" +
    "\001\002\000\012\346\000\347\000\u0109\230\u0141\233\001" +
    "\002\000\004\371\100\001\002\000\006\346\uff5e\347\uff5e" +
    "\001\002\000\006\346\uff55\347\uff55\001\002\000\004\343" +
    "\234\001\002\000\004\371\100\001\002\000\004\344\236" +
    "\001\002\000\006\346\uff57\347\uff57\001\002\000\004\343" +
    "\240\001\002\000\004\371\100\001\002\000\004\344\242" +
    "\001\002\000\012\346\000\347\000\u0109\230\u0141\233\001" +
    "\002\000\006\346\uff56\347\uff56\001\002\000\006\344\uff59" +
    "\374\uff59\001\002\000\006\344\uff5a\374\uff5a\001\002\000" +
    "\006\344\uff58\374\uff58\001\002\000\006\344\000\374\250" +
    "\001\002\000\004\371\100\001\002\000\004\344\uff5b\001" +
    "\002\000\004\344\uff5d\001\002\000\004\344\uff5c\001\002" +
    "\000\006\343\260\u0117\000\001\002\000\006\346\uff72\347" +
    "\uff72\001\002\000\004\u0117\265\001\002\000\004\u0117\uff52" +
    "\001\002\000\004\371\100\001\002\000\006\344\000\374" +
    "\154\001\002\000\004\344\263\001\002\000\004\u0117\uff53" +
    "\001\002\000\004\344\uff51\001\002\000\004\u0110\025\001" +
    "\002\000\006\346\uff54\347\uff54\001\002\000\004\343\271" +
    "\001\002\000\006\346\uff74\347\uff74\001\002\000\026\371" +
    "\100\u010a\277\u010f\301\u0127\306\u0132\272\u0134\307\u0136\304" +
    "\u0137\303\u0138\302\u013e\276\001\002\000\004\343\u0143\001" +
    "\002\000\012\344\000\346\000\347\000\374\u013f\001\002" +
    "\000\012\344\uff49\346\uff49\347\uff49\374\uff49\001\002\000" +
    "\012\344\uff20\346\uff20\347\uff20\374\uff20\001\002\000\034" +
    "\343\341\344\000\346\000\347\000\374\000\u010a\000\u010f" +
    "\000\u0127\000\u0132\000\u0134\000\u0136\000\u0137\000\u013e\000" +
    "\001\002\000\032\344\uff2e\346\uff2e\347\uff2e\374\uff2e\u010a" +
    "\uff2e\u010f\uff2e\u0127\uff2e\u0132\uff2e\u0134\uff2e\u0136\uff2e\u0137\uff2e" +
    "\u013e\uff2e\001\002\000\052\367\u010b\u013c\u0118\u0144\u010f\u0145" +
    "\u0113\u0146\u011b\u0147\u010d\u0148\u0115\u0149\u0110\u014a\u010c\u014b\u0111" +
    "\u014c\u0119\u014d\u0117\u014e\u010a\u014f\u011a\u0150\u0114\u0151\u0109\u0152" +
    "\u011d\u0153\u0116\u0154\u010e\u0155\u011c\001\002\000\016\354\064" +
    "\365\065\366\056\370\062\u010a\061\u0164\052\001\002\000" +
    "\004\371\100\001\002\000\004\343\354\001\002\000\004" +
    "\u010a\353\001\002\000\004\344\345\001\002\000\004\u0133" +
    "\321\001\002\000\004\u0133\310\001\002\000\004\343\311" +
    "\001\002\000\004\371\100\001\002\000\004\344\313\001" +
    "\002\000\004\u0135\314\001\002\000\004\371\100\001\002" +
    "\000\004\343\316\001\002\000\004\371\100\001\002\000" +
    "\004\344\320\001\002\000\032\344\uff2b\346\uff2b\347\uff2b" +
    "\374\uff2b\u010a\uff2b\u010f\uff2b\u0127\uff2b\u0132\uff2b\u0134\uff2b\u0136" +
    "\uff2b\u0137\uff2b\u013e\uff2b\001\002\000\030\343\000\u010a\277" +
    "\u010f\301\u0127\306\u0132\272\u0134\307\u0136\304\u0137\303\u013e" +
    "\323\u013f\207\u0140\215\001\002\000\032\344\uff24\346\uff24" +
    "\347\uff24\374\uff24\u010a\uff24\u010f\uff24\u0127\uff24\u0132\uff24\u0134" +
    "\uff24\u0136\uff24\u0137\uff24\u013e\uff24\001\002\000\034\343\341" +
    "\344\000\346\000\347\000\374\000\u010a\000\u010f\000\u0127" +
    "\000\u0132\000\u0134\000\u0136\000\u0137\000\u013e\000\001\002" +
    "\000\004\343\uff5f\001\002\000\032\344\uff2c\346\uff2c\347" +
    "\uff2c\374\uff2c\u010a\uff2c\u010f\uff2c\u0127\uff2c\u0132\uff2c\u0134\uff2c" +
    "\u0136\uff2c\u0137\uff2c\u013e\uff2c\001\002\000\004\343\327\001" +
    "\002\000\004\371\100\001\002\000\012\344\000\374\154" +
    "\u0123\000\u0124\000\001\002\000\010\344\000\u0123\332\u0124" +
    "\333\001\002\000\014\344\ufedd\346\ufedd\347\ufedd\374\ufedd" +
    "\u017d\ufedd\001\002\000\014\344\ufedc\346\ufedc\347\ufedc\374" +
    "\ufedc\u017d\ufedc\001\002\000\014\344\ufedb\346\ufedb\347\ufedb" +
    "\374\ufedb\u017d\ufedb\001\002\000\004\344\336\001\002\000" +
    "\032\344\uff25\346\uff25\347\uff25\374\uff25\u010a\uff25\u010f\uff25" +
    "\u0127\uff25\u0132\uff25\u0134\uff25\u0136\uff25\u0137\uff25\u013e\uff25\001" +
    "\002\000\032\344\uff2d\346\uff2d\347\uff2d\374\uff2d\u010a\uff2d" +
    "\u010f\uff2d\u0127\uff2d\u0132\uff2d\u0134\uff2d\u0136\uff2d\u0137\uff2d\u013e" +
    "\uff2d\001\002\000\032\344\uff26\346\uff26\347\uff26\374\uff26" +
    "\u010a\uff26\u010f\uff26\u0127\uff26\u0132\uff26\u0134\uff26\u0136\uff26\u0137" +
    "\uff26\u013e\uff26\001\002\000\004\371\100\001\002\000\006" +
    "\344\000\374\154\001\002\000\004\344\344\001\002\000" +
    "\032\344\uff27\346\uff27\347\uff27\374\uff27\u010a\uff27\u010f\uff27" +
    "\u0127\uff27\u0132\uff27\u0134\uff27\u0136\uff27\u0137\uff27\u013e\uff27\001" +
    "\002\000\010\346\000\347\000\u0109\347\001\002\000\006" +
    "\346\uff4f\347\uff4f\001\002\000\006\371\100\u0127\351\001" +
    "\002\000\006\346\uff4c\347\uff4c\001\002\000\006\346\uff4d" +
    "\347\uff4d\001\002\000\006\346\uff4e\347\uff4e\001\002\000" +
    "\032\344\uff2a\346\uff2a\347\uff2a\374\uff2a\u010a\uff2a\u010f\uff2a" +
    "\u0127\uff2a\u0132\uff2a\u0134\uff2a\u0136\uff2a\u0137\uff2a\u013e\uff2a\001" +
    "\002\000\006\344\000\371\100\001\002\000\004\344\u0105" +
    "\001\002\000\024\355\361\356\364\357\362\360\371\361" +
    "\370\363\367\364\365\372\366\u013b\372\001\002\000\022" +
    "\344\ufe90\346\ufe90\347\ufe90\351\ufe90\u011f\ufe90\u0121\ufe90\u0122" +
    "\ufe90\u017d\ufe90\001\002\000\004\344\uff21\001\002\000\022" +
    "\343\ufe87\354\ufe87\365\ufe87\366\ufe87\370\ufe87\371\ufe87\u010a" +
    "\ufe87\u0164\ufe87\001\002\000\022\343\ufe85\354\ufe85\365\ufe85" +
    "\366\ufe85\370\ufe85\371\ufe85\u010a\ufe85\u0164\ufe85\001\002\000" +
    "\016\354\064\365\065\366\056\370\062\u010a\061\u0164\052" +
    "\001\002\000\022\343\ufe86\354\ufe86\365\ufe86\366\ufe86\370" +
    "\ufe86\371\ufe86\u010a\ufe86\u0164\ufe86\001\002\000\006\365\065" +
    "\366\056\001\002\000\022\343\ufe80\354\ufe80\365\ufe80\366" +
    "\ufe80\370\ufe80\371\ufe80\u010a\ufe80\u0164\ufe80\001\002\000\022" +
    "\343\ufe82\354\ufe82\365\ufe82\366\ufe82\370\ufe82\371\ufe82\u010a" +
    "\ufe82\u0164\ufe82\001\002\000\022\343\ufe83\354\ufe83\365\ufe83" +
    "\366\ufe83\370\ufe83\371\ufe83\u010a\ufe83\u0164\ufe83\001\002\000" +
    "\022\343\ufe84\354\ufe84\365\ufe84\366\ufe84\370\ufe84\371\ufe84" +
    "\u010a\ufe84\u0164\ufe84\001\002\000\022\343\ufe7f\354\ufe7f\365" +
    "\ufe7f\366\ufe7f\370\ufe7f\371\ufe7f\u010a\ufe7f\u0164\ufe7f\001\002" +
    "\000\004\352\374\001\002\000\004\365\375\001\002\000" +
    "\022\343\ufe81\354\ufe81\365\ufe81\366\ufe81\370\ufe81\371\ufe81" +
    "\u010a\ufe81\u0164\ufe81\001\002\000\026\344\000\346\000\347" +
    "\000\351\000\352\u0100\353\u0103\u011f\000\u0121\000\u0122\000" +
    "\u017d\000\001\002\000\022\344\ufe8f\346\ufe8f\347\ufe8f\351" +
    "\ufe8f\u011f\ufe8f\u0121\ufe8f\u0122\ufe8f\u017d\ufe8f\001\002\000\036" +
    "\344\ufe8e\346\ufe8e\347\ufe8e\351\ufe8e\371\ufe8e\u0112\ufe8e\u0113" +
    "\ufe8e\u0114\ufe8e\u0115\ufe8e\u0116\ufe8e\u011f\ufe8e\u0121\ufe8e\u0122\ufe8e" +
    "\u017d\ufe8e\001\002\000\024\344\000\346\000\347\000\351" +
    "\000\371\100\u011f\000\u0121\000\u0122\000\u017d\000\001\002" +
    "\000\022\344\ufe91\346\ufe91\347\ufe91\351\ufe91\u011f\ufe91\u0121" +
    "\ufe91\u0122\ufe91\u017d\ufe91\001\002\000\036\344\ufe8d\346\ufe8d" +
    "\347\ufe8d\351\ufe8d\371\ufe8d\u0112\ufe8d\u0113\ufe8d\u0114\ufe8d\u0115" +
    "\ufe8d\u0116\ufe8d\u011f\ufe8d\u0121\ufe8d\u0122\ufe8d\u017d\ufe8d\001\002" +
    "\000\022\344\ufe92\346\ufe92\347\ufe92\351\ufe92\u011f\ufe92\u0121" +
    "\ufe92\u0122\ufe92\u017d\ufe92\001\002\000\032\344\uff29\346\uff29" +
    "\347\uff29\374\uff29\u010a\uff29\u010f\uff29\u0127\uff29\u0132\uff29\u0134" +
    "\uff29\u0136\uff29\u0137\uff29\u013e\uff29\001\002\000\022\u010a\277" +
    "\u010f\301\u0127\306\u0132\272\u0134\307\u0136\304\u0137\303\u013e" +
    "\276\001\002\000\012\344\uff1f\346\uff1f\347\uff1f\374\uff1f" +
    "\001\002\000\032\344\uff28\346\uff28\347\uff28\374\uff28\u010a" +
    "\uff28\u010f\uff28\u0127\uff28\u0132\uff28\u0134\uff28\u0136\uff28\u0137\uff28" +
    "\u013e\uff28\001\002\000\050\344\uff38\346\uff38\347\uff38\374" +
    "\uff38\u010a\uff38\u010f\uff38\u0117\uff38\u0127\uff38\u0129\uff38\u0132\uff38" +
    "\u0134\uff38\u0136\uff38\u0137\uff38\u013e\uff38\u0143\uff38\u0165\uff38\u0166" +
    "\uff38\u0167\uff38\u016b\uff38\001\002\000\050\344\uff3b\346\uff3b" +
    "\347\uff3b\374\uff3b\u010a\uff3b\u010f\uff3b\u0117\uff3b\u0127\uff3b\u0129" +
    "\uff3b\u0132\uff3b\u0134\uff3b\u0136\uff3b\u0137\uff3b\u013e\uff3b\u0143\uff3b" +
    "\u0165\uff3b\u0166\uff3b\u0167\uff3b\u016b\uff3b\001\002\000\050\344" +
    "\uff35\346\uff35\347\uff35\374\uff35\u010a\uff35\u010f\uff35\u0117\uff35" +
    "\u0127\uff35\u0129\uff35\u0132\uff35\u0134\uff35\u0136\uff35\u0137\uff35\u013e" +
    "\uff35\u0143\uff35\u0165\uff35\u0166\uff35\u0167\uff35\u016b\uff35\001\002" +
    "\000\050\344\uff3f\346\uff3f\347\uff3f\374\uff3f\u010a\uff3f\u010f" +
    "\uff3f\u0117\uff3f\u0127\uff3f\u0129\uff3f\u0132\uff3f\u0134\uff3f\u0136\uff3f" +
    "\u0137\uff3f\u013e\uff3f\u0143\uff3f\u0165\uff3f\u0166\uff3f\u0167\uff3f\u016b" +
    "\uff3f\001\002\000\050\344\uff43\346\uff43\347\uff43\374\uff43" +
    "\u010a\uff43\u010f\uff43\u0117\uff43\u0127\uff43\u0129\uff43\u0132\uff43\u0134" +
    "\uff43\u0136\uff43\u0137\uff43\u013e\uff43\u0143\uff43\u0165\uff43\u0166\uff43" +
    "\u0167\uff43\u016b\uff43\001\002\000\004\343\u013a\001\002\000" +
    "\004\343\u0137\001\002\000\050\344\uff40\346\uff40\347\uff40" +
    "\374\uff40\u010a\uff40\u010f\uff40\u0117\uff40\u0127\uff40\u0129\uff40\u0132" +
    "\uff40\u0134\uff40\u0136\uff40\u0137\uff40\u013e\uff40\u0143\uff40\u0165\uff40" +
    "\u0166\uff40\u0167\uff40\u016b\uff40\001\002\000\050\344\uff3e\346" +
    "\uff3e\347\uff3e\374\uff3e\u010a\uff3e\u010f\uff3e\u0117\uff3e\u0127\uff3e" +
    "\u0129\uff3e\u0132\uff3e\u0134\uff3e\u0136\uff3e\u0137\uff3e\u013e\uff3e\u0143" +
    "\uff3e\u0165\uff3e\u0166\uff3e\u0167\uff3e\u016b\uff3e\001\002\000\032" +
    "\344\000\346\000\347\000\374\000\u010a\277\u010f\301\u0127" +
    "\306\u0132\272\u0134\307\u0136\304\u0137\303\u013e\276\001\002" +
    "\000\004\343\u012e\001\002\000\004\343\u012b\001\002\000" +
    "\052\343\u0128\344\uff42\346\uff42\347\uff42\374\uff42\u010a\uff42" +
    "\u010f\uff42\u0117\uff42\u0127\uff42\u0129\uff42\u0132\uff42\u0134\uff42\u0136" +
    "\uff42\u0137\uff42\u013e\uff42\u0143\uff42\u0165\uff42\u0166\uff42\u0167\uff42" +
    "\u016b\uff42\001\002\000\050\344\uff36\346\uff36\347\uff36\374" +
    "\uff36\u010a\uff36\u010f\uff36\u0117\uff36\u0127\uff36\u0129\uff36\u0132\uff36" +
    "\u0134\uff36\u0136\uff36\u0137\uff36\u013e\uff36\u0143\uff36\u0165\uff36\u0166" +
    "\uff36\u0167\uff36\u016b\uff36\001\002\000\050\344\uff3c\346\uff3c" +
    "\347\uff3c\374\uff3c\u010a\uff3c\u010f\uff3c\u0117\uff3c\u0127\uff3c\u0129" +
    "\uff3c\u0132\uff3c\u0134\uff3c\u0136\uff3c\u0137\uff3c\u013e\uff3c\u0143\uff3c" +
    "\u0165\uff3c\u0166\uff3c\u0167\uff3c\u016b\uff3c\001\002\000\004\343" +
    "\u0123\001\002\000\050\344\uff3d\346\uff3d\347\uff3d\374\uff3d" +
    "\u010a\uff3d\u010f\uff3d\u0117\uff3d\u0127\uff3d\u0129\uff3d\u0132\uff3d\u0134" +
    "\uff3d\u0136\uff3d\u0137\uff3d\u013e\uff3d\u0143\uff3d\u0165\uff3d\u0166\uff3d" +
    "\u0167\uff3d\u016b\uff3d\001\002\000\050\344\uff3a\346\uff3a\347" +
    "\uff3a\374\uff3a\u010a\uff3a\u010f\uff3a\u0117\uff3a\u0127\uff3a\u0129\uff3a" +
    "\u0132\uff3a\u0134\uff3a\u0136\uff3a\u0137\uff3a\u013e\uff3a\u0143\uff3a\u0165" +
    "\uff3a\u0166\uff3a\u0167\uff3a\u016b\uff3a\001\002\000\050\344\uff44" +
    "\346\uff44\347\uff44\374\uff44\u010a\uff44\u010f\uff44\u0117\uff44\u0127" +
    "\uff44\u0129\uff44\u0132\uff44\u0134\uff44\u0136\uff44\u0137\uff44\u013e\uff44" +
    "\u0143\uff44\u0165\uff44\u0166\uff44\u0167\uff44\u016b\uff44\001\002\000" +
    "\004\343\u011e\001\002\000\050\344\uff37\346\uff37\347\uff37" +
    "\374\uff37\u010a\uff37\u010f\uff37\u0117\uff37\u0127\uff37\u0129\uff37\u0132" +
    "\uff37\u0134\uff37\u0136\uff37\u0137\uff37\u013e\uff37\u0143\uff37\u0165\uff37" +
    "\u0166\uff37\u0167\uff37\u016b\uff37\001\002\000\010\365\065\366" +
    "\056\370\062\001\002\000\004\374\u0120\001\002\000\010" +
    "\365\065\366\056\370\062\001\002\000\004\344\u0122\001" +
    "\002\000\050\344\uff32\346\uff32\347\uff32\374\uff32\u010a\uff32" +
    "\u010f\uff32\u0117\uff32\u0127\uff32\u0129\uff32\u0132\uff32\u0134\uff32\u0136" +
    "\uff32\u0137\uff32\u013e\uff32\u0143\uff32\u0165\uff32\u0166\uff32\u0167\uff32" +
    "\u016b\uff32\001\002\000\010\365\065\366\056\370\062\001" +
    "\002\000\004\374\u0125\001\002\000\010\365\065\366\056" +
    "\370\062\001\002\000\004\344\u0127\001\002\000\050\344" +
    "\uff33\346\uff33\347\uff33\374\uff33\u010a\uff33\u010f\uff33\u0117\uff33" +
    "\u0127\uff33\u0129\uff33\u0132\uff33\u0134\uff33\u0136\uff33\u0137\uff33\u013e" +
    "\uff33\u0143\uff33\u0165\uff33\u0166\uff33\u0167\uff33\u016b\uff33\001\002" +
    "\000\004\u0116\u0129\001\002\000\004\344\u012a\001\002\000" +
    "\050\344\uff41\346\uff41\347\uff41\374\uff41\u010a\uff41\u010f\uff41" +
    "\u0117\uff41\u0127\uff41\u0129\uff41\u0132\uff41\u0134\uff41\u0136\uff41\u0137" +
    "\uff41\u013e\uff41\u0143\uff41\u0165\uff41\u0166\uff41\u0167\uff41\u016b\uff41" +
    "\001\002\000\010\365\065\366\056\370\062\001\002\000" +
    "\004\344\u012d\001\002\000\050\344\uff39\346\uff39\347\uff39" +
    "\374\uff39\u010a\uff39\u010f\uff39\u0117\uff39\u0127\uff39\u0129\uff39\u0132" +
    "\uff39\u0134\uff39\u0136\uff39\u0137\uff39\u013e\uff39\u0143\uff39\u0165\uff39" +
    "\u0166\uff39\u0167\uff39\u016b\uff39\001\002\000\010\365\065\366" +
    "\056\370\062\001\002\000\004\344\u0130\001\002\000\050" +
    "\344\uff45\346\uff45\347\uff45\374\uff45\u010a\uff45\u010f\uff45\u0117" +
    "\uff45\u0127\uff45\u0129\uff45\u0132\uff45\u0134\uff45\u0136\uff45\u0137\uff45" +
    "\u013e\uff45\u0143\uff45\u0165\uff45\u0166\uff45\u0167\uff45\u016b\uff45\001" +
    "\002\000\012\344\uff4a\346\uff4a\347\uff4a\374\uff4a\001\002" +
    "\000\032\344\000\346\000\347\000\374\000\u010a\277\u010f" +
    "\301\u0127\306\u0132\272\u0134\307\u0136\304\u0137\303\u013e\276" +
    "\001\002\000\012\344\uff30\346\uff30\347\uff30\374\uff30\001" +
    "\002\000\012\344\uff31\346\uff31\347\uff31\374\uff31\001\002" +
    "\000\012\344\uff23\346\uff23\347\uff23\374\uff23\001\002\000" +
    "\012\344\uff22\346\uff22\347\uff22\374\uff22\001\002\000\010" +
    "\365\065\366\056\370\062\001\002\000\004\344\u0139\001" +
    "\002\000\050\344\uff46\346\uff46\347\uff46\374\uff46\u010a\uff46" +
    "\u010f\uff46\u0117\uff46\u0127\uff46\u0129\uff46\u0132\uff46\u0134\uff46\u0136" +
    "\uff46\u0137\uff46\u013e\uff46\u0143\uff46\u0165\uff46\u0166\uff46\u0167\uff46" +
    "\u016b\uff46\001\002\000\010\365\065\366\056\370\062\001" +
    "\002\000\004\374\u013c\001\002\000\010\365\065\366\056" +
    "\370\062\001\002\000\004\344\u013e\001\002\000\050\344" +
    "\uff34\346\uff34\347\uff34\374\uff34\u010a\uff34\u010f\uff34\u0117\uff34" +
    "\u0127\uff34\u0129\uff34\u0132\uff34\u0134\uff34\u0136\uff34\u0137\uff34\u013e" +
    "\uff34\u0143\uff34\u0165\uff34\u0166\uff34\u0167\uff34\u016b\uff34\001\002" +
    "\000\026\371\100\u010a\277\u010f\301\u0127\306\u0132\272\u0134" +
    "\307\u0136\304\u0137\303\u0138\302\u013e\276\001\002\000\010" +
    "\344\uff4b\346\uff4b\347\uff4b\001\002\000\010\344\uff47\346" +
    "\uff47\347\uff47\001\002\000\010\344\uff48\346\uff48\347\uff48" +
    "\001\002\000\006\365\065\366\056\001\002\000\004\374" +
    "\u0145\001\002\000\006\365\065\366\056\001\002\000\004" +
    "\344\u0147\001\002\000\032\344\uff2f\346\uff2f\347\uff2f\374" +
    "\uff2f\u010a\uff2f\u010f\uff2f\u0127\uff2f\u0132\uff2f\u0134\uff2f\u0136\uff2f" +
    "\u0137\uff2f\u013e\uff2f\001\002\000\004\371\100\001\002\000" +
    "\004\371\uffb4\001\002\000\004\371\uffb5\001\002\000\004" +
    "\371\100\001\002\000\004\343\u014d\001\002\000\006\344" +
    "\000\u0164\u0150\001\002\000\004\344\u015d\001\002\000\012" +
    "\344\uffb2\u0117\uffb2\u0129\uffb2\u0143\uffb2\001\002\000\004\371" +
    "\u0152\001\002\000\012\344\uffb3\u0117\uffb3\u0129\uffb3\u0143\uffb3" +
    "\001\002\000\052\367\u010b\u013c\u0118\u0144\u010f\u0145\u0113\u0146" +
    "\u011b\u0147\u010d\u0148\u0115\u0149\u0110\u014a\u010c\u014b\u0111\u014c\u0119" +
    "\u014d\u0117\u014e\u010a\u014f\u011a\u0150\u0114\u0151\u0109\u0152\u011d\u0153" +
    "\u0116\u0154\u010e\u0155\u011c\001\002\000\022\344\000\374\000" +
    "\u0117\000\u0129\000\u0143\000\u0165\u0154\u0166\u0155\u0167\u0158\001" +
    "\002\000\014\344\uffae\374\uffae\u0117\uffae\u0129\uffae\u0143\uffae" +
    "\001\002\000\014\344\uffad\374\uffad\u0117\uffad\u0129\uffad\u0143" +
    "\uffad\001\002\000\014\344\000\374\u0159\u0117\000\u0129\000" +
    "\u0143\000\001\002\000\014\344\uffab\374\uffab\u0117\uffab\u0129" +
    "\uffab\u0143\uffab\001\002\000\014\344\uffac\374\uffac\u0117\uffac" +
    "\u0129\uffac\u0143\uffac\001\002\000\004\u0164\u0150\001\002\000" +
    "\012\344\uffaf\u0117\uffaf\u0129\uffaf\u0143\uffaf\001\002\000\012" +
    "\344\uffb1\u0117\uffb1\u0129\uffb1\u0143\uffb1\001\002\000\012\344" +
    "\uffb0\u0117\uffb0\u0129\uffb0\u0143\uffb0\001\002\000\004\u0170\u015e" +
    "\001\002\000\056\367\u010b\u0103\u0160\u013c\u0118\u0144\u010f\u0145" +
    "\u0113\u0146\u011b\u0147\u010d\u0148\u0115\u0149\u0110\u014a\u010c\u014b\u0111" +
    "\u014c\u0119\u014d\u0117\u014e\u010a\u014f\u011a\u0150\u0114\u0151\u0109\u0152" +
    "\u011d\u0153\u0116\u0154\u010e\u0155\u011c\u0164\052\001\002\000\010" +
    "\u0117\uffcc\u0129\uffcc\u016b\uffcc\001\002\000\010\u0117\uffca\u0129" +
    "\uffca\u016b\uffca\001\002\000\004\u0103\u0186\001\002\000\010" +
    "\u0117\000\u0129\u0163\u016b\000\001\002\000\010\u0168\u0181\u0169" +
    "\u0183\u016a\u0180\001\002\000\006\u0117\u0167\u016b\000\001\002" +
    "\000\010\u0117\uffa9\u0143\uffa9\u016b\uffa9\001\002\000\004\u016b" +
    "\u0169\001\002\000\004\u016b\uffce\001\002\000\004\u016b\uffcd" +
    "\001\002\000\044\003\030\340\016\373\047\u0101\015\u0102" +
    "\010\u0104\041\u010c\037\u0110\025\u0125\040\u0131\021\u0156\020" +
    "\u016a\014\u016b\024\u016d\034\u016e\046\u0171\000\u0177\036\001" +
    "\002\000\004\u0171\uffc7\001\002\000\004\u0171\u016d\001\002" +
    "\000\044\003\030\340\016\373\047\u0101\015\u0102\010\u0104" +
    "\041\u010c\037\u0110\025\u0125\040\u0131\021\u0156\020\u016a\014" +
    "\u016b\024\u016d\034\u016e\046\u0171\uffc8\u0177\036\001\002\000" +
    "\022\343\u0170\354\064\365\065\366\056\370\062\371\100" +
    "\u010a\061\u0164\052\001\002\000\044\341\ufea9\344\ufea9\346" +
    "\ufea9\347\ufea9\351\ufea9\352\ufea9\353\ufea9\374\ufea9\375\ufea9" +
    "\376\ufea9\377\u0179\u0100\u017a\u0117\ufea9\u011f\ufea9\u0121\ufea9\u0122" +
    "\ufea9\u017d\ufea9\001\002\000\044\341\ufea4\344\ufea4\346\ufea4" +
    "\347\ufea4\351\ufea4\352\ufea4\353\ufea4\374\ufea4\375\ufea4\376" +
    "\ufea4\377\ufea4\u0100\ufea4\u0117\ufea4\u011f\ufea4\u0121\ufea4\u0122\ufea4" +
    "\u017d\ufea4\001\002\000\022\343\u0170\354\064\365\065\366" +
    "\056\370\062\371\100\u010a\061\u0164\052\001\002\000\044" +
    "\341\ufea3\344\ufea3\346\ufea3\347\ufea3\351\ufea3\352\ufea3\353" +
    "\ufea3\374\ufea3\375\ufea3\376\ufea3\377\ufea3\u0100\ufea3\u0117\ufea3" +
    "\u011f\ufea3\u0121\ufea3\u0122\ufea3\u017d\ufea3\001\002\000\044\341" +
    "\ufea6\344\ufea6\346\ufea6\347\ufea6\351\ufea6\352\ufea6\353\ufea6" +
    "\374\ufea6\375\ufea6\376\ufea6\377\ufea6\u0100\ufea6\u0117\ufea6\u011f" +
    "\ufea6\u0121\ufea6\u0122\ufea6\u017d\ufea6\001\002\000\012\346\122" +
    "\347\123\375\u0175\376\u0174\001\002\000\022\343\u0170\354" +
    "\064\365\065\366\056\370\062\371\100\u010a\061\u0164\052" +
    "\001\002\000\022\343\u0170\354\064\365\065\366\056\370" +
    "\062\371\100\u010a\061\u0164\052\001\002\000\004\u016c\u0177" +
    "\001\002\000\006\346\uffcf\347\uffcf\001\002\000\044\341" +
    "\ufeab\344\ufeab\346\ufeab\347\ufeab\351\ufeab\352\ufeab\353\ufeab" +
    "\374\ufeab\375\ufeab\376\ufeab\377\u0179\u0100\u017a\u0117\ufeab\u011f" +
    "\ufeab\u0121\ufeab\u0122\ufeab\u017d\ufeab\001\002\000\022\343\u0170" +
    "\354\064\365\065\366\056\370\062\371\100\u010a\061\u0164" +
    "\052\001\002\000\022\343\u0170\354\064\365\065\366\056" +
    "\370\062\371\100\u010a\061\u0164\052\001\002\000\044\341" +
    "\ufea7\344\ufea7\346\ufea7\347\ufea7\351\ufea7\352\ufea7\353\ufea7" +
    "\374\ufea7\375\ufea7\376\ufea7\377\ufea7\u0100\ufea7\u0117\ufea7\u011f" +
    "\ufea7\u0121\ufea7\u0122\ufea7\u017d\ufea7\001\002\000\044\341\ufea8" +
    "\344\ufea8\346\ufea8\347\ufea8\351\ufea8\352\ufea8\353\ufea8\374" +
    "\ufea8\375\ufea8\376\ufea8\377\ufea8\u0100\ufea8\u0117\ufea8\u011f\ufea8" +
    "\u0121\ufea8\u0122\ufea8\u017d\ufea8\001\002\000\044\341\ufeaa\344" +
    "\ufeaa\346\ufeaa\347\ufeaa\351\ufeaa\352\ufeaa\353\ufeaa\374\ufeaa" +
    "\375\ufeaa\376\ufeaa\377\u0179\u0100\u017a\u0117\ufeaa\u011f\ufeaa\u0121" +
    "\ufeaa\u0122\ufeaa\u017d\ufeaa\001\002\000\010\344\u017f\375\u0175" +
    "\376\u0174\001\002\000\044\341\ufea5\344\ufea5\346\ufea5\347" +
    "\ufea5\351\ufea5\352\ufea5\353\ufea5\374\ufea5\375\ufea5\376\ufea5" +
    "\377\ufea5\u0100\ufea5\u0117\ufea5\u011f\ufea5\u0121\ufea5\u0122\ufea5\u017d" +
    "\ufea5\001\002\000\004\u0117\u0184\001\002\000\010\u0117\uffa8" +
    "\u0143\uffa8\u016b\uffa8\001\002\000\010\u0117\uffaa\u0143\uffaa\u016b" +
    "\uffaa\001\002\000\010\u0117\uffa7\u0143\uffa7\u016b\uffa7\001\002" +
    "\000\004\371\u0185\001\002\000\010\u0117\uffa6\u0143\uffa6\u016b" +
    "\uffa6\001\002\000\004\343\u0187\001\002\000\026\371\100" +
    "\u010a\277\u010f\301\u0127\306\u0132\272\u0134\307\u0136\304\u0137" +
    "\303\u0138\302\u013e\276\001\002\000\004\344\u0189\001\002" +
    "\000\010\u0117\uffcb\u0129\uffcb\u016b\uffcb\001\002\000\012\u0117" +
    "\000\u0129\000\u0143\000\u0164\u0150\001\002\000\010\u0117\000" +
    "\u0129\u0163\u0143\000\001\002\000\006\u0117\000\u0143\u018d\001" +
    "\002\000\004\u013a\u0198\001\002\000\004\u0117\u0190\001\002" +
    "\000\004\u0117\uffa4\001\002\000\042\003\000\340\000\373" +
    "\000\u0101\000\u0102\000\u0104\000\u010c\000\u0110\000\u0125\000" +
    "\u0131\000\u0156\000\u016a\000\u016b\u0191\u016d\000\u016e\000\u0177" +
    "\000\001\002\000\042\003\uffa3\340\uffa3\373\uffa3\u0101\uffa3" +
    "\u0102\uffa3\u0104\uffa3\u010c\uffa3\u0110\uffa3\u0125\uffa3\u0131\uffa3\u0156" +
    "\uffa3\u016a\uffa3\u016b\uffa3\u016d\uffa3\u016e\uffa3\u0177\uffa3\001\002" +
    "\000\042\003\030\340\016\373\047\u0101\015\u0102\010\u0104" +
    "\041\u010c\037\u0110\025\u0125\040\u0131\021\u0156\020\u016a\014" +
    "\u016b\024\u016d\034\u016e\046\u0177\036\001\002\000\042\003" +
    "\uffa2\340\uffa2\373\uffa2\u0101\uffa2\u0102\uffa2\u0104\uffa2\u010c\uffa2" +
    "\u0110\uffa2\u0125\uffa2\u0131\uffa2\u0156\uffa2\u016a\uffa2\u016b\uffa2\u016d" +
    "\uffa2\u016e\uffa2\u0177\uffa2\001\002\000\050\003\030\340\016" +
    "\346\000\347\000\373\047\u0101\015\u0102\010\u0104\041\u010c" +
    "\037\u0110\025\u0125\040\u0131\021\u0156\020\u016a\014\u016b\024" +
    "\u016c\u0197\u016d\034\u016e\046\u0177\036\001\002\000\006\346" +
    "\uffa0\347\uffa0\001\002\000\006\346\uffb8\347\uffb8\001\002" +
    "\000\006\346\uffa1\347\uffa1\001\002\000\004\u0117\uffa5\001" +
    "\002\000\006\346\uff73\347\uff73\001\002\000\004\u0143\u019b" +
    "\001\002\000\004\u0142\u019c\001\002\000\004\371\u019d\001" +
    "\002\000\006\346\uff50\347\uff50\001\002\000\014\346\000" +
    "\347\000\u0109\u01a2\u0128\u01a0\u0129\u01a3\001\002\000\006\346" +
    "\uff76\347\uff76\001\002\000\004\371\u01c8\001\002\000\006" +
    "\346\uff71\347\uff71\001\002\000\004\u0127\u01a5\001\002\000" +
    "\006\346\uff6e\347\uff6e\001\002\000\006\346\uff6d\347\uff6d" +
    "\001\002\000\004\343\u01a6\001\002\000\016\344\000\u012a" +
    "\u01aa\u012b\u01ab\u012c\u01ad\u012d\u01a7\u012e\u01ac\001\002\000\004" +
    "\372\u01c5\001\002\000\004\344\u01bd\001\002\000\004\344" +
    "\uff67\001\002\000\004\372\u01ba\001\002\000\004\372\u01b7" +
    "\001\002\000\004\372\u01b4\001\002\000\004\372\u01ae\001" +
    "\002\000\004\354\u01af\001\002\000\006\344\000\374\u01b0" +
    "\001\002\000\016\344\000\u012a\u01aa\u012b\u01ab\u012c\u01ad\u012d" +
    "\u01a7\u012e\u01ac\001\002\000\004\344\uff6a\001\002\000\004" +
    "\344\uff65\001\002\000\004\344\uff66\001\002\000\004\365" +
    "\u01b5\001\002\000\006\344\000\374\u01b0\001\002\000\004" +
    "\344\uff68\001\002\000\004\354\u01b8\001\002\000\006\344" +
    "\000\374\u01b0\001\002\000\004\344\uff6b\001\002\000\004" +
    "\354\u01bb\001\002\000\006\344\000\374\u01b0\001\002\000" +
    "\004\344\uff6c\001\002\000\010\346\000\347\000\374\u01be" +
    "\001\002\000\004\343\u01c1\001\002\000\006\346\uff70\347" +
    "\uff70\001\002\000\006\346\uff63\347\uff63\001\002\000\016" +
    "\344\000\u012a\u01aa\u012b\u01ab\u012c\u01ad\u012d\u01a7\u012e\u01ac\001" +
    "\002\000\004\344\u01c3\001\002\000\010\346\000\347\000" +
    "\374\u01be\001\002\000\006\346\uff64\347\uff64\001\002\000" +
    "\004\354\u01c6\001\002\000\006\344\000\374\u01b0\001\002" +
    "\000\004\344\uff69\001\002\000\006\346\uff6f\347\uff6f\001" +
    "\002\000\004\371\100\001\002\000\004\371\ufed5\001\002" +
    "\000\004\371\ufed6\001\002\000\010\343\u01cf\u010d\000\u010f" +
    "\000\001\002\000\006\u010d\u01d9\u010f\u01d8\001\002\000\006" +
    "\u010d\ufed3\u010f\ufed3\001\002\000\004\371\u01d0\001\002\000" +
    "\006\344\000\374\u01d4\001\002\000\004\344\u01d2\001\002" +
    "\000\006\u010d\ufed4\u010f\ufed4\001\002\000\004\344\ufed2\001" +
    "\002\000\004\371\u01d6\001\002\000\004\344\ufed0\001\002" +
    "\000\006\344\000\374\u01d4\001\002\000\004\344\ufed1\001" +
    "\002\000\004\u010d\u01e8\001\002\000\004\343\u01db\001\002" +
    "\000\006\346\ufed8\347\ufed8\001\002\000\016\354\064\365" +
    "\065\366\056\370\062\u010a\061\u0164\052\001\002\000\006" +
    "\344\000\374\u01e3\001\002\000\004\344\u01de\001\002\000" +
    "\010\346\000\347\000\374\u01df\001\002\000\004\343\u01db" +
    "\001\002\000\006\346\ufecf\347\ufecf\001\002\000\006\346" +
    "\ufeca\347\ufeca\001\002\000\006\346\ufecb\347\ufecb\001\002" +
    "\000\016\354\064\365\065\366\056\370\062\u010a\061\u0164" +
    "\052\001\002\000\004\344\ufece\001\002\000\004\344\ufecc" +
    "\001\002\000\006\344\000\374\u01e3\001\002\000\004\344" +
    "\ufecd\001\002\000\006\346\ufed7\347\ufed7\001\002\000\012" +
    "\346\000\347\000\371\100\u0164\052\001\002\000\006\346" +
    "\122\347\123\001\002\000\010\346\uffdc\347\uffdc\u0129\uffdc" +
    "\001\002\000\010\346\uffdb\347\uffdb\u0129\uffdb\001\002\000" +
    "\010\346\uffdd\347\uffdd\u0129\uffdd\001\002\000\060\002\uffd0" +
    "\003\uffd0\340\uffd0\346\uffd0\347\uffd0\373\uffd0\u0101\uffd0\u0102" +
    "\uffd0\u0104\uffd0\u010c\uffd0\u0110\uffd0\u0125\uffd0\u0131\uffd0\u0156\uffd0" +
    "\u016a\uffd0\u016b\uffd0\u016c\uffd0\u016d\uffd0\u016e\uffd0\u0171\uffd0\u0175" +
    "\uffd0\u0176\uffd0\u0177\uffd0\001\002\000\010\346\000\347\000" +
    "\u0129\u01f1\001\002\000\006\346\122\347\123\001\002\000" +
    "\004\u0174\u01f3\001\002\000\006\346\uffd9\347\uffd9\001\002" +
    "\000\010\346\000\347\000\354\u01f4\001\002\000\006\346" +
    "\uffd8\347\uffd8\001\002\000\006\346\uffda\347\uffda\001\002" +
    "\000\006\346\uffd7\347\uffd7\001\002\000\042\003\030\340" +
    "\016\373\047\u0101\015\u0102\010\u0104\041\u010c\037\u0110\025" +
    "\u0125\040\u0131\021\u0156\020\u016a\014\u016b\024\u016d\034\u016e" +
    "\046\u0177\036\001\002\000\046\003\030\340\016\373\047" +
    "\u0101\015\u0102\010\u0104\041\u010c\037\u0110\025\u0125\040\u0131" +
    "\021\u0156\020\u016a\014\u016b\024\u016d\034\u016e\046\u0175\u01fa" +
    "\u0176\u01fb\u0177\036\001\002\000\060\002\uffe0\003\uffe0\340" +
    "\uffe0\346\uffe0\347\uffe0\373\uffe0\u0101\uffe0\u0102\uffe0\u0104\uffe0" +
    "\u010c\uffe0\u0110\uffe0\u0125\uffe0\u0131\uffe0\u0156\uffe0\u016a\uffe0\u016b" +
    "\uffe0\u016c\uffe0\u016d\uffe0\u016e\uffe0\u0171\uffe0\u0175\uffe0\u0176\uffe0" +
    "\u0177\uffe0\001\002\000\012\346\122\347\123\u0172\u0204\u0173" +
    "\u0203\001\002\000\012\346\122\347\123\u0172\u01fd\u0173\u01fc" +
    "\001\002\000\012\346\000\347\000\371\100\u0164\052\001" +
    "\002\000\012\346\000\347\000\371\100\u0164\052\001\002" +
    "\000\060\002\uffd3\003\uffd3\340\uffd3\346\uffd3\347\uffd3\373" +
    "\uffd3\u0101\uffd3\u0102\uffd3\u0104\uffd3\u010c\uffd3\u0110\uffd3\u0125\uffd3" +
    "\u0131\uffd3\u0156\uffd3\u016a\uffd3\u016b\uffd3\u016c\uffd3\u016d\uffd3\u016e" +
    "\uffd3\u0171\uffd3\u0175\uffd3\u0176\uffd3\u0177\uffd3\001\002\000\006" +
    "\346\122\347\123\001\002\000\060\002\uffd2\003\uffd2\340" +
    "\uffd2\346\uffd2\347\uffd2\373\uffd2\u0101\uffd2\u0102\uffd2\u0104\uffd2" +
    "\u010c\uffd2\u0110\uffd2\u0125\uffd2\u0131\uffd2\u0156\uffd2\u016a\uffd2\u016b" +
    "\uffd2\u016c\uffd2\u016d\uffd2\u016e\uffd2\u0171\uffd2\u0175\uffd2\u0176\uffd2" +
    "\u0177\uffd2\001\002\000\006\346\122\347\123\001\002\000" +
    "\060\002\uffd1\003\uffd1\340\uffd1\346\uffd1\347\uffd1\373\uffd1" +
    "\u0101\uffd1\u0102\uffd1\u0104\uffd1\u010c\uffd1\u0110\uffd1\u0125\uffd1\u0131" +
    "\uffd1\u0156\uffd1\u016a\uffd1\u016b\uffd1\u016c\uffd1\u016d\uffd1\u016e\uffd1" +
    "\u0171\uffd1\u0175\uffd1\u0176\uffd1\u0177\uffd1\001\002\000\012\346" +
    "\000\347\000\371\100\u0164\052\001\002\000\012\346\000" +
    "\347\000\371\100\u0164\052\001\002\000\060\002\uffd6\003" +
    "\uffd6\340\uffd6\346\uffd6\347\uffd6\373\uffd6\u0101\uffd6\u0102\uffd6" +
    "\u0104\uffd6\u010c\uffd6\u0110\uffd6\u0125\uffd6\u0131\uffd6\u0156\uffd6\u016a" +
    "\uffd6\u016b\uffd6\u016c\uffd6\u016d\uffd6\u016e\uffd6\u0171\uffd6\u0175\uffd6" +
    "\u0176\uffd6\u0177\uffd6\001\002\000\006\346\122\347\123\001" +
    "\002\000\060\002\uffd5\003\uffd5\340\uffd5\346\uffd5\347\uffd5" +
    "\373\uffd5\u0101\uffd5\u0102\uffd5\u0104\uffd5\u010c\uffd5\u0110\uffd5\u0125" +
    "\uffd5\u0131\uffd5\u0156\uffd5\u016a\uffd5\u016b\uffd5\u016c\uffd5\u016d\uffd5" +
    "\u016e\uffd5\u0171\uffd5\u0175\uffd5\u0176\uffd5\u0177\uffd5\001\002\000" +
    "\006\346\122\347\123\001\002\000\060\002\uffd4\003\uffd4" +
    "\340\uffd4\346\uffd4\347\uffd4\373\uffd4\u0101\uffd4\u0102\uffd4\u0104" +
    "\uffd4\u010c\uffd4\u0110\uffd4\u0125\uffd4\u0131\uffd4\u0156\uffd4\u016a\uffd4" +
    "\u016b\uffd4\u016c\uffd4\u016d\uffd4\u016e\uffd4\u0171\uffd4\u0175\uffd4\u0176" +
    "\uffd4\u0177\uffd4\001\002\000\010\u0178\000\u0179\u0215\u017a\u0216" +
    "\001\002\000\052\367\u010b\u013c\u0118\u0144\u010f\u0145\u0113\u0146" +
    "\u011b\u0147\u010d\u0148\u0115\u0149\u0110\u014a\u010c\u014b\u0111\u014c\u0119" +
    "\u014d\u0117\u014e\u010a\u014f\u011a\u0150\u0114\u0151\u0109\u0152\u011d\u0153" +
    "\u0116\u0154\u010e\u0155\u011c\001\002\000\010\346\000\347\000" +
    "\374\u020d\001\002\000\004\u0164\052\001\002\000\006\346" +
    "\uffbb\347\uffbb\001\002\000\006\346\uffb9\347\uffb9\001\002" +
    "\000\052\367\u010b\u013c\u0118\u0144\u010f\u0145\u0113\u0146\u011b\u0147" +
    "\u010d\u0148\u0115\u0149\u0110\u014a\u010c\u014b\u0111\u014c\u0119\u014d\u0117" +
    "\u014e\u010a\u014f\u011a\u0150\u0114\u0151\u0109\u0152\u011d\u0153\u0116\u0154" +
    "\u010e\u0155\u011c\001\002\000\010\346\000\347\000\374\u020d" +
    "\001\002\000\006\346\uffba\347\uffba\001\002\000\004\u0178" +
    "\u0217\001\002\000\004\u0178\uffe5\001\002\000\004\u0178\uffe7" +
    "\001\002\000\004\u0178\uffe6\001\002\000\004\u0143\u0218\001" +
    "\002\000\004\u0110\025\001\002\000\010\346\000\347\000" +
    "\u017d\u021c\001\002\000\006\346\uffea\347\uffea\001\002\000" +
    "\006\346\uffe8\347\uffe8\001\002\000\004\371\100\001\002" +
    "\000\004\u017b\u021e\001\002\000\004\u017c\u021f\001\002\000" +
    "\004\341\u0220\001\002\000\004\371\100\001\002\000\010" +
    "\346\uffe4\347\uffe4\u010e\u0223\001\002\000\006\346\uffe9\347" +
    "\uffe9\001\002\000\004\u0164\052\001\002\000\010\346\000" +
    "\347\000\374\u0225\001\002\000\004\u0164\052\001\002\000" +
    "\006\346\uffe1\347\uffe1\001\002\000\006\346\uffe3\347\uffe3" +
    "\001\002\000\010\346\000\347\000\374\u0225\001\002\000" +
    "\006\346\uffe2\347\uffe2\001\002\000\060\002\ufffb\003\ufffb" +
    "\340\ufffb\346\ufffb\347\ufffb\373\ufffb\u0101\ufffb\u0102\ufffb\u0104" +
    "\ufffb\u010c\ufffb\u0110\ufffb\u0125\ufffb\u0131\ufffb\u0156\ufffb\u016a\ufffb" +
    "\u016b\ufffb\u016c\ufffb\u016d\ufffb\u016e\ufffb\u0171\ufffb\u0175\ufffb\u0176" +
    "\ufffb\u0177\ufffb\001\002\000\060\002\ufff4\003\ufff4\340\ufff4" +
    "\346\ufff4\347\ufff4\373\ufff4\u0101\ufff4\u0102\ufff4\u0104\ufff4\u010c" +
    "\ufff4\u0110\ufff4\u0125\ufff4\u0131\ufff4\u0156\ufff4\u016a\ufff4\u016b\ufff4" +
    "\u016c\ufff4\u016d\ufff4\u016e\ufff4\u0171\ufff4\u0175\ufff4\u0176\ufff4\u0177" +
    "\ufff4\001\002\000\060\002\ufff1\003\ufff1\340\ufff1\346\ufff1" +
    "\347\ufff1\373\ufff1\u0101\ufff1\u0102\ufff1\u0104\ufff1\u010c\ufff1\u0110" +
    "\ufff1\u0125\ufff1\u0131\ufff1\u0156\ufff1\u016a\ufff1\u016b\ufff1\u016c\ufff1" +
    "\u016d\ufff1\u016e\ufff1\u0171\ufff1\u0175\ufff1\u0176\ufff1\u0177\ufff1\001" +
    "\002\000\060\002\ufff3\003\ufff3\340\ufff3\346\ufff3\347\ufff3" +
    "\373\ufff3\u0101\ufff3\u0102\ufff3\u0104\ufff3\u010c\ufff3\u0110\ufff3\u0125" +
    "\ufff3\u0131\ufff3\u0156\ufff3\u016a\ufff3\u016b\ufff3\u016c\ufff3\u016d\ufff3" +
    "\u016e\ufff3\u0171\ufff3\u0175\ufff3\u0176\ufff3\u0177\ufff3\001\002\000" +
    "\060\002\ufff9\003\ufff9\340\ufff9\346\ufff9\347\ufff9\373\ufff9" +
    "\u0101\ufff9\u0102\ufff9\u0104\ufff9\u010c\ufff9\u0110\ufff9\u0125\ufff9\u0131" +
    "\ufff9\u0156\ufff9\u016a\ufff9\u016b\ufff9\u016c\ufff9\u016d\ufff9\u016e\ufff9" +
    "\u0171\ufff9\u0175\ufff9\u0176\ufff9\u0177\ufff9\001\002\000\034\343" +
    "\uff1b\354\uff1b\365\uff1b\366\uff1b\370\uff1b\371\uff1b\u010a\uff1b" +
    "\u0112\uff1b\u0113\uff1b\u0114\uff1b\u0115\uff1b\u0116\uff1b\u0164\uff1b\001" +
    "\002\000\004\341\uff1d\001\002\000\034\343\u0170\354\064" +
    "\365\065\366\056\370\062\371\100\u010a\061\u0112\u0254\u0113" +
    "\u0255\u0114\u0257\u0115\u025b\u0116\u0258\u0164\052\001\002\000\034" +
    "\343\uff1a\354\uff1a\365\uff1a\366\uff1a\370\uff1a\371\uff1a\u010a" +
    "\uff1a\u0112\uff1a\u0113\uff1a\u0114\uff1a\u0115\uff1a\u0116\uff1a\u0164\uff1a" +
    "\001\002\000\010\343\u029f\365\065\366\056\001\002\000" +
    "\004\341\u0236\001\002\000\034\343\uff18\354\uff18\365\uff18" +
    "\366\uff18\370\uff18\371\uff18\u010a\uff18\u0112\uff18\u0113\uff18\u0114" +
    "\uff18\u0115\uff18\u0116\uff18\u0164\uff18\001\002\000\004\371\100" +
    "\001\002\000\040\346\000\347\000\351\000\371\u028d\374" +
    "\000\u0117\u028c\u0119\000\u011a\000\u011b\000\u011c\000\u011d\000" +
    "\u011f\000\u0121\000\u0122\000\u017d\000\001\002\000\032\346" +
    "\000\347\000\351\000\u0119\000\u011a\u0239\u011b\u023a\u011c\u023b" +
    "\u011d\u023f\u011f\000\u0121\000\u0122\000\u017d\000\001\002\000" +
    "\004\u0119\ufeef\001\002\000\006\u0119\000\u011e\u0241\001\002" +
    "\000\006\u0119\000\u011e\u0241\001\002\000\004\u0119\u028a\001" +
    "\002\000\022\346\ufef0\347\ufef0\351\ufef0\u0119\ufeeb\u011f\ufef0" +
    "\u0121\ufef0\u0122\ufef0\u017d\ufef0\001\002\000\020\346\000\347" +
    "\000\351\u0244\u011f\000\u0121\000\u0122\000\u017d\000\001\002" +
    "\000\006\u0119\000\u011e\u0241\001\002\000\004\u0119\ufeec\001" +
    "\002\000\004\u0119\ufeea\001\002\000\004\u0119\ufee9\001\002" +
    "\000\016\346\000\347\000\u011f\u024b\u0121\000\u0122\000\u017d" +
    "\000\001\002\000\004\371\100\001\002\000\020\346\ufe93" +
    "\347\ufe93\351\ufe93\u011f\ufe93\u0121\ufe93\u0122\ufe93\u017d\ufe93\001" +
    "\002\000\024\355\361\356\364\357\362\360\371\361\370" +
    "\363\367\364\365\372\366\u013b\372\001\002\000\022\343" +
    "\u0170\354\064\365\065\366\056\370\062\371\100\u010a\061" +
    "\u0164\052\001\002\000\030\346\000\347\000\351\000\352" +
    "\u0100\353\u0103\375\u0175\376\u0174\u011f\000\u0121\000\u0122\000" +
    "\u017d\000\001\002\000\020\346\ufe94\347\ufe94\351\ufe94\u011f" +
    "\ufe94\u0121\ufe94\u0122\ufe94\u017d\ufe94\001\002\000\014\346\ufee7" +
    "\347\ufee7\u0121\ufee7\u0122\ufee7\u017d\ufee7\001\002\000\004\u0120" +
    "\u0287\001\002\000\014\346\000\347\000\u0121\u024d\u0122\000" +
    "\u017d\000\001\002\000\016\371\100\u0112\u0254\u0113\u0255\u0114" +
    "\u0257\u0115\u025b\u0116\u0258\001\002\000\012\346\ufee5\347\ufee5" +
    "\u0122\ufee5\u017d\ufee5\001\002\000\012\346\000\347\000\u0122" +
    "\u0250\u017d\000\001\002\000\004\u0120\u0253\001\002\000\010" +
    "\346\uff1e\347\uff1e\u017d\uff1e\001\002\000\010\346\ufede\347" +
    "\ufede\u017d\ufede\001\002\000\016\371\100\u0112\u0254\u0113\u0255" +
    "\u0114\u0257\u0115\u025b\u0116\u0258\001\002\000\004\343\u0278\001" +
    "\002\000\004\343\u0275\001\002\000\044\341\uff0a\346\uff0a" +
    "\347\uff0a\355\uff0a\356\uff0a\357\uff0a\360\uff0a\361\uff0a\363" +
    "\uff0a\364\uff0a\372\uff0a\374\uff0a\u0117\uff0a\u0123\uff0a\u0124\uff0a" +
    "\u013b\uff0a\u017d\uff0a\001\002\000\004\343\u0272\001\002\000" +
    "\004\343\u026f\001\002\000\020\343\u026b\346\000\347\000" +
    "\374\000\u0123\332\u0124\333\u017d\000\001\002\000\016\346" +
    "\000\347\000\374\000\u0123\332\u0124\333\u017d\000\001\002" +
    "\000\004\343\u025c\001\002\000\012\366\u025f\371\000\377" +
    "\u025e\u0111\u025d\001\002\000\004\371\uff06\001\002\000\004" +
    "\344\uff08\001\002\000\004\344\uff09\001\002\000\004\344" +
    "\u0264\001\002\000\004\371\100\001\002\000\004\371\uff05" +
    "\001\002\000\004\344\uff07\001\002\000\044\341\uff0c\346" +
    "\uff0c\347\uff0c\355\uff0c\356\uff0c\357\uff0c\360\uff0c\361\uff0c" +
    "\363\uff0c\364\uff0c\372\uff0c\374\uff0c\u0117\uff0c\u0123\uff0c\u0124" +
    "\uff0c\u013b\uff0c\u017d\uff0c\001\002\000\012\346\000\347\000" +
    "\374\u0266\u017d\000\001\002\000\012\346\000\347\000\u0122" +
    "\u0250\u017d\000\001\002\000\010\346\ufed9\347\ufed9\u017d\ufed9" +
    "\001\002\000\010\346\ufedf\347\ufedf\u017d\ufedf\001\002\000" +
    "\010\346\ufeda\347\ufeda\u017d\ufeda\001\002\000\012\346\000" +
    "\347\000\374\u0266\u017d\000\001\002\000\020\344\000\354" +
    "\064\365\065\366\056\370\062\u010a\061\u0164\052\001\002" +
    "\000\004\344\u026d\001\002\000\044\341\uffc9\346\uffc9\347" +
    "\uffc9\355\uffc9\356\uffc9\357\uffc9\360\uffc9\361\uffc9\363\uffc9" +
    "\364\uffc9\372\uffc9\374\uffc9\u0117\uffc9\u0123\uffc9\u0124\uffc9\u013b" +
    "\uffc9\u017d\uffc9\001\002\000\010\346\ufee0\347\ufee0\u017d\ufee0" +
    "\001\002\000\012\366\u025f\371\000\377\u025e\u0111\u025d\001" +
    "\002\000\004\344\u0271\001\002\000\044\341\uff0b\346\uff0b" +
    "\347\uff0b\355\uff0b\356\uff0b\357\uff0b\360\uff0b\361\uff0b\363" +
    "\uff0b\364\uff0b\372\uff0b\374\uff0b\u0117\uff0b\u0123\uff0b\u0124\uff0b" +
    "\u013b\uff0b\u017d\uff0b\001\002\000\012\366\u025f\371\000\377" +
    "\u025e\u0111\u025d\001\002\000\004\344\u0274\001\002\000\044" +
    "\341\uff0d\346\uff0d\347\uff0d\355\uff0d\356\uff0d\357\uff0d\360" +
    "\uff0d\361\uff0d\363\uff0d\364\uff0d\372\uff0d\374\uff0d\u0117\uff0d" +
    "\u0123\uff0d\u0124\uff0d\u013b\uff0d\u017d\uff0d\001\002\000\012\366" +
    "\u025f\371\000\377\u025e\u0111\u025d\001\002\000\004\344\u0277" +
    "\001\002\000\044\341\uff0e\346\uff0e\347\uff0e\355\uff0e\356" +
    "\uff0e\357\uff0e\360\uff0e\361\uff0e\363\uff0e\364\uff0e\372\uff0e" +
    "\374\uff0e\u0117\uff0e\u0123\uff0e\u0124\uff0e\u013b\uff0e\u017d\uff0e\001" +
    "\002\000\012\366\u025f\371\000\377\u025e\u0111\u025d\001\002" +
    "\000\004\344\u027a\001\002\000\044\341\uff0f\346\uff0f\347" +
    "\uff0f\355\uff0f\356\uff0f\357\uff0f\360\uff0f\361\uff0f\363\uff0f" +
    "\364\uff0f\372\uff0f\374\uff0f\u0117\uff0f\u0123\uff0f\u0124\uff0f\u013b" +
    "\uff0f\u017d\uff0f\001\002\000\026\343\u026b\355\361\356\364" +
    "\357\362\360\371\361\370\363\367\364\365\372\366\u013b" +
    "\372\001\002\000\012\346\ufee6\347\ufee6\u0122\ufee6\u017d\ufee6" +
    "\001\002\000\024\355\361\356\364\357\362\360\371\361" +
    "\370\363\367\364\365\372\366\u013b\372\001\002\000\016" +
    "\354\064\365\065\366\056\370\062\u010a\061\u0164\052\001" +
    "\002\000\016\346\000\347\000\352\u0100\353\u0103\u0122\000" +
    "\u017d\000\001\002\000\016\371\100\u0112\u0254\u0113\u0255\u0114" +
    "\u0257\u0115\u025b\u0116\u0258\001\002\000\012\346\ufee4\347\ufee4" +
    "\u0122\ufee4\u017d\ufee4\001\002\000\012\346\ufee1\347\ufee1\u0122" +
    "\ufee1\u017d\ufee1\001\002\000\012\346\ufee2\347\ufee2\u0122\ufee2" +
    "\u017d\ufee2\001\002\000\016\354\064\365\065\366\056\370" +
    "\062\u010a\061\u0164\052\001\002\000\016\346\000\347\000" +
    "\352\u0100\353\u0103\u0122\000\u017d\000\001\002\000\012\346" +
    "\ufee3\347\ufee3\u0122\ufee3\u017d\ufee3\001\002\000\004\371\100" +
    "\001\002\000\016\346\000\347\000\374\154\u0121\000\u0122" +
    "\000\u017d\000\001\002\000\014\346\ufee8\347\ufee8\u0121\ufee8" +
    "\u0122\ufee8\u017d\ufee8\001\002\000\004\371\100\001\002\000" +
    "\010\371\u028d\u0109\000\u0117\u028c\001\002\000\006\354\u0295" +
    "\371\u0296\001\002\000\036\346\ufef3\347\ufef3\351\ufef3\374" +
    "\ufef3\u0109\ufef3\u0119\ufef3\u011a\ufef3\u011b\ufef3\u011c\ufef3\u011d\ufef3" +
    "\u011f\ufef3\u0121\ufef3\u0122\ufef3\u017d\ufef3\001\002\000\004\u0109" +
    "\u0290\001\002\000\036\346\ufef2\347\ufef2\351\ufef2\374\ufef2" +
    "\u0109\ufef2\u0119\ufef2\u011a\ufef2\u011b\ufef2\u011c\ufef2\u011d\ufef2\u011f" +
    "\ufef2\u0121\ufef2\u0122\ufef2\u017d\ufef2\001\002\000\004\371\100" +
    "\001\002\000\004\372\u0292\001\002\000\004\371\100\001" +
    "\002\000\032\346\000\347\000\351\000\u0119\000\u011a\u0239" +
    "\u011b\u023a\u011c\u023b\u011d\u023f\u011f\000\u0121\000\u0122\000\u017d" +
    "\000\001\002\000\020\346\ufef1\347\ufef1\351\ufef1\u011f\ufef1" +
    "\u0121\ufef1\u0122\ufef1\u017d\ufef1\001\002\000\036\346\ufef5\347" +
    "\ufef5\351\ufef5\374\ufef5\u0109\ufef5\u0119\ufef5\u011a\ufef5\u011b\ufef5" +
    "\u011c\ufef5\u011d\ufef5\u011f\ufef5\u0121\ufef5\u0122\ufef5\u017d\ufef5\001" +
    "\002\000\036\346\ufef4\347\ufef4\351\ufef4\374\ufef4\u0109\ufef4" +
    "\u0119\ufef4\u011a\ufef4\u011b\ufef4\u011c\ufef4\u011d\ufef4\u011f\ufef4\u0121" +
    "\ufef4\u0122\ufef4\u017d\ufef4\001\002\000\004\u0119\ufeed\001\002" +
    "\000\004\u0119\ufeee\001\002\000\034\346\000\347\000\351" +
    "\000\374\u029a\u0119\000\u011a\000\u011b\000\u011c\000\u011d\000" +
    "\u011f\000\u0121\000\u0122\000\u017d\000\001\002\000\004\371" +
    "\100\001\002\000\032\346\ufef8\347\ufef8\351\ufef8\u0119\ufef8" +
    "\u011a\ufef8\u011b\ufef8\u011c\ufef8\u011d\ufef8\u011f\ufef8\u0121\ufef8\u0122" +
    "\ufef8\u017d\ufef8\001\002\000\032\346\ufef6\347\ufef6\351\ufef6" +
    "\u0119\ufef6\u011a\ufef6\u011b\ufef6\u011c\ufef6\u011d\ufef6\u011f\ufef6\u0121" +
    "\ufef6\u0122\ufef6\u017d\ufef6\001\002\000\032\346\ufef7\347\ufef7" +
    "\351\ufef7\u0119\ufef7\u011a\ufef7\u011b\ufef7\u011c\ufef7\u011d\ufef7\u011f" +
    "\ufef7\u0121\ufef7\u0122\ufef7\u017d\ufef7\001\002\000\040\341\ufe97" +
    "\343\ufe97\350\ufe97\354\ufe97\365\ufe97\366\ufe97\370\ufe97\371" +
    "\ufe97\u010a\ufe97\u0112\ufe97\u0113\ufe97\u0114\ufe97\u0115\ufe97\u0116\ufe97" +
    "\u0164\ufe97\001\002\000\006\365\065\366\056\001\002\000" +
    "\034\343\uff19\354\uff19\365\uff19\366\uff19\370\uff19\371\uff19" +
    "\u010a\uff19\u0112\uff19\u0113\uff19\u0114\uff19\u0115\uff19\u0116\uff19\u0164" +
    "\uff19\001\002\000\004\344\u02a2\001\002\000\040\341\ufe98" +
    "\343\ufe98\350\ufe98\354\ufe98\365\ufe98\366\ufe98\370\ufe98\371" +
    "\ufe98\u010a\ufe98\u0112\ufe98\u0113\ufe98\u0114\ufe98\u0115\ufe98\u0116\ufe98" +
    "\u0164\ufe98\001\002\000\010\341\uff16\374\uff16\u0117\uff16\001" +
    "\002\000\010\341\000\374\000\u0117\u02aa\001\002\000\004" +
    "\341\uff1c\001\002\000\014\341\uff15\374\uff15\375\u0175\376" +
    "\u0174\u0117\uff15\001\002\000\024\341\ufea4\343\u026b\372\u02a8" +
    "\374\ufea4\375\ufea4\376\ufea4\377\ufea4\u0100\ufea4\u0117\ufea4\001" +
    "\002\000\022\343\u0170\354\064\365\065\366\056\370\062" +
    "\371\100\u010a\061\u0164\052\001\002\000\014\341\uff14\374" +
    "\uff14\375\u0175\376\u0174\u0117\uff14\001\002\000\006\354\u02b1" +
    "\371\u02b2\001\002\000\006\341\000\374\u02ad\001\002\000" +
    "\006\341\uff02\374\uff02\001\002\000\044\342\u0233\343\000" +
    "\354\000\365\000\366\000\370\000\371\000\377\u0230\u010a" +
    "\000\u0111\u022f\u0112\000\u0113\000\u0114\000\u0115\000\u0116\000" +
    "\u0118\u0232\u0164\000\001\002\000\004\341\uff17\001\002\000" +
    "\004\341\uff12\001\002\000\004\341\uff13\001\002\000\006" +
    "\341\uff04\374\uff04\001\002\000\006\341\uff03\374\uff03\001" +
    "\002\000\014\346\uffde\347\uffde\371\uffde\u0129\uffde\u0164\uffde" +
    "\001\002\000\014\346\uffdf\347\uffdf\371\uffdf\u0129\uffdf\u0164" +
    "\uffdf\001\002\000\060\002\ufff0\003\ufff0\340\ufff0\346\ufff0" +
    "\347\ufff0\373\ufff0\u0101\ufff0\u0102\ufff0\u0104\ufff0\u010c\ufff0\u0110" +
    "\ufff0\u0125\ufff0\u0131\ufff0\u0156\ufff0\u016a\ufff0\u016b\ufff0\u016c\ufff0" +
    "\u016d\ufff0\u016e\ufff0\u0171\ufff0\u0175\ufff0\u0176\ufff0\u0177\ufff0\001" +
    "\002\000\006\346\122\347\123\001\002\000\060\002\uffec" +
    "\003\uffec\340\uffec\346\uffec\347\uffec\373\uffec\u0101\uffec\u0102" +
    "\uffec\u0104\uffec\u010c\uffec\u0110\uffec\u0125\uffec\u0131\uffec\u0156\uffec" +
    "\u016a\uffec\u016b\uffec\u016c\uffec\u016d\uffec\u016e\uffec\u0171\uffec\u0175" +
    "\uffec\u0176\uffec\u0177\uffec\001\002\000\006\371\u02f9\u0118\u02f8" +
    "\001\002\000\006\371\u02ee\u0157\u02ed\001\002\000\004\371" +
    "\100\001\002\000\004\371\100\001\002\000\004\371\u02bf" +
    "\001\002\000\006\346\uff9f\347\uff9f\001\002\000\006\346" +
    "\uff9b\347\uff9b\001\002\000\004\u0129\u02c0\001\002\000\012" +
    "\u010a\u02c3\u012a\u02c4\u0142\u02c2\u015f\u02c5\001\002\000\006\346" +
    "\uff7f\347\uff7f\001\002\000\004\372\u02cf\001\002\000\010" +
    "\346\uff7c\347\uff7c\374\uff7c\001\002\000\004\372\u02cd\001" +
    "\002\000\004\372\u02cb\001\002\000\010\346\000\347\000" +
    "\374\u02c7\001\002\000\012\u010a\u02c3\u012a\u02c4\u0142\u02c2\u015f" +
    "\u02c5\001\002\000\006\346\uff78\347\uff78\001\002\000\006" +
    "\346\uff7e\347\uff7e\001\002\000\006\346\uff79\347\uff79\001" +
    "\002\000\004\354\u02cc\001\002\000\010\346\uff7a\347\uff7a" +
    "\374\uff7a\001\002\000\004\371\u02ce\001\002\000\010\346" +
    "\uff7d\347\uff7d\374\uff7d\001\002\000\004\371\u02d0\001\002" +
    "\000\010\346\uff7b\347\uff7b\374\uff7b\001\002\000\006\346" +
    "\uff9c\347\uff9c\001\002\000\010\u0104\u02d6\u0156\u02d3\u0161\u02d5" +
    "\001\002\000\004\u0160\u02ea\001\002\000\006\346\uff8a\347" +
    "\uff8a\001\002\000\026\371\100\u010a\277\u010f\301\u0127\306" +
    "\u0132\272\u0134\307\u0136\304\u0137\303\u0138\302\u013e\276\001" +
    "\002\000\012\371\100\u0105\u02d9\u0138\u02d7\u0160\u02d8\001\002" +
    "\000\006\371\000\u0107\141\001\002\000\004\371\100\001" +
    "\002\000\006\371\000\u0107\141\001\002\000\010\346\000" +
    "\347\000\374\u02dd\001\002\000\006\346\uff87\347\uff87\001" +
    "\002\000\006\346\uff82\347\uff82\001\002\000\012\371\100" +
    "\u0105\u02d9\u0138\u02d7\u0160\u02d8\001\002\000\006\346\uff80\347" +
    "\uff80\001\002\000\006\346\uff81\347\uff81\001\002\000\004" +
    "\371\100\001\002\000\010\346\000\347\000\374\u02dd\001" +
    "\002\000\006\346\uff83\347\uff83\001\002\000\010\346\000" +
    "\347\000\374\u02dd\001\002\000\006\346\uff84\347\uff84\001" +
    "\002\000\004\371\100\001\002\000\010\346\000\347\000" +
    "\374\u02dd\001\002\000\006\346\uff85\347\uff85\001\002\000" +
    "\006\346\uff88\347\uff88\001\002\000\006\346\uff86\347\uff86" +
    "\001\002\000\026\371\100\u010a\277\u010f\301\u0127\306\u0132" +
    "\272\u0134\307\u0136\304\u0137\303\u0138\302\u013e\276\001\002" +
    "\000\006\346\uff89\347\uff89\001\002\000\006\346\uff9a\347" +
    "\uff9a\001\002\000\006\u0128\uff98\u0158\uff98\001\002\000\006" +
    "\u0128\uff97\u0158\uff97\001\002\000\006\346\uff9e\347\uff9e\001" +
    "\002\000\006\u0128\u02f1\u0158\u02f3\001\002\000\004\371\u02f7" +
    "\001\002\000\006\346\uff99\347\uff99\001\002\000\004\u012a" +
    "\u02f4\001\002\000\004\372\u02f5\001\002\000\004\371\u02f6" +
    "\001\002\000\006\346\uff96\347\uff96\001\002\000\006\346" +
    "\uff95\347\uff95\001\002\000\004\u0109\uff92\001\002\000\004" +
    "\u0109\uff93\001\002\000\004\u0109\u02fc\001\002\000\006\346" +
    "\uff9d\347\uff9d\001\002\000\004\371\100\001\002\000\020" +
    "\373\u0303\u0159\u0302\u015a\u02fe\u015b\u0301\u015c\u0300\u015d\u0304\u015e" +
    "\u0305\001\002\000\006\346\uff90\347\uff90\001\002\000\006" +
    "\346\uff94\347\uff94\001\002\000\006\346\uff8d\347\uff8d\001" +
    "\002\000\006\346\uff8f\347\uff8f\001\002\000\006\346\uff91" +
    "\347\uff91\001\002\000\006\346\uff8e\347\uff8e\001\002\000" +
    "\006\346\uff8c\347\uff8c\001\002\000\006\346\uff8b\347\uff8b" +
    "\001\002\000\004\002\001\001\002\000\010\343\u029f\365" +
    "\065\366\056\001\002\000\004\341\u030a\001\002\000\006" +
    "\341\ufe99\371\ufe99\001\002\000\004\371\100\001\002\000" +
    "\012\346\000\347\000\351\000\374\154\001\002\000\010" +
    "\346\000\347\000\351\u0244\001\002\000\006\346\ufe9d\347" +
    "\ufe9d\001\002\000\010\341\000\350\u0310\371\000\001\002" +
    "\000\006\341\ufe9a\371\ufe9a\001\002\000\006\341\ufe96\371" +
    "\ufe96\001\002\000\006\341\ufe95\371\ufe95\001\002\000\004" +
    "\371\100\001\002\000\004\373\u0314\001\002\000\004\371" +
    "\100\001\002\000\004\372\u0316\001\002\000\022\343\u0170" +
    "\354\064\365\065\366\056\370\062\371\100\u010a\061\u0164" +
    "\052\001\002\000\010\346\000\347\000\351\u0244\001\002" +
    "\000\016\346\ufeac\347\ufeac\351\ufeac\374\ufeac\375\u0175\376" +
    "\u0174\001\002\000\012\346\000\347\000\351\000\374\u031a" +
    "\001\002\000\004\371\100\001\002\000\010\346\ufead\347" +
    "\ufead\351\ufead\001\002\000\010\346\ufeaf\347\ufeaf\351\ufeaf" +
    "\001\002\000\004\372\u031e\001\002\000\022\343\u0170\354" +
    "\064\365\065\366\056\370\062\371\100\u010a\061\u0164\052" +
    "\001\002\000\010\346\000\347\000\351\u0244\001\002\000" +
    "\010\346\ufeae\347\ufeae\351\ufeae\001\002\000\006\346\ufeb0" +
    "\347\ufeb0\001\002\000\022\346\000\347\000\354\064\365" +
    "\065\366\056\370\062\u010a\061\u0164\052\001\002\000\006" +
    "\346\uffc6\347\uffc6\001\002\000\060\002\ufff6\003\ufff6\340" +
    "\ufff6\346\ufff6\347\ufff6\373\ufff6\u0101\ufff6\u0102\ufff6\u0104\ufff6" +
    "\u010c\ufff6\u0110\ufff6\u0125\ufff6\u0131\ufff6\u0156\ufff6\u016a\ufff6\u016b" +
    "\ufff6\u016c\ufff6\u016d\ufff6\u016e\ufff6\u0171\ufff6\u0175\ufff6\u0176\ufff6" +
    "\u0177\ufff6\001\002\000\060\002\ufff5\003\ufff5\340\ufff5\346" +
    "\ufff5\347\ufff5\373\ufff5\u0101\ufff5\u0102\ufff5\u0104\ufff5\u010c\ufff5" +
    "\u0110\ufff5\u0125\ufff5\u0131\ufff5\u0156\ufff5\u016a\ufff5\u016b\ufff5\u016c" +
    "\ufff5\u016d\ufff5\u016e\ufff5\u0171\ufff5\u0175\ufff5\u0176\ufff5\u0177\ufff5" +
    "\001\002\000\060\002\ufff8\003\ufff8\340\ufff8\346\ufff8\347" +
    "\ufff8\373\ufff8\u0101\ufff8\u0102\ufff8\u0104\ufff8\u010c\ufff8\u0110\ufff8" +
    "\u0125\ufff8\u0131\ufff8\u0156\ufff8\u016a\ufff8\u016b\ufff8\u016c\ufff8\u016d" +
    "\ufff8\u016e\ufff8\u0171\ufff8\u0175\ufff8\u0176\ufff8\u0177\ufff8\001\002" +
    "\000\004\371\100\001\002\000\006\346\ufeb1\347\ufeb1\001" +
    "\002\000\060\002\uffed\003\uffed\340\uffed\346\uffed\347\uffed" +
    "\373\uffed\u0101\uffed\u0102\uffed\u0104\uffed\u010c\uffed\u0110\uffed\u0125" +
    "\uffed\u0131\uffed\u0156\uffed\u016a\uffed\u016b\uffed\u016c\uffed\u016d\uffed" +
    "\u016e\uffed\u0171\uffed\u0175\uffed\u0176\uffed\u0177\uffed\001\002\000" +
    "\060\002\ufffa\003\ufffa\340\ufffa\346\ufffa\347\ufffa\373\ufffa" +
    "\u0101\ufffa\u0102\ufffa\u0104\ufffa\u010c\ufffa\u0110\ufffa\u0125\ufffa\u0131" +
    "\ufffa\u0156\ufffa\u016a\ufffa\u016b\ufffa\u016c\ufffa\u016d\ufffa\u016e\ufffa" +
    "\u0171\ufffa\u0175\ufffa\u0176\ufffa\u0177\ufffa\001\002\000\060\002" +
    "\ufff2\003\ufff2\340\ufff2\346\ufff2\347\ufff2\373\ufff2\u0101\ufff2" +
    "\u0102\ufff2\u0104\ufff2\u010c\ufff2\u0110\ufff2\u0125\ufff2\u0131\ufff2\u0156" +
    "\ufff2\u016a\ufff2\u016b\ufff2\u016c\ufff2\u016d\ufff2\u016e\ufff2\u0171\ufff2" +
    "\u0175\ufff2\u0176\ufff2\u0177\ufff2\001\002\000\060\002\ufffc\003" +
    "\ufffc\340\ufffc\346\ufffc\347\ufffc\373\ufffc\u0101\ufffc\u0102\ufffc" +
    "\u0104\ufffc\u010c\ufffc\u0110\ufffc\u0125\ufffc\u0131\ufffc\u0156\ufffc\u016a" +
    "\ufffc\u016b\ufffc\u016c\ufffc\u016d\ufffc\u016e\ufffc\u0171\ufffc\u0175\ufffc" +
    "\u0176\ufffc\u0177\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u032a\000\052\002\032\003\016\004\044\005\043\013" +
    "\003\040\005\042\025\056\010\071\042\125\012\163\011" +
    "\202\004\204\026\207\031\223\030\226\022\236\041\237" +
    "\034\244\021\245\006\001\001\000\004\010\u032b\001\001" +
    "\000\004\010\u032a\001\001\000\004\010\u0329\001\001\000" +
    "\004\010\u0328\001\001\000\002\001\001\000\004\010\u0325" +
    "\001\001\000\004\010\u0324\001\001\000\004\010\u0323\001" +
    "\001\000\004\015\u0321\001\001\000\006\006\u0308\014\u0311" +
    "\001\001\000\006\006\u0308\014\u0307\001\001\000\002\001" +
    "\001\000\004\164\u02bc\001\001\000\004\015\u02b5\001\001" +
    "\000\002\001\001\000\004\010\u02b4\001\001\000\002\001" +
    "\001\000\010\006\u0234\072\u0233\073\u0230\001\001\000\004" +
    "\010\u022d\001\001\000\004\010\u022c\001\001\000\002\001" +
    "\001\000\004\010\u022b\001\001\000\004\010\u022a\001\001" +
    "\000\004\010\u0229\001\001\000\006\015\u0209\206\u020a\001" +
    "\001\000\012\006\u01eb\015\u01ea\206\u01ec\240\u01ee\001\001" +
    "\000\004\237\u01e8\001\001\000\006\006\u01c9\057\u01c8\001" +
    "\001\000\012\006\207\126\201\133\212\210\205\001\001" +
    "\000\010\041\127\046\131\054\134\001\001\000\002\001" +
    "\001\000\004\010\123\001\001\000\002\001\001\000\046" +
    "\002\032\005\120\013\003\040\005\042\025\056\010\071" +
    "\042\125\012\163\011\202\004\204\026\207\031\223\030" +
    "\226\022\236\041\237\034\244\021\245\006\001\001\000" +
    "\004\015\100\001\001\000\004\206\050\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\024\065\034\054\036\057\037\056\206\062" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\070\205\067\001\001\000\004\206\071\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\024\073\034\054\036\057\037\056\206\062\001\001" +
    "\000\006\006\070\205\074\001\001\000\002\001\001\000" +
    "\006\006\070\205\076\001\001\000\002\001\001\000\006" +
    "\006\116\011\115\001\001\000\020\006\102\024\104\034" +
    "\054\036\057\037\056\206\101\224\103\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\107\225\106\001\001\000\020\006\102\024\104\034\054" +
    "\036\057\037\056\206\101\224\110\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\024\112" +
    "\034\054\036\057\037\056\206\062\001\001\000\006\006" +
    "\107\225\113\001\001\000\002\001\001\000\004\015\117" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\136\043\176\001\001\000" +
    "\006\006\136\043\160\001\001\000\006\006\136\043\151" +
    "\001\001\000\002\001\001\000\004\015\150\001\001\000" +
    "\002\001\001\000\006\006\136\043\137\001\001\000\004" +
    "\015\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\142\044\143\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\146\045\145\001" +
    "\001\000\002\001\001\000\006\015\142\044\147\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\015\152\001\001\000\006\006\155" +
    "\055\154\001\001\000\004\015\156\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\155\055\157\001\001" +
    "\000\002\001\001\000\004\015\161\001\001\000\012\015" +
    "\164\047\166\050\165\052\162\001\001\000\002\001\001" +
    "\000\004\015\170\001\001\000\006\006\155\055\167\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\173\051\172\001\001\000\004\015\174\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\050\175" +
    "\001\001\000\002\001\001\000\004\015\177\001\001\000" +
    "\006\006\155\055\200\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\u019d\127\u019e\001\001\000\004\145" +
    "\u0198\001\001\000\002\001\001\000\004\211\u0147\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\266\146" +
    "\267\001\001\000\006\015\253\137\254\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\015\220\134\217\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\015\222\001\001\000\002\001" +
    "\001\000\006\015\224\135\225\001\001\000\006\006\245" +
    "\234\246\001\001\000\002\001\001\000\006\006\231\136" +
    "\230\001\001\000\004\015\236\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\224\135" +
    "\234\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\224\135\240\001\001\000\002\001" +
    "\001\000\006\006\231\136\242\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\250\235\251\001\001\000\006\015\224\135\252" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\256\140\255\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\260\141" +
    "\261\001\001\000\006\006\155\055\263\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\071" +
    "\265\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\015\277\144\273\150\304\151\272\155" +
    "\274\001\001\000\002\001\001\000\006\006\u0140\152\u013f" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\337\161\336\001\001\000\002\001\001\000\004\153\u0111" +
    "\001\001\000\014\024\u0107\034\054\036\057\037\056\206" +
    "\062\001\001\000\004\015\u0105\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\311\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\314\001" +
    "\001\000\002\001\001\000\004\015\316\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\006\323\133\325\143" +
    "\324\155\321\001\001\000\002\001\001\000\006\006\337" +
    "\161\336\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\015\327\001\001\000\006\006\155" +
    "\055\330\001\001\000\006\006\333\123\334\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\341\001\001\000\006\006\155\055\342" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\347\147\345\001\001\000\002\001\001\000\004\015\351" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\006\356\015\355\022\357" +
    "\157\354\001\001\000\002\001\001\000\004\007\362\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\024\375\034\054\036\057\037" +
    "\056\206\062\001\001\000\002\001\001\000\004\034\372" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\006\u0101\021" +
    "\376\023\u0100\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\006\356\015\355\022\u0103\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\155\u0106\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\006\u0132\154\u0130\155\u0131\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\034\054\036\057\037\u011e\001\001\000\002\001" +
    "\001\000\010\034\054\036\057\037\u0120\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\034\054\036\057\037" +
    "\u0123\001\001\000\002\001\001\000\010\034\054\036\057" +
    "\037\u0125\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\034\054\036\057\037\u012b\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\034\054\036\057\037\u012e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\u0135\155\u0134\156\u0133\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\034\054\036\057\037\u0137\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\034\054\036\057\037\u013a\001" +
    "\001\000\002\001\001\000\010\034\054\036\057\037\u013c" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\015" +
    "\277\144\273\150\u0141\151\272\155\274\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u0143\001\001\000\002\001\001\000\004\034\u0145\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u0189\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\015\u014b" +
    "\001\001\000\002\001\001\000\010\006\u014e\212\u014d\213" +
    "\u0150\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\153\u0152\001\001\000" +
    "\006\006\u0156\215\u0155\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u0159\214\u015a\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\213\u015b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\153\u015e\206\u0160\231\u0161\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u0164\216\u0163\001\001\000\004\217\u0181\001\001\000\006" +
    "\006\u0167\227\u0165\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\054\002\032" +
    "\004\u016b\005\043\006\u0169\013\003\040\005\042\025\056" +
    "\010\071\042\125\012\163\011\202\004\204\026\207\031" +
    "\223\030\226\022\230\u016a\236\041\237\034\244\021\245" +
    "\006\001\001\000\002\001\001\000\002\001\001\000\046" +
    "\002\032\005\120\013\003\040\005\042\025\056\010\071" +
    "\042\125\012\163\011\202\004\204\026\207\031\223\030" +
    "\226\022\236\041\237\034\244\021\245\006\001\001\000" +
    "\024\015\u016e\024\u0170\031\u0172\032\u016d\033\u0171\034\054" +
    "\036\057\037\056\206\062\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\015\u016e\024\u0170\031\u017d\032\u016d" +
    "\033\u0171\034\054\036\057\037\056\206\062\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u0175\001\001" +
    "\000\022\015\u016e\024\u0170\032\u017c\033\u0171\034\054\036" +
    "\057\037\056\206\062\001\001\000\022\015\u016e\024\u0170" +
    "\032\u0177\033\u0171\034\054\036\057\037\056\206\062\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\015\u016e\024\u0170\033\u017b\034\054\036\057\037" +
    "\056\206\062\001\001\000\020\015\u016e\024\u0170\033\u017a" +
    "\034\054\036\057\037\056\206\062\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\015\277\144\273\150" +
    "\u0187\151\272\155\274\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\006\u014e\212\u018a\213\u0150\001\001\000" +
    "\006\006\u0164\216\u018b\001\001\000\006\006\u018e\220\u018d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\u0192\221\u0191\001\001\000\002\001\001" +
    "\000\050\002\032\004\u0193\005\043\013\003\040\005\042" +
    "\025\056\010\071\042\125\012\163\011\202\004\204\026" +
    "\207\031\223\030\226\022\236\041\237\034\244\021\245" +
    "\006\001\001\000\002\001\001\000\052\002\032\005\120" +
    "\006\u0194\013\003\040\005\042\025\056\010\071\042\125" +
    "\012\163\011\202\004\204\026\207\031\222\u0195\223\030" +
    "\226\022\236\041\237\034\244\021\245\006\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u01a3" +
    "\130\u01a0\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u01a8\131\u01a7\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u01b1\142\u01b0" +
    "\001\001\000\006\006\u01a8\131\u01b2\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\u01b1\142\u01b5\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\u01b1\142\u01b8\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u01b1\142\u01bb\001" +
    "\001\000\002\001\001\000\006\006\u01bf\132\u01be\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\u01a8\131\u01c1\001\001\000\002\001\001\000\006" +
    "\006\u01bf\132\u01c3\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\u01b1\142\u01c6\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\015\u01cb\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u01cd\060\u01cc\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\061\u01d0\001" +
    "\001\000\006\006\u01d4\062\u01d2\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\u01d4\062\u01d6\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\063\u01d9\001\001\000" +
    "\002\001\001\000\016\024\u01db\034\054\036\057\037\056" +
    "\064\u01dc\206\062\001\001\000\006\006\u01e4\065\u01e3\001" +
    "\001\000\002\001\001\000\006\006\u01e0\066\u01df\001\001" +
    "\000\004\063\u01e1\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\024\u01e5\034\054\036\057" +
    "\037\056\206\062\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\u01e4\065\u01e6\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\006\u01eb\015\u01ea\206\u01ec\240" +
    "\u01e9\001\001\000\004\010\u01ed\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\u01f1\241\u01ef\001\001\000\004\010\u01f6\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u01f5\242" +
    "\u01f4\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\050\002\032\004\u01f7\005\043\013\003\040" +
    "\005\042\025\056\010\071\042\125\012\163\011\202\004" +
    "\204\026\207\031\223\030\226\022\236\041\237\034\244" +
    "\021\245\006\001\001\000\050\002\032\005\120\013\003" +
    "\040\005\042\025\056\010\071\042\125\012\163\011\202" +
    "\004\204\026\207\031\223\030\226\022\236\041\237\034" +
    "\243\u01f8\244\021\245\006\001\001\000\002\001\001\000" +
    "\004\010\u0204\001\001\000\004\010\u01fd\001\001\000\012" +
    "\006\u01eb\015\u01ea\206\u01ec\240\u0200\001\001\000\012\006" +
    "\u01eb\015\u01ea\206\u01ec\240\u01fe\001\001\000\002\001\001" +
    "\000\004\010\u01ff\001\001\000\002\001\001\000\004\010" +
    "\u0201\001\001\000\002\001\001\000\012\006\u01eb\015\u01ea" +
    "\206\u01ec\240\u0207\001\001\000\012\006\u01eb\015\u01ea\206" +
    "\u01ec\240\u0205\001\001\000\002\001\001\000\004\010\u0206" +
    "\001\001\000\002\001\001\000\004\010\u0208\001\001\000" +
    "\002\001\001\000\006\006\u0213\246\u0212\001\001\000\004" +
    "\153\u020b\001\001\000\006\006\u020e\203\u020d\001\001\000" +
    "\004\206\u020f\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\153\u0210\001\001\000\006\006\u020e\203\u0211\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\071\u0218\001\001\000\006\006\u021a\247\u0219\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u021c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\015\u0220\251\u0221\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\206\u0223\001\001\000\006\006\u0225" +
    "\250\u0226\001\001\000\004\206\u0227\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u0225\250\u0228\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\034\015\u02a6\024\u0170\031" +
    "\u02a5\032\u016d\033\u0171\034\054\036\057\037\056\074\u02a4" +
    "\075\u02a3\100\u02a2\206\062\232\u0255\001\001\000\002\001" +
    "\001\000\006\017\u029f\034\u029d\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\015\u0236\107\u0237\001\001\000" +
    "\006\006\u028e\111\u0298\001\001\000\010\006\u023c\112\u023d" +
    "\113\u023b\001\001\000\002\001\001\000\006\006\u0241\114" +
    "\u0297\001\001\000\006\006\u0241\114\u0296\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u0244\016\u0242\001" +
    "\001\000\006\006\u0241\114\u023f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u0249\116" +
    "\u024b\001\001\000\004\015\u0245\001\001\000\002\001\001" +
    "\000\004\007\u0246\001\001\000\024\015\u016e\024\u0170\031" +
    "\u0247\032\u016d\033\u0171\034\054\036\057\037\056\206\062" +
    "\001\001\000\010\006\u0101\021\u0248\023\u0100\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\u024d\117\u024e\001\001\000\012\015\u027a\100\u027c\120" +
    "\u027b\232\u0255\001\001\000\002\001\001\000\006\006\u0251" +
    "\122\u0250\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\015\u0258\100\u0259\232\u0255\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\333\123\u0269" +
    "\001\001\000\006\006\333\123\u0264\001\001\000\002\001" +
    "\001\000\010\006\u0261\101\u025f\102\u0260\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\u0262\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u0266\124\u0267\001" +
    "\001\000\006\006\u0251\122\u0268\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u0266\124" +
    "\u026d\001\001\000\020\006\102\024\104\034\054\036\057" +
    "\037\056\206\101\224\u026b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\006\u0261\101\u026f" +
    "\102\u0260\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\u0261\101\u0272\102\u0260\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\006\u0261\101\u0275\102\u0260\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\006\u0261" +
    "\101\u0278\102\u0260\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\u0283\001\001\000\002\001\001\000\004" +
    "\007\u027d\001\001\000\014\024\u027e\034\054\036\057\037" +
    "\056\206\062\001\001\000\010\006\u0281\023\u027f\121\u0280" +
    "\001\001\000\012\015\u027a\100\u027c\120\u0282\232\u0255\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\024\u0284\034\054\036\057\037\056\206\062\001" +
    "\001\000\010\006\u0281\023\u027f\121\u0285\001\001\000\002" +
    "\001\001\000\004\015\u0287\001\001\000\006\006\155\055" +
    "\u0288\001\001\000\002\001\001\000\004\015\u028a\001\001" +
    "\000\006\006\u028e\111\u028d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\u0290\001\001\000\002\001\001\000\004\015\u0292\001" +
    "\001\000\010\006\u023c\112\u0293\113\u023b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u029b\110\u029a\001\001" +
    "\000\006\015\u0236\107\u029c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u02a0\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u02ab\103\u02aa" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\015\u016e\024\u0170\031\u02a8\032\u016d\033\u0171" +
    "\034\054\036\057\037\056\206\062\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u02ae\076\u02ad\001\001" +
    "\000\002\001\001\000\010\006\u0234\072\u02af\073\u0230\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u02b6\001\001" +
    "\000\002\001\001\000\006\170\u02fa\171\u02f9\001\001\000" +
    "\006\165\u02ee\166\u02ef\001\001\000\006\015\253\137\u02eb" +
    "\001\001\000\006\015\u02d1\173\u02d0\001\001\000\004\177" +
    "\u02bd\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\200\u02c0\201\u02c5\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u02c7\162\u02c8\001\001\000" +
    "\004\201\u02c9\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\174\u02d3\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\015\277\144\273" +
    "\150\u02e8\151\272\155\274\175\u02e7\001\001\000\006\015" +
    "\u02d9\176\u02da\001\001\000\006\006\136\043\u02e4\001\001" +
    "\000\004\015\u02e2\001\001\000\006\006\136\043\u02df\001" +
    "\001\000\006\006\u02dd\233\u02db\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\015\u02d9\176\u02de\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\u02e0\001\001" +
    "\000\006\006\u02dd\233\u02e1\001\001\000\002\001\001\000" +
    "\006\006\u02dd\233\u02e3\001\001\000\002\001\001\000\004" +
    "\015\u02e5\001\001\000\006\006\u02dd\233\u02e6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\015\277\144\273\150\u02ea\151\272\155\274\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\167\u02f1\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\015\u02fc\001\001\000\004\172" +
    "\u02fe\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\017\u030d\034\u029d\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\015\u030a\001\001\000\006\006\155" +
    "\055\u030b\001\001\000\006\006\u0244\016\u030c\001\001\000" +
    "\002\001\001\000\006\006\u0310\020\u030e\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\015" +
    "\u0312\001\001\000\002\001\001\000\004\015\u0314\001\001" +
    "\000\002\001\001\000\030\015\u016e\024\u0170\025\u0316\026" +
    "\u0318\031\u0317\032\u016d\033\u0171\034\054\036\057\037\056" +
    "\206\062\001\001\000\006\006\u0244\016\u0320\001\001\000" +
    "\002\001\001\000\006\006\u031a\027\u031b\001\001\000\004" +
    "\015\u031c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\015\u016e\024\u0170\025\u031e\026\u0318" +
    "\031\u0317\032\u016d\033\u0171\034\054\036\057\037\056\206" +
    "\062\001\001\000\006\006\u0244\016\u031f\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\006\102\024\104\034" +
    "\054\036\057\037\056\206\101\224\u0322\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\u0327\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    public int cont = 0;
    public String errores="";
    
    public void syntax_error(Symbol s){
         errores +="Error de sintaxis. Linea: " + (s.right + 1) +" Columna: " + s.left + ". Texto: \"" + s.value + "\"\n";
    }

    public Symbol getS(){
        return this.s;
}

public void unrecovered_syntax_error(Symbol s){ 
        errores +="Error de sintaxis. Linea: " + (s.right + 1) +" Columna: " + s.left + ". Texto: En alguna sentencia no se termino de cerrar la sentencia \"" + s.value + "\"\n";
    }




/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // empty ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empty",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()),((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= querys 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // querys ::= querys sentencia 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("querys",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // querys ::= sentencia 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("querys",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // sentencia ::= eliminar fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // sentencia ::= update fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // sentencia ::= truncate fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // sentencia ::= drop fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // sentencia ::= insert fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // sentencia ::= select fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // sentencia ::= create fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // sentencia ::= alter fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // sentencia ::= procedure fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // sentencia ::= sets fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sentencia ::= declares fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // sentencia ::= exec fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // sentencia ::= functions fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // sentencia ::= begin_transaction 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // sentencia ::= save_point 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // sentencia ::= cursor fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sentencia ::= USE objeto_nombre fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // sentencia ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // cursor ::= DECLARE objeto_nombre tipo_cursor CURSOR FOR select abrir_cursor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cursor",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // abrir_cursor ::= OPEN objeto_nombre FETCH NEXT FROM tipo_fetch 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("abrir_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // abrir_cursor ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("abrir_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // tipo_cursor ::= INSENSITIVE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",164, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // tipo_cursor ::= SCROLL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",164, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_cursor ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",164, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_fetch ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_fetch",167, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_fetch ::= objeto_nombre INTO VARIABLES mas_variables 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_fetch",167, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // mas_variables ::= COMA VARIABLES mas_variables 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_variables",166, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // mas_variables ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_variables",166, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // begin_transaction ::= trans transaction_name with_trans fin querys fin_transaction 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("begin_transaction",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // trans ::= BEGIN TRAN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("trans",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // trans ::= BEGIN TRANSACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("trans",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // transaction_name ::= VARIABLES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("transaction_name",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // transaction_name ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("transaction_name",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // transaction_name ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("transaction_name",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // with_trans ::= WITH MARK description 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_trans",159, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // with_trans ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_trans",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // description ::= STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("description",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // description ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("description",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // fin_transaction ::= COMMIT fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // fin_transaction ::= COMMIT TRAN transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // fin_transaction ::= COMMIT TRANSACTION transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // fin_transaction ::= ROLLBACK fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // fin_transaction ::= ROLLBACK TRAN transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // fin_transaction ::= ROLLBACK TRANSACTION transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // save_point ::= SAVE trans transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("save_point",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // functions ::= CREATE alterar FUNCTION objeto_nombre PARENTESIS_ABIERTO parametros PARENTESIS_CERRADO RETURNS tipo_retorno with_procedure as BEGIN interno_funcion RETURN E fin END 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("functions",148, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // as ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("as",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // as ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("as",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tipo_retorno ::= tipo_dato 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tipo_retorno ::= VARIABLES TABLE PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tipo_retorno ::= TABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // llamar_funciones ::= objeto_nombre PARENTESIS_ABIERTO enviar_datos PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("llamar_funciones",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // interno_funcion ::= querys 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("interno_funcion",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // interno_funcion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("interno_funcion",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // exec ::= EXECUTE objeto_nombre enviar_datos 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exec",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // exec ::= EXEC objeto_nombre enviar_datos 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exec",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // enviar_datos ::= VARIABLES ASIGNAR data_tipo mandar_mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // enviar_datos ::= data_tipo mandar_mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // enviar_datos ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // mandar_mas ::= COMA enviar_datos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mandar_mas",147, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // mandar_mas ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mandar_mas",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // sets ::= SET VARIABLES ASIGNAR data_tipo sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // sets ::= SET NOCOUNT ON sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // sets2 ::= COMA VARIABLES ASIGNAR data_tipo sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets2",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // sets2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets2",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // declares ::= DECLARE VARIABLES tipo_dato declares2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares",128, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // declares2 ::= COMA VARIABLES tipo_dato declares2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // declares2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // procedure ::= CREATE alterar proc objeto_nombre parametros with_procedure replication AS empezar querys final 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // alterar ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alterar",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // alterar ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alterar",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // proc ::= PROC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("proc",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // proc ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("proc",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametros ::= parametros1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametros ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametros1 ::= ARROBA IDENTIFICADOR tipo_dato tipo_parametro parametros2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros1",137, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parametros2 ::= COMA parametros1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros2",138, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametros2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros2",138, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // tipo_parametro ::= OUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // tipo_parametro ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // tipo_parametro ::= READONLY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // tipo_parametro ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // with_procedure ::= WITH procedure_option 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_procedure",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // with_procedure ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_procedure",140, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // procedure_option ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // procedure_option ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // procedure_option ::= EXECUTE AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // replication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("replication",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // replication ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("replication",142, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // empezar ::= BEGIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empezar",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // empezar ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empezar",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // final ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("final",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // final ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("final",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // alter ::= ALTER opciones 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alter",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // opciones ::= DATABASE database_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // opciones ::= INDEX index_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // opciones ::= TABLE table_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // opciones ::= USER user_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // opciones ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // database_alter ::= nombre_actual tipo_alter_base 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database_alter",115, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // nombre_actual ::= CURRENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_actual",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // nombre_actual ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_actual",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // tipo_alter_base ::= MODIFY NAME ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // tipo_alter_base ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // index_alter ::= nombre_index ON objeto_nombre accion_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index_alter",118, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // nombre_index ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_index",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // nombre_index ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_index",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // accion_index ::= REBUILD 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // accion_index ::= DISABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // accion_index ::= REORGANIZE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // accion_index ::= SET 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // accion_index ::= RESUME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // accion_index ::= PAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // accion_index ::= ABORT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // table_alter ::= objeto_nombre accion_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_alter",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // accion_alter ::= ALTER COLUMN add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // accion_alter ::= ADD tipo_add 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // accion_alter ::= DROP drop_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // tipo_add ::= add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_add",123, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // drop_column ::= CONSTRAINT if_op objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // drop_column ::= COLUMN objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // drop_column ::= INDEX if_op objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // drop_column ::= objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // mas_drop ::= COMA drop_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_drop",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // mas_drop ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_drop",153, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // user_alter ::= IDENTIFICADOR WITH set_item 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user_alter",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // set_item ::= set_item1 set_item2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item",126, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // set_item1 ::= NAME ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // set_item1 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // set_item1 ::= LOGIN ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // set_item1 ::= PASSWORD ASIGNAR STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // set_item2 ::= COMA set_item1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // set_item2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // create ::= CREATE opciones_crear 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("create",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // opciones_crear ::= DATABASE database_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // opciones_crear ::= opciones_index INDEX index_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // opciones_crear ::= TABLE table_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // opciones_crear ::= USER user 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // opciones_crear ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // database_create ::= objeto_nombre extras_database 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database_create",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // extras_database ::= ON PRIMARY PARENTESIS_ABIERTO filespec PARENTESIS_CERRADO mas_file 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // extras_database ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // extras_database ::= WITH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // extras_database ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // filespec ::= NAME ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // filespec ::= NAMES ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // filespec ::= FILE ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // filespec ::= FILENAME ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // filespec ::= SIZE ASIGNAR INT_NUM mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // filespec ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // mas_file2 ::= COMA filespec 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file2",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // mas_file2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file2",96, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // mas_file ::= COMA PARENTESIS_ABIERTO filespec PARENTESIS_CERRADO mas_file 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // mas_file ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // opciones_index ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // opciones_index ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // opciones_index ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // opciones_index ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // index_create ::= objeto_nombre ON objeto_nombre PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index_create",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // column_index ::= objeto_nombre tipo_index_orden mas_de_columnindex 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_index",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // mas_de_columnindex ::= COMA column_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_columnindex",155, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // mas_de_columnindex ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_columnindex",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // tipo_index_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // tipo_index_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // tipo_index_orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // mas_index ::= INCLUDE PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // mas_index ::= ON objeto_nombre PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // mas_index ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // view_create ::= objeto_nombre column_view AS select 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("view_create",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // column_view ::= PARENTESIS_ABIERTO column_view1 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // column_view ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // column_view1 ::= objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view1",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // user ::= IDENTIFICADOR FOR LOGIN IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // table_create ::= objeto_nombre PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO extra_create_table 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_create",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // extra_create_table ::= ON objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // extra_create_table ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // extra_create_table ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // add_column ::= add_column1 add_column2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // add_column1 ::= objeto_nombre tipo_dato constraint 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column1",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // add_column1 ::= aux2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column1",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // add_column2 ::= COMA add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column2",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // add_column2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column2",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // tipo_dato ::= CHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // tipo_dato ::= VARCHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // tipo_dato ::= TEXT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // tipo_dato ::= IMAGE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // tipo_dato ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // tipo_dato ::= VARBINARY PARENTESIS_ABIERTO MAX PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // tipo_dato ::= DATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // tipo_dato ::= DATETIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // tipo_dato ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // tipo_dato ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // tipo_dato ::= TIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // tipo_dato ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // tipo_dato ::= TIMESTAMP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // tipo_dato ::= FLOAT PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // tipo_dato ::= MONEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // tipo_dato ::= REAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // tipo_dato ::= BIT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // tipo_dato ::= INT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // tipo_dato ::= DECIMAL PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // tipo_dato ::= DEC PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // tipo_dato ::= NUMERIC PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // constraint ::= constraint1 constraint2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // constraint ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // constraint1 ::= IDENTITY PARENTESIS_ABIERTO NUM COMA NUM PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // constraint1 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // constraint1 ::= UNIQUE extra_unique 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // constraint1 ::= PRIMARY KEY extra_primary 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // constraint1 ::= FOREIGN KEY PARENTESIS_ABIERTO objeto_nombre PARENTESIS_CERRADO REFERENCES objeto_nombre PARENTESIS_ABIERTO objeto_nombre PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // constraint1 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // constraint1 ::= CHECK PARENTESIS_ABIERTO expresion_logica PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // constraint1 ::= DEFAULT data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // extra_unique ::= PARENTESIS_ABIERTO objeto_nombre mas_de_un_objeto PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_unique",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // extra_unique ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_unique",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // extra_primary ::= opciones_index PARENTESIS_ABIERTO objeto_nombre mas_de_un_objeto tipo_orden PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_primary",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // extra_primary ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_primary",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // constraint2 ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // constraint2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // expresion_logica ::= otra_condicion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion_logica",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // aux2 ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("aux2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // aux2 ::= CONSTRAINT objeto_nombre constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("aux2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // select ::= SELECT option_select FROM origen joins condicionales agrupado teniendo orden 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("select",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // option_select ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("option_select",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // option_select ::= seleccion columna 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("option_select",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // seleccion ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // seleccion ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // seleccion ::= TOP expresion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // seleccion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // columna ::= columna1 alias_columna columna2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // columna1 ::= funciones 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // columna1 ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // columna1 ::= objeto_nombre ASIGNAR E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // columna2 ::= COMA option_select 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // columna2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // data_tipo_operacion ::= data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo_operacion",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // data_tipo_operacion ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo_operacion",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // funciones ::= SUM PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // funciones ::= AVG PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // funciones ::= COUNT PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // funciones ::= MIN PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // funciones ::= MAX PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // funciones ::= llamar_funciones 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // valor ::= BIT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // valor ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // valor ::= puede objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // puede ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("puede",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // puede ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("puede",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // alias_columna ::= AS STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // alias_columna ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // alias_columna ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // operacion ::= operacion_matematica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // operacion ::= operacion_logica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // operacion_matematica ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion_matematica",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // operacion_logica ::= data_tipo_operacion operadores data_tipo_operacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion_logica",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // operador ::= SUMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // operador ::= RESTA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // operador ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // operador ::= DIVISION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // operador ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // origen ::= objeto_nombre alias_tabla origen1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // origen1 ::= COMA origen 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen1",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // origen1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen1",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // alias_tabla ::= AS STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // alias_tabla ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // alias_tabla ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // alias_tabla ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // joins ::= tipo_join JOIN objeto_nombre alias_tabla ON objeto_nombre ASIGNAR objeto_nombre joins 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("joins",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // joins ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("joins",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // tipo_join ::= INNER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // tipo_join ::= LEFT tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // tipo_join ::= RIGHT tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // tipo_join ::= FULL tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // tipo_join ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // tipo_join1 ::= OUTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // tipo_join1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // agrupado ::= GROUP BY objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agrupado",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // agrupado ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agrupado",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // teniendo ::= HAVING teniendo1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // teniendo ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // teniendo1 ::= funciones operadores data_tipo teniendo2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo1",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // teniendo1 ::= objeto_nombre operadores data_tipo teniendo2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo1",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // teniendo2 ::= operadores_logicos teniendo1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo2",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // teniendo2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo2",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // orden ::= ORDER BY objeto_nombre tipo_orden orden2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // orden ::= ORDER BY funciones tipo_orden orden2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // tipo_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // tipo_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // tipo_orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // orden2 ::= COMA orden 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden2",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // orden2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden2",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // insert ::= INSERT into objeto_nombre campos VALUES valores 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("insert",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // insert ::= INSERT into objeto_nombre campos DEFAULT VALUES 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("insert",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // into ::= INTO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("into",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // into ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("into",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // campos ::= PARENTESIS_ABIERTO campos2 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // campos ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // campos2 ::= IDENTIFICADOR mas_de_un_identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos2",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // mas_de_un_identificador ::= COMA IDENTIFICADOR mas_de_un_identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_identificador",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // mas_de_un_identificador ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_identificador",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // valores ::= PARENTESIS_ABIERTO valores2 PARENTESIS_CERRADO mas_valores 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // valores2 ::= data_tipo mas_valores2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores2",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // mas_valores2 ::= COMA data_tipo mas_valores2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // mas_valores2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // mas_valores ::= COMA valores 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // mas_valores ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // drop ::= DROP tipo_objeto 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // if_op ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("if_op",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // if_op ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("if_op",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // tipo_objeto ::= TABLE if_op tabla 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // tipo_objeto ::= index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // tipo_objeto ::= database 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // tipo_objeto ::= PROCEDURE objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // tipo_objeto ::= FUNCTION objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // tipo_objeto ::= USER if_op objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // tabla ::= objeto_nombre tabla2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // tabla2 ::= COMA tabla 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla2",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // tabla2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla2",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // index ::= INDEX if_op objeto_nombre index2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // index2 ::= drop_relational_or_xml_or_spatial_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // index2 ::= drop_backward_compatible_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // drop_relational_or_xml_or_spatial_index ::= ON objeto_nombre drop_relational_or_xml_or_spatial_index2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // drop_relational_or_xml_or_spatial_index2 ::= COMA objeto_nombre drop_relational_or_xml_or_spatial_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index2",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // drop_relational_or_xml_or_spatial_index2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index2",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // drop_backward_compatible_index ::= objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // drop_backward_compatible_index2 ::= mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index2",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // drop_backward_compatible_index2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index2",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // database ::= DATABASE if_op objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // mas_de_un_objeto ::= COMA objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_objeto",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // mas_de_un_objeto ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_objeto",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // truncate ::= TRUNCATE TABLE objeto_nombre 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("truncate",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // update ::= UPDATE opciones_delete objeto_nombre SET objeto_nombre ASIGNAR asignaciones condicionales 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("update",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // asignaciones ::= asignaciones1 asignaciones2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // asignaciones2 ::= COMA objeto_nombre ASIGNAR asignaciones condicionales 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // asignaciones2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // asignaciones1 ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // E ::= E SUMA T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // E ::= E RESTA T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // E ::= T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // T ::= T MULTIPLICACION F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // T ::= T DIVISION F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // T ::= F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // F ::= PARENTESIS_ABIERTO E PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // F ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // F ::= data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // NUM ::= INT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NUM",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // NUM ::= BIT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NUM",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // FLOTANTE ::= FLOAT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLOTANTE",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // VALORES_NUMEROS ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VALORES_NUMEROS",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // VALORES_NUMEROS ::= FLOTANTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VALORES_NUMEROS",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // eliminar ::= DELETE opciones_delete FROM objeto_nombre mas_de_un_objeto condicionales 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("eliminar",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // fin ::= PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // fin ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // opciones_delete ::= TOP expresion porcentaje 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_delete",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // opciones_delete ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_delete",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // expresion ::= PARENTESIS_ABIERTO NUM PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // expresion ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // porcentaje ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("porcentaje",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // porcentaje ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("porcentaje",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // condicionales ::= WHERE objeto_nombre operadores E condicionales1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // condicionales ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // condicionales1 ::= operadores_logicos otra_condicion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // condicionales1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // otra_condicion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("otra_condicion",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // otra_condicion ::= objeto_nombre operadores data_tipo condicionales1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("otra_condicion",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // operadores_logicos ::= AND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores_logicos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // operadores_logicos ::= OR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores_logicos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // data_tipo ::= STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // data_tipo ::= VALORES_NUMEROS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // data_tipo ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // data_tipo ::= VARIABLES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // VARIABLES ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VARIABLES",132, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // operadores ::= MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // operadores ::= MENOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // operadores ::= MAYOR_IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // operadores ::= MENOR_IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // operadores ::= DIFERENTE_DE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // operadores ::= LIKE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // operadores ::= BETWEEN NUM AND INT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // operadores ::= ASIGNAR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // operadores ::= IS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // objeto_nombre ::= IDENTIFICADOR objeto_nombre1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // objeto_nombre1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // objeto_nombre1 ::= PUNTO objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // objeto_nombre2 ::= PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // objeto_nombre2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
