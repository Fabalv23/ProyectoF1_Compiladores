
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package minisql;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u018e\000\002\002\004\000\002\006\002\000\002\003" +
    "\003\000\002\004\004\000\002\004\003\000\002\005\004" +
    "\000\002\005\004\000\002\005\004\000\002\005\004\000" +
    "\002\005\004\000\002\005\004\000\002\005\004\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\005" +
    "\004\000\002\005\004\000\002\005\004\000\002\005\003" +
    "\000\002\005\003\000\002\005\004\000\002\005\005\000" +
    "\002\005\003\000\002\246\011\000\002\250\010\000\002" +
    "\250\003\000\002\247\003\000\002\247\003\000\002\247" +
    "\003\000\002\252\003\000\002\252\006\000\002\251\005" +
    "\000\002\251\003\000\002\237\010\000\002\240\004\000" +
    "\002\240\004\000\002\241\003\000\002\241\003\000\002" +
    "\241\003\000\002\242\005\000\002\242\003\000\002\243" +
    "\003\000\002\243\003\000\002\244\004\000\002\244\006" +
    "\000\002\244\006\000\002\244\004\000\002\244\006\000" +
    "\002\244\006\000\002\245\006\000\002\226\023\000\002" +
    "\227\003\000\002\227\003\000\002\231\003\000\002\231" +
    "\007\000\002\231\003\000\002\232\006\000\002\236\003" +
    "\000\002\236\003\000\002\230\003\000\002\230\003\000" +
    "\002\223\005\000\002\223\005\000\002\224\006\000\002" +
    "\224\004\000\002\224\003\000\002\225\004\000\002\225" +
    "\003\000\002\204\007\000\002\204\006\000\002\205\007" +
    "\000\002\205\003\000\002\202\006\000\002\203\006\000" +
    "\002\203\003\000\002\207\015\000\002\210\004\000\002" +
    "\210\003\000\002\211\003\000\002\211\003\000\002\212" +
    "\003\000\002\212\003\000\002\213\007\000\002\214\004" +
    "\000\002\214\003\000\002\215\003\000\002\215\003\000" +
    "\002\215\003\000\002\215\003\000\002\216\004\000\002" +
    "\216\003\000\002\217\003\000\002\217\003\000\002\217" +
    "\005\000\002\220\004\000\002\220\003\000\002\221\003" +
    "\000\002\221\003\000\002\222\003\000\002\222\003\000" +
    "\002\163\004\000\002\164\004\000\002\164\004\000\002" +
    "\164\004\000\002\164\004\000\002\164\004\000\002\165" +
    "\004\000\002\166\003\000\002\166\003\000\002\167\006" +
    "\000\002\167\004\000\002\170\006\000\002\171\003\000" +
    "\002\171\003\000\002\172\003\000\002\172\003\000\002" +
    "\172\003\000\002\172\003\000\002\172\003\000\002\172" +
    "\003\000\002\172\003\000\002\173\004\000\002\174\005" +
    "\000\002\174\004\000\002\174\004\000\002\175\003\000" +
    "\002\176\006\000\002\176\005\000\002\176\006\000\002" +
    "\176\004\000\002\233\004\000\002\233\003\000\002\177" +
    "\005\000\002\200\004\000\002\201\005\000\002\201\003" +
    "\000\002\201\005\000\002\201\005\000\002\162\004\000" +
    "\002\162\003\000\002\125\004\000\002\126\004\000\002" +
    "\126\005\000\002\126\004\000\002\126\004\000\002\126" +
    "\004\000\002\127\004\000\002\130\010\000\002\130\004" +
    "\000\002\130\003\000\002\130\003\000\002\131\006\000" +
    "\002\131\006\000\002\131\006\000\002\131\006\000\002" +
    "\131\006\000\002\131\003\000\002\142\004\000\002\142" +
    "\003\000\002\132\007\000\002\132\003\000\002\133\003" +
    "\000\002\133\003\000\002\133\003\000\002\133\003\000" +
    "\002\134\011\000\002\135\005\000\002\235\004\000\002" +
    "\235\003\000\002\234\003\000\002\234\003\000\002\234" +
    "\003\000\002\136\006\000\002\136\010\000\002\136\003" +
    "\000\002\137\006\000\002\140\005\000\002\140\003\000" +
    "\002\141\004\000\002\145\003\000\002\145\006\000\002" +
    "\146\007\000\002\147\004\000\002\147\004\000\002\147" +
    "\003\000\002\150\004\000\002\151\005\000\002\151\003" +
    "\000\002\152\004\000\002\152\003\000\002\153\006\000" +
    "\002\153\006\000\002\153\006\000\002\153\003\000\002" +
    "\153\003\000\002\153\003\000\002\153\006\000\002\153" +
    "\003\000\002\153\003\000\002\153\003\000\002\153\003" +
    "\000\002\153\003\000\002\153\003\000\002\153\003\000" +
    "\002\153\006\000\002\153\006\000\002\153\003\000\002" +
    "\153\003\000\002\153\003\000\002\153\003\000\002\153" +
    "\010\000\002\153\010\000\002\153\010\000\002\154\004" +
    "\000\002\154\003\000\002\155\010\000\002\155\003\000" +
    "\002\155\004\000\002\155\005\000\002\155\014\000\002" +
    "\155\004\000\002\155\006\000\002\155\004\000\002\161" +
    "\006\000\002\161\003\000\002\143\010\000\002\143\003" +
    "\000\002\156\003\000\002\156\003\000\002\157\003\000" +
    "\002\144\003\000\002\144\005\000\002\071\013\000\002" +
    "\072\003\000\002\072\004\000\002\073\003\000\002\073" +
    "\003\000\002\073\004\000\002\073\003\000\002\074\005" +
    "\000\002\075\003\000\002\075\003\000\002\075\005\000" +
    "\002\076\004\000\002\076\003\000\002\077\003\000\002" +
    "\077\003\000\002\100\006\000\002\100\006\000\002\100" +
    "\006\000\002\100\006\000\002\100\006\000\002\100\003" +
    "\000\002\101\003\000\002\101\003\000\002\101\004\000" +
    "\002\102\003\000\002\102\003\000\002\103\004\000\002" +
    "\103\004\000\002\103\003\000\002\104\003\000\002\104" +
    "\003\000\002\105\003\000\002\067\005\000\002\106\003" +
    "\000\002\106\003\000\002\106\003\000\002\106\003\000" +
    "\002\106\003\000\002\107\005\000\002\110\004\000\002" +
    "\110\003\000\002\111\004\000\002\111\004\000\002\111" +
    "\003\000\002\111\003\000\002\112\013\000\002\112\003" +
    "\000\002\113\003\000\002\113\004\000\002\113\004\000" +
    "\002\113\004\000\002\113\003\000\002\114\003\000\002" +
    "\114\003\000\002\116\006\000\002\116\003\000\002\117" +
    "\004\000\002\117\003\000\002\120\006\000\002\120\006" +
    "\000\002\121\004\000\002\121\003\000\002\122\007\000" +
    "\002\122\007\000\002\122\003\000\002\123\003\000\002" +
    "\123\003\000\002\123\003\000\002\124\006\000\002\124" +
    "\003\000\002\056\010\000\002\056\010\000\002\057\003" +
    "\000\002\057\003\000\002\060\005\000\002\060\003\000" +
    "\002\061\004\000\002\062\005\000\002\062\003\000\002" +
    "\063\006\000\002\064\004\000\002\065\005\000\002\065" +
    "\003\000\002\066\004\000\002\066\003\000\002\042\004" +
    "\000\002\043\004\000\002\043\003\000\002\041\005\000" +
    "\002\041\003\000\002\041\003\000\002\041\004\000\002" +
    "\041\004\000\002\041\006\000\002\041\005\000\002\044" +
    "\004\000\002\045\004\000\002\045\003\000\002\046\006" +
    "\000\002\047\003\000\002\047\003\000\002\050\005\000" +
    "\002\051\005\000\002\051\003\000\002\052\004\000\002" +
    "\053\003\000\002\053\003\000\002\054\006\000\002\055" +
    "\005\000\002\055\003\000\002\040\005\000\002\002\012" +
    "\000\002\025\004\000\002\027\007\000\002\027\003\000" +
    "\002\026\003\000\002\031\005\000\002\031\005\000\002" +
    "\031\003\000\002\032\005\000\002\032\005\000\002\032" +
    "\003\000\002\033\005\000\002\033\003\000\002\033\003" +
    "\000\002\034\003\000\002\034\003\000\002\036\003\000" +
    "\002\037\003\000\002\037\003\000\002\013\010\000\002" +
    "\010\003\000\002\010\003\000\002\014\005\000\002\014" +
    "\003\000\002\017\005\000\002\017\003\000\002\020\003" +
    "\000\002\020\003\000\002\016\007\000\002\016\003\000" +
    "\002\021\004\000\002\021\003\000\002\022\003\000\002" +
    "\022\006\000\002\023\003\000\002\023\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\206\004\000\002\007\003\000\002\007\003\000" +
    "\002\007\003\000\002\007\003\000\002\007\003\000\002" +
    "\007\003\000\002\007\006\000\002\007\003\000\002\007" +
    "\003\000\002\015\004\000\002\011\003\000\002\011\004" +
    "\000\002\012\004\000\002\012\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0338\000\042\003\030\341\016\374\047\u0102\015\u0103" +
    "\010\u0105\041\u010d\037\u0111\025\u0126\040\u0132\021\u0157\020" +
    "\u016b\014\u016c\024\u016e\034\u016f\046\u0178\036\001\002\000" +
    "\006\347\122\350\123\001\002\000\006\347\122\350\123" +
    "\001\002\000\006\347\122\350\123\001\002\000\006\347" +
    "\122\350\123\001\002\000\004\u0104\u0335\001\002\000\006" +
    "\347\122\350\123\001\002\000\006\347\122\350\123\001" +
    "\002\000\006\347\122\350\123\001\002\000\004\372\100" +
    "\001\002\000\006\343\u0315\372\000\001\002\000\006\342" +
    "\000\343\u0315\001\002\000\004\002\u0314\001\002\000\014" +
    "\u0104\u02c9\u0106\u02c6\u0107\u02c7\u0127\u02ca\u0130\u02c8\001\002\000" +
    "\004\372\100\001\002\000\060\002\uffee\003\uffee\341\uffee" +
    "\347\uffee\350\uffee\374\uffee\u0102\uffee\u0103\uffee\u0105\uffee\u010d" +
    "\uffee\u0111\uffee\u0126\uffee\u0132\uffee\u0157\uffee\u016b\uffee\u016c\uffee" +
    "\u016d\uffee\u016e\uffee\u016f\uffee\u0172\uffee\u0176\uffee\u0177\uffee\u0178" +
    "\uffee\001\002\000\006\347\122\350\123\001\002\000\006" +
    "\u0173\u02c2\u0174\u02c1\001\002\000\044\343\u023f\344\000\355" +
    "\000\366\000\367\000\371\000\372\000\u0100\u023c\u010b\000" +
    "\u0112\u023b\u0113\000\u0114\000\u0115\000\u0116\000\u0117\000\u0119" +
    "\u023e\u0165\000\001\002\000\006\347\122\350\123\001\002" +
    "\000\006\347\122\350\123\001\002\000\060\002\uffeb\003" +
    "\uffeb\341\uffeb\347\uffeb\350\uffeb\374\uffeb\u0102\uffeb\u0103\uffeb" +
    "\u0105\uffeb\u010d\uffeb\u0111\uffeb\u0126\uffeb\u0132\uffeb\u0157\uffeb\u016b" +
    "\uffeb\u016c\uffeb\u016d\uffeb\u016e\uffeb\u016f\uffeb\u0172\uffeb\u0176\uffeb" +
    "\u0177\uffeb\u0178\uffeb\001\002\000\006\347\122\350\123\001" +
    "\002\000\006\347\122\350\123\001\002\000\006\347\122" +
    "\350\123\001\002\000\006\372\100\u0165\051\001\002\000" +
    "\014\347\000\350\000\372\100\u012a\000\u0165\051\001\002" +
    "\000\004\u0173\u01f5\001\002\000\006\372\000\u010f\u01d7\001" +
    "\002\000\032\354\217\u0104\214\u0106\000\u0107\206\u0127\207" +
    "\u0130\215\u013f\210\u0140\212\u0141\220\u0163\000\u0164\000\u0170" +
    "\000\001\002\000\020\u0104\134\u0106\126\u0107\125\u0127\127" +
    "\u0130\133\u0164\131\u0170\135\001\002\000\060\002\uffef\003" +
    "\uffef\341\uffef\347\uffef\350\uffef\374\uffef\u0102\uffef\u0103\uffef" +
    "\u0105\uffef\u010d\uffef\u0111\uffef\u0126\uffef\u0132\uffef\u0157\uffef\u016b" +
    "\uffef\u016c\uffef\u016d\uffef\u016e\uffef\u016f\uffef\u0172\uffef\u0176\uffef" +
    "\u0177\uffef\u0178\uffef\001\002\000\006\347\122\350\123\001" +
    "\002\000\060\002\ufffd\003\ufffd\341\ufffd\347\ufffd\350\ufffd" +
    "\374\ufffd\u0102\ufffd\u0103\ufffd\u0105\ufffd\u010d\ufffd\u0111\ufffd\u0126" +
    "\ufffd\u0132\ufffd\u0157\ufffd\u016b\ufffd\u016c\ufffd\u016d\ufffd\u016e\ufffd" +
    "\u016f\ufffd\u0172\ufffd\u0176\ufffd\u0177\ufffd\u0178\ufffd\001\002\000" +
    "\044\002\uffff\003\030\341\016\374\047\u0102\015\u0103\010" +
    "\u0105\041\u010d\037\u0111\025\u0126\040\u0132\021\u0157\020\u016b" +
    "\014\u016c\024\u016e\034\u016f\046\u0178\036\001\002\000\004" +
    "\372\100\001\002\000\006\u0131\050\u0165\051\001\002\000" +
    "\004\u010a\076\001\002\000\004\372\075\001\002\000\004" +
    "\373\053\001\002\000\016\355\063\366\064\367\055\371" +
    "\061\u010b\060\u0165\051\001\002\000\066\342\ufe99\345\ufe99" +
    "\347\ufe99\350\ufe99\352\ufe99\353\ufe99\354\ufe99\375\ufe99\376" +
    "\ufe99\377\ufe99\u0100\ufe99\u0101\ufe99\u010b\ufe99\u0110\ufe99\u0118\ufe99" +
    "\u0120\ufe99\u0122\ufe99\u0123\ufe99\u0128\ufe99\u0133\ufe99\u0135\ufe99\u0137" +
    "\ufe99\u0138\ufe99\u013f\ufe99\u016d\ufe99\u017e\ufe99\001\002\000\120" +
    "\342\ufe9b\344\ufe9b\345\ufe9b\347\ufe9b\350\ufe9b\351\ufe9b\352" +
    "\ufe9b\353\ufe9b\354\ufe9b\355\ufe9b\366\ufe9b\367\ufe9b\371\ufe9b" +
    "\372\ufe9b\375\ufe9b\376\ufe9b\377\ufe9b\u0100\ufe9b\u0101\ufe9b\u010b" +
    "\ufe9b\u0110\ufe9b\u0113\ufe9b\u0114\ufe9b\u0115\ufe9b\u0116\ufe9b\u0117\ufe9b" +
    "\u0118\ufe9b\u0120\ufe9b\u0122\ufe9b\u0123\ufe9b\u0128\ufe9b\u0133\ufe9b\u0135" +
    "\ufe9b\u0137\ufe9b\u0138\ufe9b\u013f\ufe9b\u0165\ufe9b\u016d\ufe9b\u017e\ufe9b" +
    "\001\002\000\066\342\ufe85\345\ufe85\347\ufe85\350\ufe85\352" +
    "\ufe85\353\ufe85\354\ufe85\375\ufe85\376\ufe85\377\ufe85\u0100\ufe85" +
    "\u0101\ufe85\u010b\ufe85\u0110\ufe85\u0118\ufe85\u0120\ufe85\u0122\ufe85\u0123" +
    "\ufe85\u0128\ufe85\u0133\ufe85\u0135\ufe85\u0137\ufe85\u0138\ufe85\u013f\ufe85" +
    "\u016d\ufe85\u017e\ufe85\001\002\000\066\342\ufe98\345\ufe98\347" +
    "\ufe98\350\ufe98\352\ufe98\353\ufe98\354\ufe98\375\ufe98\376\ufe98" +
    "\377\ufe98\u0100\ufe98\u0101\ufe98\u010b\ufe98\u0110\ufe98\u0118\ufe98\u0120" +
    "\ufe98\u0122\ufe98\u0123\ufe98\u0128\ufe98\u0133\ufe98\u0135\ufe98\u0137\ufe98" +
    "\u0138\ufe98\u013f\ufe98\u016d\ufe98\u017e\ufe98\001\002\000\066\342" +
    "\ufe84\345\ufe84\347\ufe84\350\ufe84\352\ufe84\353\ufe84\354\ufe84" +
    "\375\ufe84\376\ufe84\377\ufe84\u0100\ufe84\u0101\ufe84\u010b\ufe84\u0110" +
    "\ufe84\u0118\ufe84\u0120\ufe84\u0122\ufe84\u0123\ufe84\u0128\ufe84\u0133\ufe84" +
    "\u0135\ufe84\u0137\ufe84\u0138\ufe84\u013f\ufe84\u016d\ufe84\u017e\ufe84\001" +
    "\002\000\066\342\ufe9a\345\ufe9a\347\ufe9a\350\ufe9a\352\ufe9a" +
    "\353\ufe9a\354\ufe9a\375\ufe9a\376\ufe9a\377\ufe9a\u0100\ufe9a\u0101" +
    "\ufe9a\u010b\ufe9a\u0110\ufe9a\u0118\ufe9a\u0120\ufe9a\u0122\ufe9a\u0123\ufe9a" +
    "\u0128\ufe9a\u0133\ufe9a\u0135\ufe9a\u0137\ufe9a\u0138\ufe9a\u013f\ufe9a\u016d" +
    "\ufe9a\u017e\ufe9a\001\002\000\066\342\ufe83\345\ufe83\347\ufe83" +
    "\350\ufe83\352\ufe83\353\ufe83\354\ufe83\375\ufe83\376\ufe83\377" +
    "\ufe83\u0100\ufe83\u0101\ufe83\u010b\ufe83\u0110\ufe83\u0118\ufe83\u0120\ufe83" +
    "\u0122\ufe83\u0123\ufe83\u0128\ufe83\u0133\ufe83\u0135\ufe83\u0137\ufe83\u0138" +
    "\ufe83\u013f\ufe83\u016d\ufe83\u017e\ufe83\001\002\000\066\342\ufe86" +
    "\345\ufe86\347\ufe86\350\ufe86\352\ufe86\353\ufe86\354\ufe86\375" +
    "\ufe86\376\ufe86\377\ufe86\u0100\ufe86\u0101\ufe86\u010b\ufe86\u0110\ufe86" +
    "\u0118\ufe86\u0120\ufe86\u0122\ufe86\u0123\ufe86\u0128\ufe86\u0133\ufe86\u0135" +
    "\ufe86\u0137\ufe86\u0138\ufe86\u013f\ufe86\u016d\ufe86\u017e\ufe86\001\002" +
    "\000\120\342\ufe9c\344\ufe9c\345\ufe9c\347\ufe9c\350\ufe9c\351" +
    "\ufe9c\352\ufe9c\353\ufe9c\354\ufe9c\355\ufe9c\366\ufe9c\367\ufe9c" +
    "\371\ufe9c\372\ufe9c\375\ufe9c\376\ufe9c\377\ufe9c\u0100\ufe9c\u0101" +
    "\ufe9c\u010b\ufe9c\u0110\ufe9c\u0113\ufe9c\u0114\ufe9c\u0115\ufe9c\u0116\ufe9c" +
    "\u0117\ufe9c\u0118\ufe9c\u0120\ufe9c\u0122\ufe9c\u0123\ufe9c\u0128\ufe9c\u0133" +
    "\ufe9c\u0135\ufe9c\u0137\ufe9c\u0138\ufe9c\u013f\ufe9c\u0165\ufe9c\u016d\ufe9c" +
    "\u017e\ufe9c\001\002\000\010\347\000\350\000\375\066\001" +
    "\002\000\004\u0165\051\001\002\000\006\347\uffbd\350\uffbd" +
    "\001\002\000\006\347\uffba\350\uffba\001\002\000\004\373" +
    "\072\001\002\000\016\355\063\366\064\367\055\371\061" +
    "\u010b\060\u0165\051\001\002\000\010\347\000\350\000\375" +
    "\066\001\002\000\006\347\uffbb\350\uffbb\001\002\000\146" +
    "\340\ufe82\342\ufe82\345\ufe82\347\ufe82\350\ufe82\352\ufe82\353" +
    "\ufe82\354\ufe82\370\ufe82\373\ufe82\375\ufe82\376\ufe82\377\ufe82" +
    "\u0100\ufe82\u0101\ufe82\u0104\ufe82\u010b\ufe82\u0110\ufe82\u0118\ufe82\u0120" +
    "\ufe82\u0122\ufe82\u0123\ufe82\u0128\ufe82\u012a\ufe82\u0133\ufe82\u0135\ufe82" +
    "\u0137\ufe82\u0138\ufe82\u013d\ufe82\u013f\ufe82\u0145\ufe82\u0146\ufe82\u0147" +
    "\ufe82\u0148\ufe82\u0149\ufe82\u014a\ufe82\u014b\ufe82\u014c\ufe82\u014d\ufe82" +
    "\u014e\ufe82\u014f\ufe82\u0150\ufe82\u0151\ufe82\u0152\ufe82\u0153\ufe82\u0154" +
    "\ufe82\u0155\ufe82\u0156\ufe82\u016d\ufe82\u017e\ufe82\001\002\000\010" +
    "\347\000\350\000\375\066\001\002\000\006\347\uffbc\350" +
    "\uffbc\001\002\000\270\340\000\342\000\344\000\345\000" +
    "\346\115\347\000\350\000\352\000\353\000\354\000\355" +
    "\000\356\000\357\000\360\000\361\000\362\000\364\000" +
    "\365\000\366\000\367\000\370\000\371\000\372\000\373" +
    "\000\374\000\375\000\376\000\377\000\u0100\000\u0101\000" +
    "\u0105\000\u010a\000\u010b\000\u010e\000\u010f\000\u0110\000\u0118" +
    "\000\u011a\000\u011b\000\u011c\000\u011d\000\u011e\000\u0120\000" +
    "\u0122\000\u0123\000\u0124\000\u0125\000\u0128\000\u0129\000\u012a" +
    "\000\u0133\000\u0135\000\u0137\000\u0138\000\u013c\000\u013d\000" +
    "\u013f\000\u0144\000\u0145\000\u0146\000\u0147\000\u0148\000\u0149" +
    "\000\u014a\000\u014b\000\u014c\000\u014d\000\u014e\000\u014f\000" +
    "\u0150\000\u0151\000\u0152\000\u0153\000\u0154\000\u0155\000\u0156" +
    "\000\u0157\000\u015a\000\u015b\000\u015c\000\u015d\000\u015e\000" +
    "\u015f\000\u0162\000\u0165\000\u016d\000\u0179\000\u017a\000\u017b" +
    "\000\u017c\000\u017e\000\001\002\000\022\347\000\350\000" +
    "\355\063\366\064\367\055\371\061\u010b\060\u0165\051\001" +
    "\002\000\014\345\ufe83\347\ufe83\350\ufe83\373\112\375\ufe83" +
    "\001\002\000\010\345\uffc0\347\uffc0\350\uffc0\001\002\000" +
    "\006\347\uffc3\350\uffc3\001\002\000\012\345\000\347\000" +
    "\350\000\375\106\001\002\000\024\345\000\347\000\350" +
    "\000\355\063\366\064\367\055\371\061\u010b\060\u0165\051" +
    "\001\002\000\010\345\uffc1\347\uffc1\350\uffc1\001\002\000" +
    "\010\345\uffbe\347\uffbe\350\uffbe\001\002\000\010\345\uffbf" +
    "\347\uffbf\350\uffbf\001\002\000\016\355\063\366\064\367" +
    "\055\371\061\u010b\060\u0165\051\001\002\000\012\345\000" +
    "\347\000\350\000\375\106\001\002\000\010\345\uffc2\347" +
    "\uffc2\350\uffc2\001\002\000\004\372\100\001\002\000\266" +
    "\340\ufe78\342\ufe78\344\ufe78\345\ufe78\347\ufe78\350\ufe78\352" +
    "\ufe78\353\ufe78\354\ufe78\355\ufe78\356\ufe78\357\ufe78\360\ufe78" +
    "\361\ufe78\362\ufe78\364\ufe78\365\ufe78\366\ufe78\367\ufe78\370" +
    "\ufe78\371\ufe78\372\ufe78\373\ufe78\374\ufe78\375\ufe78\376\ufe78" +
    "\377\ufe78\u0100\ufe78\u0101\ufe78\u0105\ufe78\u010a\ufe78\u010b\ufe78\u010e" +
    "\ufe78\u010f\ufe78\u0110\ufe78\u0118\ufe78\u011a\ufe78\u011b\ufe78\u011c\ufe78" +
    "\u011d\ufe78\u011e\ufe78\u0120\ufe78\u0122\ufe78\u0123\ufe78\u0124\ufe78\u0125" +
    "\ufe78\u0128\ufe78\u0129\ufe78\u012a\ufe78\u0133\ufe78\u0135\ufe78\u0137\ufe78" +
    "\u0138\ufe78\u013c\ufe78\u013d\ufe78\u013f\ufe78\u0144\ufe78\u0145\ufe78\u0146" +
    "\ufe78\u0147\ufe78\u0148\ufe78\u0149\ufe78\u014a\ufe78\u014b\ufe78\u014c\ufe78" +
    "\u014d\ufe78\u014e\ufe78\u014f\ufe78\u0150\ufe78\u0151\ufe78\u0152\ufe78\u0153" +
    "\ufe78\u0154\ufe78\u0155\ufe78\u0156\ufe78\u0157\ufe78\u015a\ufe78\u015b\ufe78" +
    "\u015c\ufe78\u015d\ufe78\u015e\ufe78\u015f\ufe78\u0162\ufe78\u0165\ufe78\u016d" +
    "\ufe78\u0179\ufe78\u017a\ufe78\u017b\ufe78\u017c\ufe78\u017e\ufe78\001\002" +
    "\000\266\340\ufe77\342\ufe77\344\ufe77\345\ufe77\347\ufe77\350" +
    "\ufe77\352\ufe77\353\ufe77\354\ufe77\355\ufe77\356\ufe77\357\ufe77" +
    "\360\ufe77\361\ufe77\362\ufe77\364\ufe77\365\ufe77\366\ufe77\367" +
    "\ufe77\370\ufe77\371\ufe77\372\ufe77\373\ufe77\374\ufe77\375\ufe77" +
    "\376\ufe77\377\ufe77\u0100\ufe77\u0101\ufe77\u0105\ufe77\u010a\ufe77\u010b" +
    "\ufe77\u010e\ufe77\u010f\ufe77\u0110\ufe77\u0118\ufe77\u011a\ufe77\u011b\ufe77" +
    "\u011c\ufe77\u011d\ufe77\u011e\ufe77\u0120\ufe77\u0122\ufe77\u0123\ufe77\u0124" +
    "\ufe77\u0125\ufe77\u0128\ufe77\u0129\ufe77\u012a\ufe77\u0133\ufe77\u0135\ufe77" +
    "\u0137\ufe77\u0138\ufe77\u013c\ufe77\u013d\ufe77\u013f\ufe77\u0144\ufe77\u0145" +
    "\ufe77\u0146\ufe77\u0147\ufe77\u0148\ufe77\u0149\ufe77\u014a\ufe77\u014b\ufe77" +
    "\u014c\ufe77\u014d\ufe77\u014e\ufe77\u014f\ufe77\u0150\ufe77\u0151\ufe77\u0152" +
    "\ufe77\u0153\ufe77\u0154\ufe77\u0155\ufe77\u0156\ufe77\u0157\ufe77\u015a\ufe77" +
    "\u015b\ufe77\u015c\ufe77\u015d\ufe77\u015e\ufe77\u015f\ufe77\u0162\ufe77\u0165" +
    "\ufe77\u016d\ufe77\u0179\ufe77\u017a\ufe77\u017b\ufe77\u017c\ufe77\u017e\ufe77" +
    "\001\002\000\266\340\ufe76\342\ufe76\344\ufe76\345\ufe76\347" +
    "\ufe76\350\ufe76\352\ufe76\353\ufe76\354\ufe76\355\ufe76\356\ufe76" +
    "\357\ufe76\360\ufe76\361\ufe76\362\ufe76\364\ufe76\365\ufe76\366" +
    "\ufe76\367\ufe76\370\ufe76\371\ufe76\372\ufe76\373\ufe76\374\ufe76" +
    "\375\ufe76\376\ufe76\377\ufe76\u0100\ufe76\u0101\ufe76\u0105\ufe76\u010a" +
    "\ufe76\u010b\ufe76\u010e\ufe76\u010f\ufe76\u0110\ufe76\u0118\ufe76\u011a\ufe76" +
    "\u011b\ufe76\u011c\ufe76\u011d\ufe76\u011e\ufe76\u0120\ufe76\u0122\ufe76\u0123" +
    "\ufe76\u0124\ufe76\u0125\ufe76\u0128\ufe76\u0129\ufe76\u012a\ufe76\u0133\ufe76" +
    "\u0135\ufe76\u0137\ufe76\u0138\ufe76\u013c\ufe76\u013d\ufe76\u013f\ufe76\u0144" +
    "\ufe76\u0145\ufe76\u0146\ufe76\u0147\ufe76\u0148\ufe76\u0149\ufe76\u014a\ufe76" +
    "\u014b\ufe76\u014c\ufe76\u014d\ufe76\u014e\ufe76\u014f\ufe76\u0150\ufe76\u0151" +
    "\ufe76\u0152\ufe76\u0153\ufe76\u0154\ufe76\u0155\ufe76\u0156\ufe76\u0157\ufe76" +
    "\u015a\ufe76\u015b\ufe76\u015c\ufe76\u015d\ufe76\u015e\ufe76\u015f\ufe76\u0162" +
    "\ufe76\u0165\ufe76\u016d\ufe76\u0179\ufe76\u017a\ufe76\u017b\ufe76\u017c\ufe76" +
    "\u017e\ufe76\001\002\000\060\002\ufffe\003\ufffe\341\ufffe\347" +
    "\ufffe\350\ufffe\374\ufffe\u0102\ufffe\u0103\ufffe\u0105\ufffe\u010d\ufffe" +
    "\u0111\ufffe\u0126\ufffe\u0132\ufffe\u0157\ufffe\u016b\ufffe\u016c\ufffe\u016d" +
    "\ufffe\u016e\ufffe\u016f\ufffe\u0172\ufffe\u0176\ufffe\u0177\ufffe\u0178\ufffe" +
    "\001\002\000\060\002\ufe96\003\ufe96\341\ufe96\347\ufe96\350" +
    "\ufe96\374\ufe96\u0102\ufe96\u0103\ufe96\u0105\ufe96\u010d\ufe96\u0111\ufe96" +
    "\u0126\ufe96\u0132\ufe96\u0157\ufe96\u016b\ufe96\u016c\ufe96\u016d\ufe96\u016e" +
    "\ufe96\u016f\ufe96\u0172\ufe96\u0176\ufe96\u0177\ufe96\u0178\ufe96\001\002" +
    "\000\060\002\ufe95\003\ufe95\341\ufe95\347\ufe95\350\ufe95\374" +
    "\ufe95\u0102\ufe95\u0103\ufe95\u0105\ufe95\u010d\ufe95\u0111\ufe95\u0126\ufe95" +
    "\u0132\ufe95\u0157\ufe95\u016b\ufe95\u016c\ufe95\u016d\ufe95\u016e\ufe95\u016f" +
    "\ufe95\u0172\ufe95\u0176\ufe95\u0177\ufe95\u0178\ufe95\001\002\000\060" +
    "\002\ufff7\003\ufff7\341\ufff7\347\ufff7\350\ufff7\374\ufff7\u0102" +
    "\ufff7\u0103\ufff7\u0105\ufff7\u010d\ufff7\u0111\ufff7\u0126\ufff7\u0132\ufff7" +
    "\u0157\ufff7\u016b\ufff7\u016c\ufff7\u016d\ufff7\u016e\ufff7\u016f\ufff7\u0172" +
    "\ufff7\u0176\ufff7\u0177\ufff7\u0178\ufff7\001\002\000\006\372\000" +
    "\u0108\142\001\002\000\006\372\000\u0108\142\001\002\000" +
    "\006\372\000\u0108\142\001\002\000\006\347\ufec4\350\ufec4" +
    "\001\002\000\004\372\100\001\002\000\006\347\ufec0\350" +
    "\ufec0\001\002\000\006\372\000\u0108\142\001\002\000\006" +
    "\372\000\u0108\142\001\002\000\004\372\100\001\002\000" +
    "\006\347\ufebf\350\ufebf\001\002\000\006\347\ufebd\350\ufebd" +
    "\001\002\000\004\372\ufec2\001\002\000\004\372\100\001" +
    "\002\000\004\u0109\143\001\002\000\004\372\ufec3\001\002" +
    "\000\010\347\000\350\000\375\146\001\002\000\006\347" +
    "\ufec1\350\ufec1\001\002\000\004\372\100\001\002\000\006" +
    "\347\ufeba\350\ufeba\001\002\000\006\347\ufeb8\350\ufeb8\001" +
    "\002\000\006\347\ufeb9\350\ufeb9\001\002\000\004\372\100" +
    "\001\002\000\006\347\ufebb\350\ufebb\001\002\000\006\347" +
    "\ufebe\350\ufebe\001\002\000\004\372\100\001\002\000\010" +
    "\347\000\350\000\375\157\001\002\000\004\372\100\001" +
    "\002\000\006\347\ufebc\350\ufebc\001\002\000\024\345\ufeac" +
    "\347\ufeac\350\ufeac\352\ufeac\u0122\ufeac\u0123\ufeac\u0124\ufeac\u0125" +
    "\ufeac\u017e\ufeac\001\002\000\026\345\000\347\000\350\000" +
    "\352\000\375\157\u0122\000\u0123\000\u0124\000\u0125\000\u017e" +
    "\000\001\002\000\024\345\ufead\347\ufead\350\ufead\352\ufead" +
    "\u0122\ufead\u0123\ufead\u0124\ufead\u0125\ufead\u017e\ufead\001\002\000" +
    "\004\372\100\001\002\000\006\372\100\u010a\167\001\002" +
    "\000\006\347\ufeb5\350\ufeb5\001\002\000\004\372\100\001" +
    "\002\000\010\347\000\350\000\375\157\001\002\000\006" +
    "\347\ufeb6\350\ufeb6\001\002\000\006\347\ufeb7\350\ufeb7\001" +
    "\002\000\006\347\ufeb1\350\ufeb1\001\002\000\010\347\000" +
    "\350\000\375\175\001\002\000\004\372\100\001\002\000" +
    "\006\347\ufeb4\350\ufeb4\001\002\000\006\347\ufeb2\350\ufeb2" +
    "\001\002\000\004\u010a\167\001\002\000\006\347\ufeb3\350" +
    "\ufeb3\001\002\000\004\372\100\001\002\000\010\347\000" +
    "\350\000\375\157\001\002\000\006\347\ufeae\350\ufeae\001" +
    "\002\000\006\347\uff75\350\uff75\001\002\000\004\372\100" +
    "\001\002\000\004\372\u01a6\001\002\000\004\u0106\uff60\001" +
    "\002\000\010\u0163\u0154\u0164\u0153\u0170\u0155\001\002\000\006" +
    "\344\uff5f\u0106\uff5f\001\002\000\012\u0106\uff5d\u0163\uffb4\u0164" +
    "\uffb4\u0170\uffb4\001\002\000\004\372\100\001\002\000\004" +
    "\372\100\001\002\000\004\u0106\222\001\002\000\004\u0157" +
    "\221\001\002\000\006\344\uff5e\u0106\uff5e\001\002\000\010" +
    "\u0163\uffb5\u0164\uffb5\u0170\uffb5\001\002\000\004\372\100\001" +
    "\002\000\004\u010a\225\001\002\000\006\347\uff73\350\uff73" +
    "\001\002\000\004\372\100\001\002\000\004\344\227\001" +
    "\002\000\004\372\100\001\002\000\012\345\000\375\000" +
    "\u0124\247\u0125\250\001\002\000\004\345\232\001\002\000" +
    "\012\347\000\350\000\u010a\234\u0142\236\001\002\000\006" +
    "\347\uff5c\350\uff5c\001\002\000\004\372\100\001\002\000" +
    "\006\347\uff53\350\uff53\001\002\000\004\344\237\001\002" +
    "\000\004\372\100\001\002\000\004\345\241\001\002\000" +
    "\006\347\uff55\350\uff55\001\002\000\004\344\243\001\002" +
    "\000\004\372\100\001\002\000\004\345\245\001\002\000" +
    "\012\347\000\350\000\u010a\234\u0142\236\001\002\000\006" +
    "\347\uff54\350\uff54\001\002\000\006\345\uff58\375\uff58\001" +
    "\002\000\006\345\uff57\375\uff57\001\002\000\006\345\uff56" +
    "\375\uff56\001\002\000\006\345\000\375\253\001\002\000" +
    "\004\372\100\001\002\000\004\345\uff59\001\002\000\004" +
    "\345\uff5b\001\002\000\004\345\uff5a\001\002\000\006\344" +
    "\263\u0118\000\001\002\000\006\347\uff70\350\uff70\001\002" +
    "\000\004\u0118\270\001\002\000\004\u0118\uff50\001\002\000" +
    "\004\372\100\001\002\000\004\345\267\001\002\000\006" +
    "\345\000\375\157\001\002\000\004\345\uff4f\001\002\000" +
    "\004\u0118\uff51\001\002\000\004\u0111\025\001\002\000\006" +
    "\347\uff52\350\uff52\001\002\000\004\344\274\001\002\000" +
    "\006\347\uff72\350\uff72\001\002\000\026\372\100\u010b\302" +
    "\u0110\303\u0128\311\u0133\275\u0135\312\u0137\306\u0138\307\u0139" +
    "\305\u013f\301\001\002\000\004\344\u014d\001\002\000\012" +
    "\345\000\347\000\350\000\375\u0149\001\002\000\012\345" +
    "\uff1b\347\uff1b\350\uff1b\375\uff1b\001\002\000\012\345\uff46" +
    "\347\uff46\350\uff46\375\uff46\001\002\000\034\344\344\345" +
    "\000\347\000\350\000\375\000\u010b\000\u0110\000\u0128\000" +
    "\u0133\000\u0135\000\u0137\000\u0138\000\u013f\000\001\002\000" +
    "\032\345\uff29\347\uff29\350\uff29\375\uff29\u010b\uff29\u0110\uff29" +
    "\u0128\uff29\u0133\uff29\u0135\uff29\u0137\uff29\u0138\uff29\u013f\uff29\001" +
    "\002\000\016\355\063\366\064\367\055\371\061\u010b\060" +
    "\u0165\051\001\002\000\054\340\u0120\370\u010d\u013d\u011a\u0145" +
    "\u0111\u0146\u0115\u0147\u011e\u0148\u010f\u0149\u0117\u014a\u0112\u014b\u010e" +
    "\u014c\u0113\u014d\u011b\u014e\u0119\u014f\u010c\u0150\u011d\u0151\u0116\u0152" +
    "\u010b\u0153\u011f\u0154\u0118\u0155\u0110\u0156\u011c\001\002\000\004" +
    "\372\100\001\002\000\004\u010b\u0108\001\002\000\004\344" +
    "\356\001\002\000\004\345\350\001\002\000\004\u0134\324" +
    "\001\002\000\004\u0134\313\001\002\000\004\344\314\001" +
    "\002\000\004\372\100\001\002\000\004\345\316\001\002" +
    "\000\004\u0136\317\001\002\000\004\372\100\001\002\000" +
    "\004\344\321\001\002\000\004\372\100\001\002\000\004" +
    "\345\323\001\002\000\032\345\uff26\347\uff26\350\uff26\375" +
    "\uff26\u010b\uff26\u0110\uff26\u0128\uff26\u0133\uff26\u0135\uff26\u0137\uff26" +
    "\u0138\uff26\u013f\uff26\001\002\000\030\344\000\u010b\302\u0110" +
    "\303\u0128\311\u0133\275\u0135\312\u0137\306\u0138\307\u013f\326" +
    "\u0140\212\u0141\220\001\002\000\032\345\uff1f\347\uff1f\350" +
    "\uff1f\375\uff1f\u010b\uff1f\u0110\uff1f\u0128\uff1f\u0133\uff1f\u0135\uff1f" +
    "\u0137\uff1f\u0138\uff1f\u013f\uff1f\001\002\000\034\344\344\345" +
    "\000\347\000\350\000\375\000\u010b\000\u0110\000\u0128\000" +
    "\u0133\000\u0135\000\u0137\000\u0138\000\u013f\000\001\002\000" +
    "\004\344\uff5d\001\002\000\032\345\uff27\347\uff27\350\uff27" +
    "\375\uff27\u010b\uff27\u0110\uff27\u0128\uff27\u0133\uff27\u0135\uff27\u0137" +
    "\uff27\u0138\uff27\u013f\uff27\001\002\000\004\344\332\001\002" +
    "\000\004\372\100\001\002\000\012\345\000\375\157\u0124" +
    "\000\u0125\000\001\002\000\010\345\000\u0124\335\u0125\336" +
    "\001\002\000\016\345\ufed8\347\ufed8\350\ufed8\375\ufed8\u0123" +
    "\ufed8\u017e\ufed8\001\002\000\016\345\ufed7\347\ufed7\350\ufed7" +
    "\375\ufed7\u0123\ufed7\u017e\ufed7\001\002\000\016\345\ufed6\347" +
    "\ufed6\350\ufed6\375\ufed6\u0123\ufed6\u017e\ufed6\001\002\000\004" +
    "\345\341\001\002\000\032\345\uff20\347\uff20\350\uff20\375" +
    "\uff20\u010b\uff20\u0110\uff20\u0128\uff20\u0133\uff20\u0135\uff20\u0137\uff20" +
    "\u0138\uff20\u013f\uff20\001\002\000\032\345\uff28\347\uff28\350" +
    "\uff28\375\uff28\u010b\uff28\u0110\uff28\u0128\uff28\u0133\uff28\u0135\uff28" +
    "\u0137\uff28\u0138\uff28\u013f\uff28\001\002\000\032\345\uff21\347" +
    "\uff21\350\uff21\375\uff21\u010b\uff21\u0110\uff21\u0128\uff21\u0133\uff21" +
    "\u0135\uff21\u0137\uff21\u0138\uff21\u013f\uff21\001\002\000\004\372" +
    "\100\001\002\000\006\345\000\375\157\001\002\000\004" +
    "\345\347\001\002\000\032\345\uff22\347\uff22\350\uff22\375" +
    "\uff22\u010b\uff22\u0110\uff22\u0128\uff22\u0133\uff22\u0135\uff22\u0137\uff22" +
    "\u0138\uff22\u013f\uff22\001\002\000\010\347\000\350\000\u010a" +
    "\352\001\002\000\006\347\uff4c\350\uff4c\001\002\000\006" +
    "\372\100\u0128\354\001\002\000\006\347\uff49\350\uff49\001" +
    "\002\000\006\347\uff4a\350\uff4a\001\002\000\006\347\uff4b" +
    "\350\uff4b\001\002\000\006\345\000\372\100\001\002\000" +
    "\004\345\u0107\001\002\000\024\356\363\357\366\360\364" +
    "\361\372\362\371\364\373\365\367\373\370\u013c\374\001" +
    "\002\000\022\345\ufe8a\347\ufe8a\350\ufe8a\352\ufe8a\u0120\ufe8a" +
    "\u0122\ufe8a\u0123\ufe8a\u017e\ufe8a\001\002\000\004\345\uff1c\001" +
    "\002\000\022\344\ufe81\355\ufe81\366\ufe81\367\ufe81\371\ufe81" +
    "\372\ufe81\u010b\ufe81\u0165\ufe81\001\002\000\022\344\ufe7f\355" +
    "\ufe7f\366\ufe7f\367\ufe7f\371\ufe7f\372\ufe7f\u010b\ufe7f\u0165\ufe7f" +
    "\001\002\000\016\355\063\366\064\367\055\371\061\u010b" +
    "\060\u0165\051\001\002\000\022\344\ufe80\355\ufe80\366\ufe80" +
    "\367\ufe80\371\ufe80\372\ufe80\u010b\ufe80\u0165\ufe80\001\002\000" +
    "\006\366\064\367\055\001\002\000\022\344\ufe7a\355\ufe7a" +
    "\366\ufe7a\367\ufe7a\371\ufe7a\372\ufe7a\u010b\ufe7a\u0165\ufe7a\001" +
    "\002\000\022\344\ufe7d\355\ufe7d\366\ufe7d\367\ufe7d\371\ufe7d" +
    "\372\ufe7d\u010b\ufe7d\u0165\ufe7d\001\002\000\022\344\ufe7e\355" +
    "\ufe7e\366\ufe7e\367\ufe7e\371\ufe7e\372\ufe7e\u010b\ufe7e\u0165\ufe7e" +
    "\001\002\000\022\344\ufe7c\355\ufe7c\366\ufe7c\367\ufe7c\371" +
    "\ufe7c\372\ufe7c\u010b\ufe7c\u0165\ufe7c\001\002\000\022\344\ufe79" +
    "\355\ufe79\366\ufe79\367\ufe79\371\ufe79\372\ufe79\u010b\ufe79\u0165" +
    "\ufe79\001\002\000\004\353\376\001\002\000\004\366\377" +
    "\001\002\000\022\344\ufe7b\355\ufe7b\366\ufe7b\367\ufe7b\371" +
    "\ufe7b\372\ufe7b\u010b\ufe7b\u0165\ufe7b\001\002\000\026\345\000" +
    "\347\000\350\000\352\000\353\u0102\354\u0105\u0120\000\u0122" +
    "\000\u0123\000\u017e\000\001\002\000\022\345\ufe89\347\ufe89" +
    "\350\ufe89\352\ufe89\u0120\ufe89\u0122\ufe89\u0123\ufe89\u017e\ufe89\001" +
    "\002\000\036\345\ufe88\347\ufe88\350\ufe88\352\ufe88\372\ufe88" +
    "\u0113\ufe88\u0114\ufe88\u0115\ufe88\u0116\ufe88\u0117\ufe88\u0120\ufe88\u0122" +
    "\ufe88\u0123\ufe88\u017e\ufe88\001\002\000\024\345\000\347\000" +
    "\350\000\352\000\372\100\u0120\000\u0122\000\u0123\000\u017e" +
    "\000\001\002\000\022\345\ufe8b\347\ufe8b\350\ufe8b\352\ufe8b" +
    "\u0120\ufe8b\u0122\ufe8b\u0123\ufe8b\u017e\ufe8b\001\002\000\036\345" +
    "\ufe87\347\ufe87\350\ufe87\352\ufe87\372\ufe87\u0113\ufe87\u0114\ufe87" +
    "\u0115\ufe87\u0116\ufe87\u0117\ufe87\u0120\ufe87\u0122\ufe87\u0123\ufe87\u017e" +
    "\ufe87\001\002\000\022\345\ufe8c\347\ufe8c\350\ufe8c\352\ufe8c" +
    "\u0120\ufe8c\u0122\ufe8c\u0123\ufe8c\u017e\ufe8c\001\002\000\032\345" +
    "\uff24\347\uff24\350\uff24\375\uff24\u010b\uff24\u0110\uff24\u0128\uff24" +
    "\u0133\uff24\u0135\uff24\u0137\uff24\u0138\uff24\u013f\uff24\001\002\000" +
    "\032\345\uff25\347\uff25\350\uff25\375\uff25\u010b\uff25\u0110\uff25" +
    "\u0128\uff25\u0133\uff25\u0135\uff25\u0137\uff25\u0138\uff25\u013f\uff25\001" +
    "\002\000\022\u010b\302\u0110\303\u0128\311\u0133\275\u0135\312" +
    "\u0137\306\u0138\307\u013f\301\001\002\000\012\345\uff1a\347" +
    "\uff1a\350\uff1a\375\uff1a\001\002\000\050\345\uff33\347\uff33" +
    "\350\uff33\375\uff33\u010b\uff33\u0110\uff33\u0118\uff33\u0128\uff33\u012a" +
    "\uff33\u0133\uff33\u0135\uff33\u0137\uff33\u0138\uff33\u013f\uff33\u0144\uff33" +
    "\u0166\uff33\u0167\uff33\u0168\uff33\u016c\uff33\001\002\000\050\345" +
    "\uff37\347\uff37\350\uff37\375\uff37\u010b\uff37\u0110\uff37\u0118\uff37" +
    "\u0128\uff37\u012a\uff37\u0133\uff37\u0135\uff37\u0137\uff37\u0138\uff37\u013f" +
    "\uff37\u0144\uff37\u0166\uff37\u0167\uff37\u0168\uff37\u016c\uff37\001\002" +
    "\000\052\344\u0145\345\uff30\347\uff30\350\uff30\375\uff30\u010b" +
    "\uff30\u0110\uff30\u0118\uff30\u0128\uff30\u012a\uff30\u0133\uff30\u0135\uff30" +
    "\u0137\uff30\u0138\uff30\u013f\uff30\u0144\uff30\u0166\uff30\u0167\uff30\u0168" +
    "\uff30\u016c\uff30\001\002\000\050\345\uff3b\347\uff3b\350\uff3b" +
    "\375\uff3b\u010b\uff3b\u0110\uff3b\u0118\uff3b\u0128\uff3b\u012a\uff3b\u0133" +
    "\uff3b\u0135\uff3b\u0137\uff3b\u0138\uff3b\u013f\uff3b\u0144\uff3b\u0166\uff3b" +
    "\u0167\uff3b\u0168\uff3b\u016c\uff3b\001\002\000\050\345\uff3f\347" +
    "\uff3f\350\uff3f\375\uff3f\u010b\uff3f\u0110\uff3f\u0118\uff3f\u0128\uff3f" +
    "\u012a\uff3f\u0133\uff3f\u0135\uff3f\u0137\uff3f\u0138\uff3f\u013f\uff3f\u0144" +
    "\uff3f\u0166\uff3f\u0167\uff3f\u0168\uff3f\u016c\uff3f\001\002\000\004" +
    "\344\u0140\001\002\000\004\344\u013d\001\002\000\050\345" +
    "\uff3c\347\uff3c\350\uff3c\375\uff3c\u010b\uff3c\u0110\uff3c\u0118\uff3c" +
    "\u0128\uff3c\u012a\uff3c\u0133\uff3c\u0135\uff3c\u0137\uff3c\u0138\uff3c\u013f" +
    "\uff3c\u0144\uff3c\u0166\uff3c\u0167\uff3c\u0168\uff3c\u016c\uff3c\001\002" +
    "\000\050\345\uff3a\347\uff3a\350\uff3a\375\uff3a\u010b\uff3a\u0110" +
    "\uff3a\u0118\uff3a\u0128\uff3a\u012a\uff3a\u0133\uff3a\u0135\uff3a\u0137\uff3a" +
    "\u0138\uff3a\u013f\uff3a\u0144\uff3a\u0166\uff3a\u0167\uff3a\u0168\uff3a\u016c" +
    "\uff3a\001\002\000\032\345\000\347\000\350\000\375\000" +
    "\u010b\302\u0110\303\u0128\311\u0133\275\u0135\312\u0137\306\u0138" +
    "\307\u013f\301\001\002\000\004\344\u0134\001\002\000\004" +
    "\344\u0131\001\002\000\052\344\u012e\345\uff3e\347\uff3e\350" +
    "\uff3e\375\uff3e\u010b\uff3e\u0110\uff3e\u0118\uff3e\u0128\uff3e\u012a\uff3e" +
    "\u0133\uff3e\u0135\uff3e\u0137\uff3e\u0138\uff3e\u013f\uff3e\u0144\uff3e\u0166" +
    "\uff3e\u0167\uff3e\u0168\uff3e\u016c\uff3e\001\002\000\050\345\uff31" +
    "\347\uff31\350\uff31\375\uff31\u010b\uff31\u0110\uff31\u0118\uff31\u0128" +
    "\uff31\u012a\uff31\u0133\uff31\u0135\uff31\u0137\uff31\u0138\uff31\u013f\uff31" +
    "\u0144\uff31\u0166\uff31\u0167\uff31\u0168\uff31\u016c\uff31\001\002\000" +
    "\050\345\uff38\347\uff38\350\uff38\375\uff38\u010b\uff38\u0110\uff38" +
    "\u0118\uff38\u0128\uff38\u012a\uff38\u0133\uff38\u0135\uff38\u0137\uff38\u0138" +
    "\uff38\u013f\uff38\u0144\uff38\u0166\uff38\u0167\uff38\u0168\uff38\u016c\uff38" +
    "\001\002\000\004\344\u0129\001\002\000\050\345\uff39\347" +
    "\uff39\350\uff39\375\uff39\u010b\uff39\u0110\uff39\u0118\uff39\u0128\uff39" +
    "\u012a\uff39\u0133\uff39\u0135\uff39\u0137\uff39\u0138\uff39\u013f\uff39\u0144" +
    "\uff39\u0166\uff39\u0167\uff39\u0168\uff39\u016c\uff39\001\002\000\004" +
    "\344\u0124\001\002\000\050\345\uff36\347\uff36\350\uff36\375" +
    "\uff36\u010b\uff36\u0110\uff36\u0118\uff36\u0128\uff36\u012a\uff36\u0133\uff36" +
    "\u0135\uff36\u0137\uff36\u0138\uff36\u013f\uff36\u0144\uff36\u0166\uff36\u0167" +
    "\uff36\u0168\uff36\u016c\uff36\001\002\000\050\345\uff40\347\uff40" +
    "\350\uff40\375\uff40\u010b\uff40\u0110\uff40\u0118\uff40\u0128\uff40\u012a" +
    "\uff40\u0133\uff40\u0135\uff40\u0137\uff40\u0138\uff40\u013f\uff40\u0144\uff40" +
    "\u0166\uff40\u0167\uff40\u0168\uff40\u016c\uff40\001\002\000\050\345" +
    "\uff32\347\uff32\350\uff32\375\uff32\u010b\uff32\u0110\uff32\u0118\uff32" +
    "\u0128\uff32\u012a\uff32\u0133\uff32\u0135\uff32\u0137\uff32\u0138\uff32\u013f" +
    "\uff32\u0144\uff32\u0166\uff32\u0167\uff32\u0168\uff32\u016c\uff32\001\002" +
    "\000\004\344\u0121\001\002\000\010\366\064\367\055\371" +
    "\061\001\002\000\004\345\u0123\001\002\000\050\345\uff41" +
    "\347\uff41\350\uff41\375\uff41\u010b\uff41\u0110\uff41\u0118\uff41\u0128" +
    "\uff41\u012a\uff41\u0133\uff41\u0135\uff41\u0137\uff41\u0138\uff41\u013f\uff41" +
    "\u0144\uff41\u0166\uff41\u0167\uff41\u0168\uff41\u016c\uff41\001\002\000" +
    "\010\366\064\367\055\371\061\001\002\000\004\375\u0126" +
    "\001\002\000\010\366\064\367\055\371\061\001\002\000" +
    "\004\345\u0128\001\002\000\050\345\uff2d\347\uff2d\350\uff2d" +
    "\375\uff2d\u010b\uff2d\u0110\uff2d\u0118\uff2d\u0128\uff2d\u012a\uff2d\u0133" +
    "\uff2d\u0135\uff2d\u0137\uff2d\u0138\uff2d\u013f\uff2d\u0144\uff2d\u0166\uff2d" +
    "\u0167\uff2d\u0168\uff2d\u016c\uff2d\001\002\000\010\366\064\367" +
    "\055\371\061\001\002\000\004\375\u012b\001\002\000\010" +
    "\366\064\367\055\371\061\001\002\000\004\345\u012d\001" +
    "\002\000\050\345\uff2e\347\uff2e\350\uff2e\375\uff2e\u010b\uff2e" +
    "\u0110\uff2e\u0118\uff2e\u0128\uff2e\u012a\uff2e\u0133\uff2e\u0135\uff2e\u0137" +
    "\uff2e\u0138\uff2e\u013f\uff2e\u0144\uff2e\u0166\uff2e\u0167\uff2e\u0168\uff2e" +
    "\u016c\uff2e\001\002\000\004\u0117\u012f\001\002\000\004\345" +
    "\u0130\001\002\000\050\345\uff3d\347\uff3d\350\uff3d\375\uff3d" +
    "\u010b\uff3d\u0110\uff3d\u0118\uff3d\u0128\uff3d\u012a\uff3d\u0133\uff3d\u0135" +
    "\uff3d\u0137\uff3d\u0138\uff3d\u013f\uff3d\u0144\uff3d\u0166\uff3d\u0167\uff3d" +
    "\u0168\uff3d\u016c\uff3d\001\002\000\010\366\064\367\055\371" +
    "\061\001\002\000\004\345\u0133\001\002\000\050\345\uff35" +
    "\347\uff35\350\uff35\375\uff35\u010b\uff35\u0110\uff35\u0118\uff35\u0128" +
    "\uff35\u012a\uff35\u0133\uff35\u0135\uff35\u0137\uff35\u0138\uff35\u013f\uff35" +
    "\u0144\uff35\u0166\uff35\u0167\uff35\u0168\uff35\u016c\uff35\001\002\000" +
    "\010\366\064\367\055\371\061\001\002\000\004\345\u0136" +
    "\001\002\000\050\345\uff42\347\uff42\350\uff42\375\uff42\u010b" +
    "\uff42\u0110\uff42\u0118\uff42\u0128\uff42\u012a\uff42\u0133\uff42\u0135\uff42" +
    "\u0137\uff42\u0138\uff42\u013f\uff42\u0144\uff42\u0166\uff42\u0167\uff42\u0168" +
    "\uff42\u016c\uff42\001\002\000\012\345\uff47\347\uff47\350\uff47" +
    "\375\uff47\001\002\000\032\345\000\347\000\350\000\375" +
    "\000\u010b\302\u0110\303\u0128\311\u0133\275\u0135\312\u0137\306" +
    "\u0138\307\u013f\301\001\002\000\012\345\uff2b\347\uff2b\350" +
    "\uff2b\375\uff2b\001\002\000\012\345\uff2c\347\uff2c\350\uff2c" +
    "\375\uff2c\001\002\000\012\345\uff1e\347\uff1e\350\uff1e\375" +
    "\uff1e\001\002\000\012\345\uff1d\347\uff1d\350\uff1d\375\uff1d" +
    "\001\002\000\010\366\064\367\055\371\061\001\002\000" +
    "\004\345\u013f\001\002\000\050\345\uff43\347\uff43\350\uff43" +
    "\375\uff43\u010b\uff43\u0110\uff43\u0118\uff43\u0128\uff43\u012a\uff43\u0133" +
    "\uff43\u0135\uff43\u0137\uff43\u0138\uff43\u013f\uff43\u0144\uff43\u0166\uff43" +
    "\u0167\uff43\u0168\uff43\u016c\uff43\001\002\000\010\366\064\367" +
    "\055\371\061\001\002\000\004\375\u0142\001\002\000\010" +
    "\366\064\367\055\371\061\001\002\000\004\345\u0144\001" +
    "\002\000\050\345\uff2f\347\uff2f\350\uff2f\375\uff2f\u010b\uff2f" +
    "\u0110\uff2f\u0118\uff2f\u0128\uff2f\u012a\uff2f\u0133\uff2f\u0135\uff2f\u0137" +
    "\uff2f\u0138\uff2f\u013f\uff2f\u0144\uff2f\u0166\uff2f\u0167\uff2f\u0168\uff2f" +
    "\u016c\uff2f\001\002\000\010\366\064\367\055\371\061\001" +
    "\002\000\004\345\u0147\001\002\000\050\345\uff34\347\uff34" +
    "\350\uff34\375\uff34\u010b\uff34\u0110\uff34\u0118\uff34\u0128\uff34\u012a" +
    "\uff34\u0133\uff34\u0135\uff34\u0137\uff34\u0138\uff34\u013f\uff34\u0144\uff34" +
    "\u0166\uff34\u0167\uff34\u0168\uff34\u016c\uff34\001\002\000\032\345" +
    "\uff23\347\uff23\350\uff23\375\uff23\u010b\uff23\u0110\uff23\u0128\uff23" +
    "\u0133\uff23\u0135\uff23\u0137\uff23\u0138\uff23\u013f\uff23\001\002\000" +
    "\026\372\100\u010b\302\u0110\303\u0128\311\u0133\275\u0135\312" +
    "\u0137\306\u0138\307\u0139\305\u013f\301\001\002\000\010\345" +
    "\uff48\347\uff48\350\uff48\001\002\000\010\345\uff44\347\uff44" +
    "\350\uff44\001\002\000\010\345\uff45\347\uff45\350\uff45\001" +
    "\002\000\006\366\064\367\055\001\002\000\004\375\u014f" +
    "\001\002\000\006\366\064\367\055\001\002\000\004\345" +
    "\u0151\001\002\000\032\345\uff2a\347\uff2a\350\uff2a\375\uff2a" +
    "\u010b\uff2a\u0110\uff2a\u0128\uff2a\u0133\uff2a\u0135\uff2a\u0137\uff2a\u0138" +
    "\uff2a\u013f\uff2a\001\002\000\004\372\100\001\002\000\004" +
    "\372\uffb2\001\002\000\004\372\uffb3\001\002\000\004\372" +
    "\100\001\002\000\004\344\u0157\001\002\000\006\345\000" +
    "\u0165\u015a\001\002\000\004\345\u0167\001\002\000\012\345" +
    "\uffb0\u0118\uffb0\u012a\uffb0\u0144\uffb0\001\002\000\004\372\u015c" +
    "\001\002\000\012\345\uffb1\u0118\uffb1\u012a\uffb1\u0144\uffb1\001" +
    "\002\000\054\340\u0120\370\u010d\u013d\u011a\u0145\u0111\u0146\u0115" +
    "\u0147\u011e\u0148\u010f\u0149\u0117\u014a\u0112\u014b\u010e\u014c\u0113\u014d" +
    "\u011b\u014e\u0119\u014f\u010c\u0150\u011d\u0151\u0116\u0152\u010b\u0153\u011f" +
    "\u0154\u0118\u0155\u0110\u0156\u011c\001\002\000\022\345\000\375" +
    "\000\u0118\000\u012a\000\u0144\000\u0166\u015e\u0167\u015f\u0168\u0162" +
    "\001\002\000\014\345\uffac\375\uffac\u0118\uffac\u012a\uffac\u0144" +
    "\uffac\001\002\000\014\345\uffab\375\uffab\u0118\uffab\u012a\uffab" +
    "\u0144\uffab\001\002\000\014\345\000\375\u0163\u0118\000\u012a" +
    "\000\u0144\000\001\002\000\014\345\uffa9\375\uffa9\u0118\uffa9" +
    "\u012a\uffa9\u0144\uffa9\001\002\000\014\345\uffaa\375\uffaa\u0118" +
    "\uffaa\u012a\uffaa\u0144\uffaa\001\002\000\004\u0165\u015a\001\002" +
    "\000\012\345\uffad\u0118\uffad\u012a\uffad\u0144\uffad\001\002\000" +
    "\012\345\uffaf\u0118\uffaf\u012a\uffaf\u0144\uffaf\001\002\000\012" +
    "\345\uffae\u0118\uffae\u012a\uffae\u0144\uffae\001\002\000\004\u0171" +
    "\u0168\001\002\000\060\340\u0120\370\u010d\u0104\u016a\u013d\u011a" +
    "\u0145\u0111\u0146\u0115\u0147\u011e\u0148\u010f\u0149\u0117\u014a\u0112\u014b" +
    "\u010e\u014c\u0113\u014d\u011b\u014e\u0119\u014f\u010c\u0150\u011d\u0151\u0116" +
    "\u0152\u010b\u0153\u011f\u0154\u0118\u0155\u0110\u0156\u011c\u0165\051\001" +
    "\002\000\010\u0118\uffcc\u012a\uffcc\u016c\uffcc\001\002\000\010" +
    "\u0118\uffca\u012a\uffca\u016c\uffca\001\002\000\004\u0104\u0192\001" +
    "\002\000\010\u0118\000\u012a\u016d\u016c\000\001\002\000\010" +
    "\u0169\u018d\u016a\u018f\u016b\u018c\001\002\000\006\u0118\u0171\u016c" +
    "\000\001\002\000\010\u0118\uffa7\u0144\uffa7\u016c\uffa7\001\002" +
    "\000\004\u016c\u0173\001\002\000\004\u016c\uffce\001\002\000" +
    "\004\u016c\uffcd\001\002\000\044\003\030\341\016\374\047" +
    "\u0102\015\u0103\010\u0105\041\u010d\037\u0111\025\u0126\040\u0132" +
    "\021\u0157\020\u016b\014\u016c\024\u016e\034\u016f\046\u0172\000" +
    "\u0178\036\001\002\000\004\u0172\uffc5\001\002\000\004\u0172" +
    "\u0177\001\002\000\044\003\030\341\016\374\047\u0102\015" +
    "\u0103\010\u0105\041\u010d\037\u0111\025\u0126\040\u0132\021\u0157" +
    "\020\u016b\014\u016c\024\u016e\034\u016f\046\u0172\uffc6\u0178\036" +
    "\001\002\000\022\344\u017a\355\063\366\064\367\055\371" +
    "\061\372\100\u010b\060\u0165\051\001\002\000\046\342\ufea3" +
    "\345\ufea3\347\ufea3\350\ufea3\352\ufea3\353\ufea3\354\ufea3\375" +
    "\ufea3\376\ufea3\377\ufea3\u0100\u0184\u0101\u0185\u0118\ufea3\u0120\ufea3" +
    "\u0122\ufea3\u0123\ufea3\u016d\ufea3\u017e\ufea3\001\002\000\046\342" +
    "\ufe9e\345\ufe9e\347\ufe9e\350\ufe9e\352\ufe9e\353\ufe9e\354\ufe9e" +
    "\375\ufe9e\376\ufe9e\377\ufe9e\u0100\ufe9e\u0101\ufe9e\u0118\ufe9e\u0120" +
    "\ufe9e\u0122\ufe9e\u0123\ufe9e\u016d\ufe9e\u017e\ufe9e\001\002\000\022" +
    "\344\u017a\355\063\366\064\367\055\371\061\372\100\u010b" +
    "\060\u0165\051\001\002\000\046\342\ufe9d\345\ufe9d\347\ufe9d" +
    "\350\ufe9d\352\ufe9d\353\ufe9d\354\ufe9d\375\ufe9d\376\ufe9d\377" +
    "\ufe9d\u0100\ufe9d\u0101\ufe9d\u0118\ufe9d\u0120\ufe9d\u0122\ufe9d\u0123\ufe9d" +
    "\u016d\ufe9d\u017e\ufe9d\001\002\000\046\342\ufea0\345\ufea0\347" +
    "\ufea0\350\ufea0\352\ufea0\353\ufea0\354\ufea0\375\ufea0\376\ufea0" +
    "\377\ufea0\u0100\ufea0\u0101\ufea0\u0118\ufea0\u0120\ufea0\u0122\ufea0\u0123" +
    "\ufea0\u016d\ufea0\u017e\ufea0\001\002\000\014\347\122\350\123" +
    "\376\u0180\377\u017e\u016d\000\001\002\000\022\344\u017a\355" +
    "\063\366\064\367\055\371\061\372\100\u010b\060\u0165\051" +
    "\001\002\000\004\u016d\u0188\001\002\000\022\344\u017a\355" +
    "\063\366\064\367\055\371\061\372\100\u010b\060\u0165\051" +
    "\001\002\000\004\u016d\uffc7\001\002\000\004\u016d\uffc8\001" +
    "\002\000\046\342\ufea5\345\ufea5\347\ufea5\350\ufea5\352\ufea5" +
    "\353\ufea5\354\ufea5\375\ufea5\376\ufea5\377\ufea5\u0100\u0184\u0101" +
    "\u0185\u0118\ufea5\u0120\ufea5\u0122\ufea5\u0123\ufea5\u016d\ufea5\u017e\ufea5" +
    "\001\002\000\022\344\u017a\355\063\366\064\367\055\371" +
    "\061\372\100\u010b\060\u0165\051\001\002\000\022\344\u017a" +
    "\355\063\366\064\367\055\371\061\372\100\u010b\060\u0165" +
    "\051\001\002\000\046\342\ufea1\345\ufea1\347\ufea1\350\ufea1" +
    "\352\ufea1\353\ufea1\354\ufea1\375\ufea1\376\ufea1\377\ufea1\u0100" +
    "\ufea1\u0101\ufea1\u0118\ufea1\u0120\ufea1\u0122\ufea1\u0123\ufea1\u016d\ufea1" +
    "\u017e\ufea1\001\002\000\046\342\ufea2\345\ufea2\347\ufea2\350" +
    "\ufea2\352\ufea2\353\ufea2\354\ufea2\375\ufea2\376\ufea2\377\ufea2" +
    "\u0100\ufea2\u0101\ufea2\u0118\ufea2\u0120\ufea2\u0122\ufea2\u0123\ufea2\u016d" +
    "\ufea2\u017e\ufea2\001\002\000\006\347\uffcf\350\uffcf\001\002" +
    "\000\046\342\ufea4\345\ufea4\347\ufea4\350\ufea4\352\ufea4\353" +
    "\ufea4\354\ufea4\375\ufea4\376\ufea4\377\ufea4\u0100\u0184\u0101\u0185" +
    "\u0118\ufea4\u0120\ufea4\u0122\ufea4\u0123\ufea4\u016d\ufea4\u017e\ufea4\001" +
    "\002\000\010\345\u018b\376\u0180\377\u017e\001\002\000\046" +
    "\342\ufe9f\345\ufe9f\347\ufe9f\350\ufe9f\352\ufe9f\353\ufe9f\354" +
    "\ufe9f\375\ufe9f\376\ufe9f\377\ufe9f\u0100\ufe9f\u0101\ufe9f\u0118\ufe9f" +
    "\u0120\ufe9f\u0122\ufe9f\u0123\ufe9f\u016d\ufe9f\u017e\ufe9f\001\002\000" +
    "\004\u0118\u0190\001\002\000\010\u0118\uffa6\u0144\uffa6\u016c\uffa6" +
    "\001\002\000\010\u0118\uffa8\u0144\uffa8\u016c\uffa8\001\002\000" +
    "\010\u0118\uffa5\u0144\uffa5\u016c\uffa5\001\002\000\004\372\u0191" +
    "\001\002\000\010\u0118\uffa4\u0144\uffa4\u016c\uffa4\001\002\000" +
    "\004\344\u0193\001\002\000\026\372\100\u010b\302\u0110\303" +
    "\u0128\311\u0133\275\u0135\312\u0137\306\u0138\307\u0139\305\u013f" +
    "\301\001\002\000\004\345\u0195\001\002\000\010\u0118\uffcb" +
    "\u012a\uffcb\u016c\uffcb\001\002\000\012\u0118\000\u012a\000\u0144" +
    "\000\u0165\u015a\001\002\000\010\u0118\000\u012a\u016d\u0144\000" +
    "\001\002\000\006\u0118\000\u0144\u0199\001\002\000\004\u013b" +
    "\u01a4\001\002\000\004\u0118\uffa2\001\002\000\004\u0118\u019c" +
    "\001\002\000\042\003\000\341\000\374\000\u0102\000\u0103" +
    "\000\u0105\000\u010d\000\u0111\000\u0126\000\u0132\000\u0157\000" +
    "\u016b\000\u016c\u019d\u016e\000\u016f\000\u0178\000\001\002\000" +
    "\042\003\uffa1\341\uffa1\374\uffa1\u0102\uffa1\u0103\uffa1\u0105\uffa1" +
    "\u010d\uffa1\u0111\uffa1\u0126\uffa1\u0132\uffa1\u0157\uffa1\u016b\uffa1\u016c" +
    "\uffa1\u016e\uffa1\u016f\uffa1\u0178\uffa1\001\002\000\042\003\030" +
    "\341\016\374\047\u0102\015\u0103\010\u0105\041\u010d\037\u0111" +
    "\025\u0126\040\u0132\021\u0157\020\u016b\014\u016c\024\u016e\034" +
    "\u016f\046\u0178\036\001\002\000\042\003\uffa0\341\uffa0\374" +
    "\uffa0\u0102\uffa0\u0103\uffa0\u0105\uffa0\u010d\uffa0\u0111\uffa0\u0126\uffa0" +
    "\u0132\uffa0\u0157\uffa0\u016b\uffa0\u016c\uffa0\u016e\uffa0\u016f\uffa0\u0178" +
    "\uffa0\001\002\000\050\003\030\341\016\347\000\350\000" +
    "\374\047\u0102\015\u0103\010\u0105\041\u010d\037\u0111\025\u0126" +
    "\040\u0132\021\u0157\020\u016b\014\u016c\024\u016d\u01a3\u016e\034" +
    "\u016f\046\u0178\036\001\002\000\006\347\uff9e\350\uff9e\001" +
    "\002\000\006\347\uffb6\350\uffb6\001\002\000\006\347\uff9f" +
    "\350\uff9f\001\002\000\004\u0118\uffa3\001\002\000\006\347" +
    "\uff71\350\uff71\001\002\000\010\347\uff4e\350\uff4e\u0144\u01a7" +
    "\001\002\000\004\u0143\u01a8\001\002\000\004\372\u01a9\001" +
    "\002\000\006\347\uff4d\350\uff4d\001\002\000\014\347\000" +
    "\350\000\u010a\u01ae\u0129\u01ad\u012a\u01af\001\002\000\006\347" +
    "\uff74\350\uff74\001\002\000\006\347\uff6f\350\uff6f\001\002" +
    "\000\004\372\u01d4\001\002\000\004\u0128\u01b1\001\002\000" +
    "\006\347\uff6c\350\uff6c\001\002\000\006\347\uff6b\350\uff6b" +
    "\001\002\000\004\344\u01b2\001\002\000\016\345\000\u012b" +
    "\u01b7\u012c\u01b6\u012d\u01b9\u012e\u01b3\u012f\u01b8\001\002\000\004" +
    "\373\u01d1\001\002\000\004\345\u01c9\001\002\000\004\345" +
    "\uff65\001\002\000\004\373\u01c6\001\002\000\004\373\u01c3" +
    "\001\002\000\004\373\u01c0\001\002\000\004\373\u01ba\001" +
    "\002\000\004\355\u01bb\001\002\000\006\345\000\375\u01bc" +
    "\001\002\000\016\345\000\u012b\u01b7\u012c\u01b6\u012d\u01b9\u012e" +
    "\u01b3\u012f\u01b8\001\002\000\004\345\uff68\001\002\000\004" +
    "\345\uff63\001\002\000\004\345\uff64\001\002\000\004\366" +
    "\u01c1\001\002\000\006\345\000\375\u01bc\001\002\000\004" +
    "\345\uff66\001\002\000\004\355\u01c4\001\002\000\006\345" +
    "\000\375\u01bc\001\002\000\004\345\uff6a\001\002\000\004" +
    "\355\u01c7\001\002\000\006\345\000\375\u01bc\001\002\000" +
    "\004\345\uff69\001\002\000\010\347\000\350\000\375\u01ca" +
    "\001\002\000\004\344\u01cd\001\002\000\006\347\uff6e\350" +
    "\uff6e\001\002\000\006\347\uff61\350\uff61\001\002\000\016" +
    "\345\000\u012b\u01b7\u012c\u01b6\u012d\u01b9\u012e\u01b3\u012f\u01b8\001" +
    "\002\000\004\345\u01cf\001\002\000\010\347\000\350\000" +
    "\375\u01ca\001\002\000\006\347\uff62\350\uff62\001\002\000" +
    "\004\355\u01d2\001\002\000\006\345\000\375\u01bc\001\002" +
    "\000\004\345\uff67\001\002\000\006\347\uff6d\350\uff6d\001" +
    "\002\000\004\372\100\001\002\000\004\372\ufed0\001\002" +
    "\000\004\372\ufed1\001\002\000\010\344\u01db\u010e\000\u0110" +
    "\000\001\002\000\006\u010e\u01e5\u0110\u01e4\001\002\000\006" +
    "\u010e\ufece\u0110\ufece\001\002\000\004\372\u01dc\001\002\000" +
    "\006\345\000\375\u01e0\001\002\000\004\345\u01de\001\002" +
    "\000\006\u010e\ufecf\u0110\ufecf\001\002\000\004\345\ufecd\001" +
    "\002\000\004\372\u01e2\001\002\000\004\345\ufecb\001\002" +
    "\000\006\345\000\375\u01e0\001\002\000\004\345\ufecc\001" +
    "\002\000\004\u010e\u01f4\001\002\000\004\344\u01e7\001\002" +
    "\000\006\347\ufed3\350\ufed3\001\002\000\016\355\063\366" +
    "\064\367\055\371\061\u010b\060\u0165\051\001\002\000\006" +
    "\345\000\375\u01ef\001\002\000\004\345\u01ea\001\002\000" +
    "\010\347\000\350\000\375\u01eb\001\002\000\004\344\u01e7" +
    "\001\002\000\006\347\ufeca\350\ufeca\001\002\000\006\347" +
    "\ufec5\350\ufec5\001\002\000\006\347\ufec6\350\ufec6\001\002" +
    "\000\016\355\063\366\064\367\055\371\061\u010b\060\u0165" +
    "\051\001\002\000\004\345\ufec9\001\002\000\004\345\ufec7" +
    "\001\002\000\006\345\000\375\u01ef\001\002\000\004\345" +
    "\ufec8\001\002\000\006\347\ufed2\350\ufed2\001\002\000\012" +
    "\347\000\350\000\372\100\u0165\051\001\002\000\006\347" +
    "\122\350\123\001\002\000\010\347\uffdc\350\uffdc\u012a\uffdc" +
    "\001\002\000\010\347\uffdb\350\uffdb\u012a\uffdb\001\002\000" +
    "\010\347\uffdd\350\uffdd\u012a\uffdd\001\002\000\060\002\uffd0" +
    "\003\uffd0\341\uffd0\347\uffd0\350\uffd0\374\uffd0\u0102\uffd0\u0103" +
    "\uffd0\u0105\uffd0\u010d\uffd0\u0111\uffd0\u0126\uffd0\u0132\uffd0\u0157\uffd0" +
    "\u016b\uffd0\u016c\uffd0\u016d\uffd0\u016e\uffd0\u016f\uffd0\u0172\uffd0\u0176" +
    "\uffd0\u0177\uffd0\u0178\uffd0\001\002\000\010\347\000\350\000" +
    "\u012a\u01fd\001\002\000\006\347\122\350\123\001\002\000" +
    "\004\u0175\u01ff\001\002\000\006\347\uffd9\350\uffd9\001\002" +
    "\000\010\347\000\350\000\355\u0200\001\002\000\006\347" +
    "\uffd8\350\uffd8\001\002\000\006\347\uffda\350\uffda\001\002" +
    "\000\006\347\uffd7\350\uffd7\001\002\000\042\003\030\341" +
    "\016\374\047\u0102\015\u0103\010\u0105\041\u010d\037\u0111\025" +
    "\u0126\040\u0132\021\u0157\020\u016b\014\u016c\024\u016e\034\u016f" +
    "\046\u0178\036\001\002\000\046\003\030\341\016\374\047" +
    "\u0102\015\u0103\010\u0105\041\u010d\037\u0111\025\u0126\040\u0132" +
    "\021\u0157\020\u016b\014\u016c\024\u016e\034\u016f\046\u0176\u0206" +
    "\u0177\u0207\u0178\036\001\002\000\060\002\uffe0\003\uffe0\341" +
    "\uffe0\347\uffe0\350\uffe0\374\uffe0\u0102\uffe0\u0103\uffe0\u0105\uffe0" +
    "\u010d\uffe0\u0111\uffe0\u0126\uffe0\u0132\uffe0\u0157\uffe0\u016b\uffe0\u016c" +
    "\uffe0\u016d\uffe0\u016e\uffe0\u016f\uffe0\u0172\uffe0\u0176\uffe0\u0177\uffe0" +
    "\u0178\uffe0\001\002\000\012\347\122\350\123\u0173\u0210\u0174" +
    "\u020f\001\002\000\012\347\122\350\123\u0173\u0209\u0174\u0208" +
    "\001\002\000\012\347\000\350\000\372\100\u0165\051\001" +
    "\002\000\012\347\000\350\000\372\100\u0165\051\001\002" +
    "\000\060\002\uffd3\003\uffd3\341\uffd3\347\uffd3\350\uffd3\374" +
    "\uffd3\u0102\uffd3\u0103\uffd3\u0105\uffd3\u010d\uffd3\u0111\uffd3\u0126\uffd3" +
    "\u0132\uffd3\u0157\uffd3\u016b\uffd3\u016c\uffd3\u016d\uffd3\u016e\uffd3\u016f" +
    "\uffd3\u0172\uffd3\u0176\uffd3\u0177\uffd3\u0178\uffd3\001\002\000\006" +
    "\347\122\350\123\001\002\000\060\002\uffd2\003\uffd2\341" +
    "\uffd2\347\uffd2\350\uffd2\374\uffd2\u0102\uffd2\u0103\uffd2\u0105\uffd2" +
    "\u010d\uffd2\u0111\uffd2\u0126\uffd2\u0132\uffd2\u0157\uffd2\u016b\uffd2\u016c" +
    "\uffd2\u016d\uffd2\u016e\uffd2\u016f\uffd2\u0172\uffd2\u0176\uffd2\u0177\uffd2" +
    "\u0178\uffd2\001\002\000\006\347\122\350\123\001\002\000" +
    "\060\002\uffd1\003\uffd1\341\uffd1\347\uffd1\350\uffd1\374\uffd1" +
    "\u0102\uffd1\u0103\uffd1\u0105\uffd1\u010d\uffd1\u0111\uffd1\u0126\uffd1\u0132" +
    "\uffd1\u0157\uffd1\u016b\uffd1\u016c\uffd1\u016d\uffd1\u016e\uffd1\u016f\uffd1" +
    "\u0172\uffd1\u0176\uffd1\u0177\uffd1\u0178\uffd1\001\002\000\012\347" +
    "\000\350\000\372\100\u0165\051\001\002\000\012\347\000" +
    "\350\000\372\100\u0165\051\001\002\000\060\002\uffd6\003" +
    "\uffd6\341\uffd6\347\uffd6\350\uffd6\374\uffd6\u0102\uffd6\u0103\uffd6" +
    "\u0105\uffd6\u010d\uffd6\u0111\uffd6\u0126\uffd6\u0132\uffd6\u0157\uffd6\u016b" +
    "\uffd6\u016c\uffd6\u016d\uffd6\u016e\uffd6\u016f\uffd6\u0172\uffd6\u0176\uffd6" +
    "\u0177\uffd6\u0178\uffd6\001\002\000\006\347\122\350\123\001" +
    "\002\000\060\002\uffd5\003\uffd5\341\uffd5\347\uffd5\350\uffd5" +
    "\374\uffd5\u0102\uffd5\u0103\uffd5\u0105\uffd5\u010d\uffd5\u0111\uffd5\u0126" +
    "\uffd5\u0132\uffd5\u0157\uffd5\u016b\uffd5\u016c\uffd5\u016d\uffd5\u016e\uffd5" +
    "\u016f\uffd5\u0172\uffd5\u0176\uffd5\u0177\uffd5\u0178\uffd5\001\002\000" +
    "\006\347\122\350\123\001\002\000\060\002\uffd4\003\uffd4" +
    "\341\uffd4\347\uffd4\350\uffd4\374\uffd4\u0102\uffd4\u0103\uffd4\u0105" +
    "\uffd4\u010d\uffd4\u0111\uffd4\u0126\uffd4\u0132\uffd4\u0157\uffd4\u016b\uffd4" +
    "\u016c\uffd4\u016d\uffd4\u016e\uffd4\u016f\uffd4\u0172\uffd4\u0176\uffd4\u0177" +
    "\uffd4\u0178\uffd4\001\002\000\010\u0179\000\u017a\u0221\u017b\u0222" +
    "\001\002\000\054\340\u0120\370\u010d\u013d\u011a\u0145\u0111\u0146" +
    "\u0115\u0147\u011e\u0148\u010f\u0149\u0117\u014a\u0112\u014b\u010e\u014c\u0113" +
    "\u014d\u011b\u014e\u0119\u014f\u010c\u0150\u011d\u0151\u0116\u0152\u010b\u0153" +
    "\u011f\u0154\u0118\u0155\u0110\u0156\u011c\001\002\000\010\347\000" +
    "\350\000\375\u0219\001\002\000\004\u0165\051\001\002\000" +
    "\006\347\uffb9\350\uffb9\001\002\000\006\347\uffb7\350\uffb7" +
    "\001\002\000\054\340\u0120\370\u010d\u013d\u011a\u0145\u0111\u0146" +
    "\u0115\u0147\u011e\u0148\u010f\u0149\u0117\u014a\u0112\u014b\u010e\u014c\u0113" +
    "\u014d\u011b\u014e\u0119\u014f\u010c\u0150\u011d\u0151\u0116\u0152\u010b\u0153" +
    "\u011f\u0154\u0118\u0155\u0110\u0156\u011c\001\002\000\010\347\000" +
    "\350\000\375\u0219\001\002\000\006\347\uffb8\350\uffb8\001" +
    "\002\000\004\u0179\u0223\001\002\000\004\u0179\uffe5\001\002" +
    "\000\004\u0179\uffe7\001\002\000\004\u0179\uffe6\001\002\000" +
    "\004\u0144\u0224\001\002\000\004\u0111\025\001\002\000\010" +
    "\347\000\350\000\u017e\u0228\001\002\000\006\347\uffea\350" +
    "\uffea\001\002\000\006\347\uffe8\350\uffe8\001\002\000\004" +
    "\372\100\001\002\000\004\u017c\u022a\001\002\000\004\u017d" +
    "\u022b\001\002\000\004\342\u022c\001\002\000\004\372\100" +
    "\001\002\000\010\347\uffe4\350\uffe4\u010f\u022f\001\002\000" +
    "\006\347\uffe9\350\uffe9\001\002\000\004\u0165\051\001\002" +
    "\000\010\347\000\350\000\375\u0231\001\002\000\004\u0165" +
    "\051\001\002\000\006\347\uffe1\350\uffe1\001\002\000\006" +
    "\347\uffe3\350\uffe3\001\002\000\010\347\000\350\000\375" +
    "\u0231\001\002\000\006\347\uffe2\350\uffe2\001\002\000\060" +
    "\002\ufffb\003\ufffb\341\ufffb\347\ufffb\350\ufffb\374\ufffb\u0102" +
    "\ufffb\u0103\ufffb\u0105\ufffb\u010d\ufffb\u0111\ufffb\u0126\ufffb\u0132\ufffb" +
    "\u0157\ufffb\u016b\ufffb\u016c\ufffb\u016d\ufffb\u016e\ufffb\u016f\ufffb\u0172" +
    "\ufffb\u0176\ufffb\u0177\ufffb\u0178\ufffb\001\002\000\060\002\ufff4" +
    "\003\ufff4\341\ufff4\347\ufff4\350\ufff4\374\ufff4\u0102\ufff4\u0103" +
    "\ufff4\u0105\ufff4\u010d\ufff4\u0111\ufff4\u0126\ufff4\u0132\ufff4\u0157\ufff4" +
    "\u016b\ufff4\u016c\ufff4\u016d\ufff4\u016e\ufff4\u016f\ufff4\u0172\ufff4\u0176" +
    "\ufff4\u0177\ufff4\u0178\ufff4\001\002\000\060\002\ufff1\003\ufff1" +
    "\341\ufff1\347\ufff1\350\ufff1\374\ufff1\u0102\ufff1\u0103\ufff1\u0105" +
    "\ufff1\u010d\ufff1\u0111\ufff1\u0126\ufff1\u0132\ufff1\u0157\ufff1\u016b\ufff1" +
    "\u016c\ufff1\u016d\ufff1\u016e\ufff1\u016f\ufff1\u0172\ufff1\u0176\ufff1\u0177" +
    "\ufff1\u0178\ufff1\001\002\000\060\002\ufff3\003\ufff3\341\ufff3" +
    "\347\ufff3\350\ufff3\374\ufff3\u0102\ufff3\u0103\ufff3\u0105\ufff3\u010d" +
    "\ufff3\u0111\ufff3\u0126\ufff3\u0132\ufff3\u0157\ufff3\u016b\ufff3\u016c\ufff3" +
    "\u016d\ufff3\u016e\ufff3\u016f\ufff3\u0172\ufff3\u0176\ufff3\u0177\ufff3\u0178" +
    "\ufff3\001\002\000\060\002\ufff9\003\ufff9\341\ufff9\347\ufff9" +
    "\350\ufff9\374\ufff9\u0102\ufff9\u0103\ufff9\u0105\ufff9\u010d\ufff9\u0111" +
    "\ufff9\u0126\ufff9\u0132\ufff9\u0157\ufff9\u016b\ufff9\u016c\ufff9\u016d\ufff9" +
    "\u016e\ufff9\u016f\ufff9\u0172\ufff9\u0176\ufff9\u0177\ufff9\u0178\ufff9\001" +
    "\002\000\034\344\uff16\355\uff16\366\uff16\367\uff16\371\uff16" +
    "\372\uff16\u010b\uff16\u0113\uff16\u0114\uff16\u0115\uff16\u0116\uff16\u0117" +
    "\uff16\u0165\uff16\001\002\000\004\342\uff18\001\002\000\034" +
    "\344\u017a\355\063\366\064\367\055\371\061\372\100\u010b" +
    "\060\u0113\u025e\u0114\u025d\u0115\u0260\u0116\u0264\u0117\u0261\u0165\051" +
    "\001\002\000\034\344\uff15\355\uff15\366\uff15\367\uff15\371" +
    "\uff15\372\uff15\u010b\uff15\u0113\uff15\u0114\uff15\u0115\uff15\u0116\uff15" +
    "\u0117\uff15\u0165\uff15\001\002\000\010\344\u02ad\366\064\367" +
    "\055\001\002\000\004\342\u0242\001\002\000\034\344\uff13" +
    "\355\uff13\366\uff13\367\uff13\371\uff13\372\uff13\u010b\uff13\u0113" +
    "\uff13\u0114\uff13\u0115\uff13\u0116\uff13\u0117\uff13\u0165\uff13\001\002" +
    "\000\004\372\100\001\002\000\040\347\000\350\000\352" +
    "\000\372\u029b\375\000\u0118\u029a\u011a\000\u011b\000\u011c\000" +
    "\u011d\000\u011e\000\u0120\000\u0122\000\u0123\000\u017e\000\001" +
    "\002\000\032\347\000\350\000\352\000\u011a\000\u011b\u0245" +
    "\u011c\u0246\u011d\u0247\u011e\u024a\u0120\000\u0122\000\u0123\000\u017e" +
    "\000\001\002\000\004\u011a\ufeea\001\002\000\006\u011a\000" +
    "\u011f\u0296\001\002\000\006\u011a\000\u011f\u0296\001\002\000" +
    "\004\u011a\u0298\001\002\000\022\347\ufeeb\350\ufeeb\352\ufeeb" +
    "\u011a\ufee6\u0120\ufeeb\u0122\ufeeb\u0123\ufeeb\u017e\ufeeb\001\002\000" +
    "\006\u011a\000\u011f\u0296\001\002\000\020\347\000\350\000" +
    "\352\u024d\u0120\000\u0122\000\u0123\000\u017e\000\001\002\000" +
    "\016\347\000\350\000\u0120\u0254\u0122\000\u0123\000\u017e\000" +
    "\001\002\000\004\372\100\001\002\000\020\347\ufe8d\350" +
    "\ufe8d\352\ufe8d\u0120\ufe8d\u0122\ufe8d\u0123\ufe8d\u017e\ufe8d\001\002" +
    "\000\024\356\363\357\366\360\364\361\372\362\371\364" +
    "\373\365\367\373\370\u013c\374\001\002\000\022\344\u017a" +
    "\355\063\366\064\367\055\371\061\372\100\u010b\060\u0165" +
    "\051\001\002\000\030\347\000\350\000\352\000\353\u0102" +
    "\354\u0105\376\u0180\377\u017e\u0120\000\u0122\000\u0123\000\u017e" +
    "\000\001\002\000\020\347\ufe8e\350\ufe8e\352\ufe8e\u0120\ufe8e" +
    "\u0122\ufe8e\u0123\ufe8e\u017e\ufe8e\001\002\000\014\347\ufee2\350" +
    "\ufee2\u0122\ufee2\u0123\ufee2\u017e\ufee2\001\002\000\004\u0121\u0292" +
    "\001\002\000\014\347\000\350\000\u0122\u0256\u0123\000\u017e" +
    "\000\001\002\000\016\372\100\u0113\u025e\u0114\u025d\u0115\u0260" +
    "\u0116\u0264\u0117\u0261\001\002\000\012\347\ufee0\350\ufee0\u0123" +
    "\ufee0\u017e\ufee0\001\002\000\012\347\000\350\000\u0123\u0259" +
    "\u017e\000\001\002\000\004\u0121\u025c\001\002\000\010\347" +
    "\uff19\350\uff19\u017e\uff19\001\002\000\010\347\ufed9\350\ufed9" +
    "\u017e\ufed9\001\002\000\016\372\100\u0113\u025e\u0114\u025d\u0115" +
    "\u0260\u0116\u0264\u0117\u0261\001\002\000\004\344\u0283\001\002" +
    "\000\004\344\u0280\001\002\000\044\342\uff05\347\uff05\350" +
    "\uff05\356\uff05\357\uff05\360\uff05\361\uff05\362\uff05\364\uff05" +
    "\365\uff05\373\uff05\375\uff05\u0118\uff05\u0124\uff05\u0125\uff05\u013c" +
    "\uff05\u017e\uff05\001\002\000\004\344\u027d\001\002\000\004" +
    "\344\u027a\001\002\000\020\344\u0276\347\000\350\000\375" +
    "\000\u0124\335\u0125\336\u017e\000\001\002\000\016\347\000" +
    "\350\000\375\000\u0124\335\u0125\336\u017e\000\001\002\000" +
    "\004\344\u0265\001\002\000\012\367\u0268\372\000\u0100\u0267" +
    "\u0112\u0266\001\002\000\004\372\uff01\001\002\000\004\345" +
    "\uff03\001\002\000\004\345\uff04\001\002\000\004\345\u026d" +
    "\001\002\000\004\372\100\001\002\000\004\372\uff00\001" +
    "\002\000\004\345\uff02\001\002\000\044\342\uff07\347\uff07" +
    "\350\uff07\356\uff07\357\uff07\360\uff07\361\uff07\362\uff07\364" +
    "\uff07\365\uff07\373\uff07\375\uff07\u0118\uff07\u0124\uff07\u0125\uff07" +
    "\u013c\uff07\u017e\uff07\001\002\000\012\347\000\350\000\375" +
    "\u026f\u017e\000\001\002\000\004\372\100\001\002\000\010" +
    "\347\ufed4\350\ufed4\u017e\ufed4\001\002\000\010\347\ufeda\350" +
    "\ufeda\u017e\ufeda\001\002\000\016\347\000\350\000\u0123\000" +
    "\u0124\335\u0125\336\u017e\000\001\002\000\012\347\000\350" +
    "\000\u0123\u0259\u017e\000\001\002\000\010\347\ufed5\350\ufed5" +
    "\u017e\ufed5\001\002\000\012\347\000\350\000\375\u026f\u017e" +
    "\000\001\002\000\020\345\000\355\063\366\064\367\055" +
    "\371\061\u010b\060\u0165\051\001\002\000\004\345\u0278\001" +
    "\002\000\044\342\uffc9\347\uffc9\350\uffc9\356\uffc9\357\uffc9" +
    "\360\uffc9\361\uffc9\362\uffc9\364\uffc9\365\uffc9\373\uffc9\375" +
    "\uffc9\u0118\uffc9\u0124\uffc9\u0125\uffc9\u013c\uffc9\u017e\uffc9\001\002" +
    "\000\010\347\ufedb\350\ufedb\u017e\ufedb\001\002\000\012\367" +
    "\u0268\372\000\u0100\u0267\u0112\u0266\001\002\000\004\345\u027c" +
    "\001\002\000\044\342\uff06\347\uff06\350\uff06\356\uff06\357" +
    "\uff06\360\uff06\361\uff06\362\uff06\364\uff06\365\uff06\373\uff06" +
    "\375\uff06\u0118\uff06\u0124\uff06\u0125\uff06\u013c\uff06\u017e\uff06\001" +
    "\002\000\012\367\u0268\372\000\u0100\u0267\u0112\u0266\001\002" +
    "\000\004\345\u027f\001\002\000\044\342\uff08\347\uff08\350" +
    "\uff08\356\uff08\357\uff08\360\uff08\361\uff08\362\uff08\364\uff08" +
    "\365\uff08\373\uff08\375\uff08\u0118\uff08\u0124\uff08\u0125\uff08\u013c" +
    "\uff08\u017e\uff08\001\002\000\012\367\u0268\372\000\u0100\u0267" +
    "\u0112\u0266\001\002\000\004\345\u0282\001\002\000\044\342" +
    "\uff0a\347\uff0a\350\uff0a\356\uff0a\357\uff0a\360\uff0a\361\uff0a" +
    "\362\uff0a\364\uff0a\365\uff0a\373\uff0a\375\uff0a\u0118\uff0a\u0124" +
    "\uff0a\u0125\uff0a\u013c\uff0a\u017e\uff0a\001\002\000\012\367\u0268" +
    "\372\000\u0100\u0267\u0112\u0266\001\002\000\004\345\u0285\001" +
    "\002\000\044\342\uff09\347\uff09\350\uff09\356\uff09\357\uff09" +
    "\360\uff09\361\uff09\362\uff09\364\uff09\365\uff09\373\uff09\375" +
    "\uff09\u0118\uff09\u0124\uff09\u0125\uff09\u013c\uff09\u017e\uff09\001\002" +
    "\000\026\344\u0276\356\363\357\366\360\364\361\372\362" +
    "\371\364\373\365\367\373\370\u013c\374\001\002\000\012" +
    "\347\ufee1\350\ufee1\u0123\ufee1\u017e\ufee1\001\002\000\024\356" +
    "\363\357\366\360\364\361\372\362\371\364\373\365\367" +
    "\373\370\u013c\374\001\002\000\016\355\063\366\064\367" +
    "\055\371\061\u010b\060\u0165\051\001\002\000\016\347\000" +
    "\350\000\353\u0102\354\u0105\u0123\000\u017e\000\001\002\000" +
    "\016\372\100\u0113\u025e\u0114\u025d\u0115\u0260\u0116\u0264\u0117\u0261" +
    "\001\002\000\012\347\ufedf\350\ufedf\u0123\ufedf\u017e\ufedf\001" +
    "\002\000\012\347\ufedc\350\ufedc\u0123\ufedc\u017e\ufedc\001\002" +
    "\000\012\347\ufedd\350\ufedd\u0123\ufedd\u017e\ufedd\001\002\000" +
    "\016\355\063\366\064\367\055\371\061\u010b\060\u0165\051" +
    "\001\002\000\016\347\000\350\000\353\u0102\354\u0105\u0123" +
    "\000\u017e\000\001\002\000\012\347\ufede\350\ufede\u0123\ufede" +
    "\u017e\ufede\001\002\000\004\372\100\001\002\000\016\347" +
    "\000\350\000\375\157\u0122\000\u0123\000\u017e\000\001\002" +
    "\000\014\347\ufee3\350\ufee3\u0122\ufee3\u0123\ufee3\u017e\ufee3\001" +
    "\002\000\004\u011a\ufee7\001\002\000\004\u011a\ufee5\001\002" +
    "\000\004\u011a\ufee4\001\002\000\004\372\100\001\002\000" +
    "\010\372\u029b\u010a\000\u0118\u029a\001\002\000\006\355\u02a3" +
    "\372\u02a4\001\002\000\036\347\ufeee\350\ufeee\352\ufeee\375" +
    "\ufeee\u010a\ufeee\u011a\ufeee\u011b\ufeee\u011c\ufeee\u011d\ufeee\u011e\ufeee" +
    "\u0120\ufeee\u0122\ufeee\u0123\ufeee\u017e\ufeee\001\002\000\004\u010a" +
    "\u029e\001\002\000\036\347\ufeed\350\ufeed\352\ufeed\375\ufeed" +
    "\u010a\ufeed\u011a\ufeed\u011b\ufeed\u011c\ufeed\u011d\ufeed\u011e\ufeed\u0120" +
    "\ufeed\u0122\ufeed\u0123\ufeed\u017e\ufeed\001\002\000\004\372\100" +
    "\001\002\000\004\373\u02a0\001\002\000\004\372\100\001" +
    "\002\000\032\347\000\350\000\352\000\u011a\000\u011b\u0245" +
    "\u011c\u0246\u011d\u0247\u011e\u024a\u0120\000\u0122\000\u0123\000\u017e" +
    "\000\001\002\000\020\347\ufeec\350\ufeec\352\ufeec\u0120\ufeec" +
    "\u0122\ufeec\u0123\ufeec\u017e\ufeec\001\002\000\036\347\ufef0\350" +
    "\ufef0\352\ufef0\375\ufef0\u010a\ufef0\u011a\ufef0\u011b\ufef0\u011c\ufef0" +
    "\u011d\ufef0\u011e\ufef0\u0120\ufef0\u0122\ufef0\u0123\ufef0\u017e\ufef0\001" +
    "\002\000\036\347\ufeef\350\ufeef\352\ufeef\375\ufeef\u010a\ufeef" +
    "\u011a\ufeef\u011b\ufeef\u011c\ufeef\u011d\ufeef\u011e\ufeef\u0120\ufeef\u0122" +
    "\ufeef\u0123\ufeef\u017e\ufeef\001\002\000\004\u011a\ufee8\001\002" +
    "\000\004\u011a\ufee9\001\002\000\034\347\000\350\000\352" +
    "\000\375\u02a8\u011a\000\u011b\000\u011c\000\u011d\000\u011e\000" +
    "\u0120\000\u0122\000\u0123\000\u017e\000\001\002\000\004\372" +
    "\100\001\002\000\032\347\ufef3\350\ufef3\352\ufef3\u011a\ufef3" +
    "\u011b\ufef3\u011c\ufef3\u011d\ufef3\u011e\ufef3\u0120\ufef3\u0122\ufef3\u0123" +
    "\ufef3\u017e\ufef3\001\002\000\032\347\ufef1\350\ufef1\352\ufef1" +
    "\u011a\ufef1\u011b\ufef1\u011c\ufef1\u011d\ufef1\u011e\ufef1\u0120\ufef1\u0122" +
    "\ufef1\u0123\ufef1\u017e\ufef1\001\002\000\032\347\ufef2\350\ufef2" +
    "\352\ufef2\u011a\ufef2\u011b\ufef2\u011c\ufef2\u011d\ufef2\u011e\ufef2\u0120" +
    "\ufef2\u0122\ufef2\u0123\ufef2\u017e\ufef2\001\002\000\040\342\ufe91" +
    "\344\ufe91\351\ufe91\355\ufe91\366\ufe91\367\ufe91\371\ufe91\372" +
    "\ufe91\u010b\ufe91\u0113\ufe91\u0114\ufe91\u0115\ufe91\u0116\ufe91\u0117\ufe91" +
    "\u0165\ufe91\001\002\000\006\366\064\367\055\001\002\000" +
    "\034\344\uff14\355\uff14\366\uff14\367\uff14\371\uff14\372\uff14" +
    "\u010b\uff14\u0113\uff14\u0114\uff14\u0115\uff14\u0116\uff14\u0117\uff14\u0165" +
    "\uff14\001\002\000\004\345\u02b0\001\002\000\040\342\ufe92" +
    "\344\ufe92\351\ufe92\355\ufe92\366\ufe92\367\ufe92\371\ufe92\372" +
    "\ufe92\u010b\ufe92\u0113\ufe92\u0114\ufe92\u0115\ufe92\u0116\ufe92\u0117\ufe92" +
    "\u0165\ufe92\001\002\000\010\342\uff11\375\uff11\u0118\uff11\001" +
    "\002\000\010\342\000\375\000\u0118\u02b8\001\002\000\004" +
    "\342\uff17\001\002\000\014\342\uff10\375\uff10\376\u0180\377" +
    "\u017e\u0118\uff10\001\002\000\024\342\ufe9e\344\u0276\373\u02b6" +
    "\375\ufe9e\376\ufe9e\377\ufe9e\u0100\ufe9e\u0101\ufe9e\u0118\ufe9e\001" +
    "\002\000\022\344\u017a\355\063\366\064\367\055\371\061" +
    "\372\100\u010b\060\u0165\051\001\002\000\014\342\uff0f\375" +
    "\uff0f\376\u0180\377\u017e\u0118\uff0f\001\002\000\006\355\u02bf" +
    "\372\u02c0\001\002\000\006\342\000\375\u02bb\001\002\000" +
    "\006\342\ufefd\375\ufefd\001\002\000\044\343\u023f\344\000" +
    "\355\000\366\000\367\000\371\000\372\000\u0100\u023c\u010b" +
    "\000\u0112\u023b\u0113\000\u0114\000\u0115\000\u0116\000\u0117\000" +
    "\u0119\u023e\u0165\000\001\002\000\004\342\uff12\001\002\000" +
    "\004\342\uff0d\001\002\000\004\342\uff0e\001\002\000\006" +
    "\342\ufeff\375\ufeff\001\002\000\006\342\ufefe\375\ufefe\001" +
    "\002\000\014\347\uffde\350\uffde\372\uffde\u012a\uffde\u0165\uffde" +
    "\001\002\000\014\347\uffdf\350\uffdf\372\uffdf\u012a\uffdf\u0165" +
    "\uffdf\001\002\000\060\002\ufff0\003\ufff0\341\ufff0\347\ufff0" +
    "\350\ufff0\374\ufff0\u0102\ufff0\u0103\ufff0\u0105\ufff0\u010d\ufff0\u0111" +
    "\ufff0\u0126\ufff0\u0132\ufff0\u0157\ufff0\u016b\ufff0\u016c\ufff0\u016d\ufff0" +
    "\u016e\ufff0\u016f\ufff0\u0172\ufff0\u0176\ufff0\u0177\ufff0\u0178\ufff0\001" +
    "\002\000\006\347\122\350\123\001\002\000\060\002\uffec" +
    "\003\uffec\341\uffec\347\uffec\350\uffec\374\uffec\u0102\uffec\u0103" +
    "\uffec\u0105\uffec\u010d\uffec\u0111\uffec\u0126\uffec\u0132\uffec\u0157\uffec" +
    "\u016b\uffec\u016c\uffec\u016d\uffec\u016e\uffec\u016f\uffec\u0172\uffec\u0176" +
    "\uffec\u0177\uffec\u0178\uffec\001\002\000\006\372\u0307\u0119\u0306" +
    "\001\002\000\006\372\u02fc\u0158\u02fb\001\002\000\004\372" +
    "\100\001\002\000\004\372\100\001\002\000\004\372\u02cd" +
    "\001\002\000\006\347\uff9d\350\uff9d\001\002\000\006\347" +
    "\uff99\350\uff99\001\002\000\004\u012a\u02ce\001\002\000\012" +
    "\u010b\u02d1\u012b\u02d2\u0143\u02d0\u0160\u02d4\001\002\000\006\347" +
    "\uff7d\350\uff7d\001\002\000\004\373\u02dd\001\002\000\010" +
    "\347\uff7a\350\uff7a\375\uff7a\001\002\000\004\373\u02db\001" +
    "\002\000\010\347\000\350\000\375\u02d7\001\002\000\004" +
    "\373\u02d5\001\002\000\004\355\u02d6\001\002\000\010\347" +
    "\uff78\350\uff78\375\uff78\001\002\000\012\u010b\u02d1\u012b\u02d2" +
    "\u0143\u02d0\u0160\u02d4\001\002\000\006\347\uff76\350\uff76\001" +
    "\002\000\006\347\uff7c\350\uff7c\001\002\000\006\347\uff77" +
    "\350\uff77\001\002\000\004\372\u02dc\001\002\000\010\347" +
    "\uff7b\350\uff7b\375\uff7b\001\002\000\004\372\u02de\001\002" +
    "\000\010\347\uff79\350\uff79\375\uff79\001\002\000\006\347" +
    "\uff9a\350\uff9a\001\002\000\010\u0105\u02e4\u0157\u02e1\u0162\u02e3" +
    "\001\002\000\004\u0161\u02f8\001\002\000\006\347\uff88\350" +
    "\uff88\001\002\000\026\372\100\u010b\302\u0110\303\u0128\311" +
    "\u0133\275\u0135\312\u0137\306\u0138\307\u0139\305\u013f\301\001" +
    "\002\000\012\372\100\u0106\u02e7\u0139\u02e6\u0161\u02e5\001\002" +
    "\000\004\372\100\001\002\000\006\372\000\u0108\142\001" +
    "\002\000\006\372\000\u0108\142\001\002\000\010\347\000" +
    "\350\000\375\u02eb\001\002\000\006\347\uff85\350\uff85\001" +
    "\002\000\006\347\uff80\350\uff80\001\002\000\012\372\100" +
    "\u0106\u02e7\u0139\u02e6\u0161\u02e5\001\002\000\006\347\uff7e\350" +
    "\uff7e\001\002\000\006\347\uff7f\350\uff7f\001\002\000\004" +
    "\372\100\001\002\000\010\347\000\350\000\375\u02eb\001" +
    "\002\000\006\347\uff81\350\uff81\001\002\000\004\372\100" +
    "\001\002\000\010\347\000\350\000\375\u02eb\001\002\000" +
    "\006\347\uff83\350\uff83\001\002\000\010\347\000\350\000" +
    "\375\u02eb\001\002\000\006\347\uff82\350\uff82\001\002\000" +
    "\006\347\uff86\350\uff86\001\002\000\006\347\uff84\350\uff84" +
    "\001\002\000\026\372\100\u010b\302\u0110\303\u0128\311\u0133" +
    "\275\u0135\312\u0137\306\u0138\307\u0139\305\u013f\301\001\002" +
    "\000\006\347\uff87\350\uff87\001\002\000\006\347\uff98\350" +
    "\uff98\001\002\000\006\u0129\uff96\u0159\uff96\001\002\000\006" +
    "\u0129\uff95\u0159\uff95\001\002\000\006\347\uff9c\350\uff9c\001" +
    "\002\000\006\u0129\u02ff\u0159\u0301\001\002\000\004\372\u0305" +
    "\001\002\000\006\347\uff97\350\uff97\001\002\000\004\u012b" +
    "\u0302\001\002\000\004\373\u0303\001\002\000\004\372\u0304" +
    "\001\002\000\006\347\uff94\350\uff94\001\002\000\006\347" +
    "\uff93\350\uff93\001\002\000\004\u010a\uff90\001\002\000\004" +
    "\u010a\uff91\001\002\000\004\u010a\u030a\001\002\000\006\347" +
    "\uff9b\350\uff9b\001\002\000\004\372\100\001\002\000\020" +
    "\374\u0311\u015a\u0310\u015b\u030c\u015c\u030e\u015d\u030f\u015e\u0312\u015f" +
    "\u0313\001\002\000\006\347\uff8e\350\uff8e\001\002\000\006" +
    "\347\uff92\350\uff92\001\002\000\006\347\uff8d\350\uff8d\001" +
    "\002\000\006\347\uff8b\350\uff8b\001\002\000\006\347\uff8f" +
    "\350\uff8f\001\002\000\006\347\uff8c\350\uff8c\001\002\000" +
    "\006\347\uff8a\350\uff8a\001\002\000\006\347\uff89\350\uff89" +
    "\001\002\000\004\002\001\001\002\000\010\344\u02ad\366" +
    "\064\367\055\001\002\000\004\342\u0318\001\002\000\006" +
    "\342\ufe93\372\ufe93\001\002\000\004\372\100\001\002\000" +
    "\012\347\000\350\000\352\000\375\157\001\002\000\010" +
    "\347\000\350\000\352\u024d\001\002\000\006\347\ufe97\350" +
    "\ufe97\001\002\000\010\342\000\351\u031e\372\000\001\002" +
    "\000\006\342\ufe94\372\ufe94\001\002\000\006\342\ufe90\372" +
    "\ufe90\001\002\000\006\342\ufe8f\372\ufe8f\001\002\000\004" +
    "\372\100\001\002\000\004\374\u0322\001\002\000\004\372" +
    "\100\001\002\000\004\373\u0324\001\002\000\022\344\u017a" +
    "\355\063\366\064\367\055\371\061\372\100\u010b\060\u0165" +
    "\051\001\002\000\010\347\000\350\000\352\u024d\001\002" +
    "\000\016\347\ufea6\350\ufea6\352\ufea6\375\ufea6\376\u0180\377" +
    "\u017e\001\002\000\012\347\000\350\000\352\000\375\u0328" +
    "\001\002\000\004\372\100\001\002\000\010\347\ufea7\350" +
    "\ufea7\352\ufea7\001\002\000\010\347\ufea9\350\ufea9\352\ufea9" +
    "\001\002\000\004\373\u032c\001\002\000\022\344\u017a\355" +
    "\063\366\064\367\055\371\061\372\100\u010b\060\u0165\051" +
    "\001\002\000\010\347\000\350\000\352\u024d\001\002\000" +
    "\010\347\ufea8\350\ufea8\352\ufea8\001\002\000\006\347\ufeaa" +
    "\350\ufeaa\001\002\000\022\347\000\350\000\355\063\366" +
    "\064\367\055\371\061\u010b\060\u0165\051\001\002\000\006" +
    "\347\uffc4\350\uffc4\001\002\000\060\002\ufff6\003\ufff6\341" +
    "\ufff6\347\ufff6\350\ufff6\374\ufff6\u0102\ufff6\u0103\ufff6\u0105\ufff6" +
    "\u010d\ufff6\u0111\ufff6\u0126\ufff6\u0132\ufff6\u0157\ufff6\u016b\ufff6\u016c" +
    "\ufff6\u016d\ufff6\u016e\ufff6\u016f\ufff6\u0172\ufff6\u0176\ufff6\u0177\ufff6" +
    "\u0178\ufff6\001\002\000\060\002\ufff5\003\ufff5\341\ufff5\347" +
    "\ufff5\350\ufff5\374\ufff5\u0102\ufff5\u0103\ufff5\u0105\ufff5\u010d\ufff5" +
    "\u0111\ufff5\u0126\ufff5\u0132\ufff5\u0157\ufff5\u016b\ufff5\u016c\ufff5\u016d" +
    "\ufff5\u016e\ufff5\u016f\ufff5\u0172\ufff5\u0176\ufff5\u0177\ufff5\u0178\ufff5" +
    "\001\002\000\060\002\ufff8\003\ufff8\341\ufff8\347\ufff8\350" +
    "\ufff8\374\ufff8\u0102\ufff8\u0103\ufff8\u0105\ufff8\u010d\ufff8\u0111\ufff8" +
    "\u0126\ufff8\u0132\ufff8\u0157\ufff8\u016b\ufff8\u016c\ufff8\u016d\ufff8\u016e" +
    "\ufff8\u016f\ufff8\u0172\ufff8\u0176\ufff8\u0177\ufff8\u0178\ufff8\001\002" +
    "\000\004\372\100\001\002\000\006\347\ufeab\350\ufeab\001" +
    "\002\000\060\002\uffed\003\uffed\341\uffed\347\uffed\350\uffed" +
    "\374\uffed\u0102\uffed\u0103\uffed\u0105\uffed\u010d\uffed\u0111\uffed\u0126" +
    "\uffed\u0132\uffed\u0157\uffed\u016b\uffed\u016c\uffed\u016d\uffed\u016e\uffed" +
    "\u016f\uffed\u0172\uffed\u0176\uffed\u0177\uffed\u0178\uffed\001\002\000" +
    "\060\002\ufffa\003\ufffa\341\ufffa\347\ufffa\350\ufffa\374\ufffa" +
    "\u0102\ufffa\u0103\ufffa\u0105\ufffa\u010d\ufffa\u0111\ufffa\u0126\ufffa\u0132" +
    "\ufffa\u0157\ufffa\u016b\ufffa\u016c\ufffa\u016d\ufffa\u016e\ufffa\u016f\ufffa" +
    "\u0172\ufffa\u0176\ufffa\u0177\ufffa\u0178\ufffa\001\002\000\060\002" +
    "\ufff2\003\ufff2\341\ufff2\347\ufff2\350\ufff2\374\ufff2\u0102\ufff2" +
    "\u0103\ufff2\u0105\ufff2\u010d\ufff2\u0111\ufff2\u0126\ufff2\u0132\ufff2\u0157" +
    "\ufff2\u016b\ufff2\u016c\ufff2\u016d\ufff2\u016e\ufff2\u016f\ufff2\u0172\ufff2" +
    "\u0176\ufff2\u0177\ufff2\u0178\ufff2\001\002\000\060\002\ufffc\003" +
    "\ufffc\341\ufffc\347\ufffc\350\ufffc\374\ufffc\u0102\ufffc\u0103\ufffc" +
    "\u0105\ufffc\u010d\ufffc\u0111\ufffc\u0126\ufffc\u0132\ufffc\u0157\ufffc\u016b" +
    "\ufffc\u016c\ufffc\u016d\ufffc\u016e\ufffc\u016f\ufffc\u0172\ufffc\u0176\ufffc" +
    "\u0177\ufffc\u0178\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0338\000\052\002\032\003\016\004\044\005\043\013" +
    "\003\040\005\042\025\056\010\071\042\125\012\163\011" +
    "\202\004\204\026\207\031\223\030\226\022\237\041\240" +
    "\034\245\021\246\006\001\001\000\004\010\u0339\001\001" +
    "\000\004\010\u0338\001\001\000\004\010\u0337\001\001\000" +
    "\004\010\u0336\001\001\000\002\001\001\000\004\010\u0333" +
    "\001\001\000\004\010\u0332\001\001\000\004\010\u0331\001" +
    "\001\000\004\015\u032f\001\001\000\006\006\u0316\014\u031f" +
    "\001\001\000\006\006\u0316\014\u0315\001\001\000\002\001" +
    "\001\000\004\164\u02ca\001\001\000\004\015\u02c3\001\001" +
    "\000\002\001\001\000\004\010\u02c2\001\001\000\002\001" +
    "\001\000\010\006\u0240\072\u023f\073\u023c\001\001\000\004" +
    "\010\u0239\001\001\000\004\010\u0238\001\001\000\002\001" +
    "\001\000\004\010\u0237\001\001\000\004\010\u0236\001\001" +
    "\000\004\010\u0235\001\001\000\006\015\u0215\206\u0216\001" +
    "\001\000\012\006\u01f7\015\u01f6\206\u01f8\241\u01fa\001\001" +
    "\000\002\001\001\000\006\006\u01d5\057\u01d4\001\001\000" +
    "\012\006\212\126\204\133\215\210\210\001\001\000\010" +
    "\041\127\046\131\054\135\001\001\000\002\001\001\000" +
    "\004\010\123\001\001\000\002\001\001\000\046\002\032" +
    "\005\120\013\003\040\005\042\025\056\010\071\042\125" +
    "\012\163\011\202\004\204\026\207\031\223\030\226\022" +
    "\237\041\240\034\245\021\246\006\001\001\000\004\015" +
    "\100\001\001\000\004\206\051\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\024\064\034" +
    "\053\036\056\037\055\206\061\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\067\205\066\001" +
    "\001\000\004\206\070\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\024\072\034\053\036" +
    "\056\037\055\206\061\001\001\000\006\006\067\205\073" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\067\205\076\001\001\000\002\001\001\000\006\006\116" +
    "\011\115\001\001\000\020\006\102\024\104\034\053\036" +
    "\056\037\055\206\101\224\103\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\107\225" +
    "\106\001\001\000\020\006\102\024\104\034\053\036\056" +
    "\037\055\206\101\224\110\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\024\112\034\053" +
    "\036\056\037\055\206\061\001\001\000\006\006\107\225" +
    "\113\001\001\000\002\001\001\000\004\015\117\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\137\043\201\001\001\000\006\006" +
    "\137\043\163\001\001\000\006\006\137\043\154\001\001" +
    "\000\002\001\001\000\004\015\153\001\001\000\002\001" +
    "\001\000\006\006\137\043\151\001\001\000\006\006\137" +
    "\043\140\001\001\000\004\015\136\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\015\143" +
    "\044\144\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\147\045\146\001\001\000\002\001\001\000\006" +
    "\015\143\044\150\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\152\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\015\155\001\001\000" +
    "\006\006\160\055\157\001\001\000\004\015\161\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\160\055" +
    "\162\001\001\000\002\001\001\000\004\015\164\001\001" +
    "\000\012\015\167\047\171\050\170\052\165\001\001\000" +
    "\002\001\001\000\004\015\173\001\001\000\006\006\160" +
    "\055\172\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\176\051\175\001\001\000\004" +
    "\015\177\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\050\200\001\001\000\002\001\001\000\004\015\202" +
    "\001\001\000\006\006\160\055\203\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\u01a9\127\u01aa\001\001" +
    "\000\004\145\u01a4\001\001\000\002\001\001\000\004\211" +
    "\u0151\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\271\146\272\001\001\000\006\015\256\137\257\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\015\222\134\223\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\225\001\001" +
    "\000\002\001\001\000\006\015\227\135\230\001\001\000" +
    "\006\006\250\234\251\001\001\000\002\001\001\000\006" +
    "\006\234\136\232\001\001\000\002\001\001\000\004\015" +
    "\241\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\227\135\237\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\227\135\243\001\001" +
    "\000\002\001\001\000\006\006\234\136\245\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\253\235\254\001\001\000\006\015" +
    "\227\135\255\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\261\140\260\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\264\141\263\001\001\000\002\001\001\000\006\006" +
    "\160\055\265\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\071\270\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\015\303\144\277\150\307" +
    "\151\275\155\276\001\001\000\002\001\001\000\006\006" +
    "\u014a\152\u0149\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\342\161\341\001\001\000\002\001\001\000" +
    "\014\024\u0147\034\053\036\056\037\055\206\061\001\001" +
    "\000\004\153\u0113\001\001\000\004\015\u0108\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\015" +
    "\314\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\317\001\001\000\002\001\001\000\004\015\321\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\006\326" +
    "\133\330\143\327\155\324\001\001\000\002\001\001\000" +
    "\006\006\342\161\341\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\015\332\001\001\000" +
    "\006\006\160\055\333\001\001\000\006\006\336\123\337" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\015\344\001\001\000\006\006" +
    "\160\055\345\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\352\147\350\001\001\000\002\001\001\000" +
    "\004\015\354\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\006\360\015\357\022\361\157" +
    "\356\001\001\000\002\001\001\000\004\007\364\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\024\377\034\053\036\056\037\055" +
    "\206\061\001\001\000\002\001\001\000\004\034\374\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\006\u0103\021\u0100" +
    "\023\u0102\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\360\015\357\022\u0105\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\155\u0109\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\006" +
    "\u0138\154\u0136\155\u0137\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\034\053\036\056\037\u0121\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\034\053\036" +
    "\056\037\u0124\001\001\000\002\001\001\000\010\034\053" +
    "\036\056\037\u0126\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\034\053\036\056\037\u0129\001\001\000\002" +
    "\001\001\000\010\034\053\036\056\037\u012b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\034\053\036\056\037" +
    "\u0131\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\034\053\036\056\037\u0134\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\006\u013b\155\u013a" +
    "\156\u0139\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\034\053\036\056" +
    "\037\u013d\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\034\053\036\056\037\u0140\001\001\000\002\001\001" +
    "\000\010\034\053\036\056\037\u0142\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\034\053\036\056\037\u0145" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\015\303\144\277\150\u014b\151\275\155\276" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u014d\001\001\000\002\001\001\000\004" +
    "\034\u014f\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\u0195\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\015\u0155\001\001\000\002\001\001\000\010\006" +
    "\u0158\212\u0157\213\u015a\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\153" +
    "\u015c\001\001\000\006\006\u0160\215\u015f\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u0163\214\u0164\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\213\u0165" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\153\u0168\206\u016a\231\u016b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\u016e\216\u016d\001\001\000\004\217\u018d" +
    "\001\001\000\006\006\u0171\227\u016f\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\054\002\032\004\u0175\005\043\006\u0173\013\003\040" +
    "\005\042\025\056\010\071\042\125\012\163\011\202\004" +
    "\204\026\207\031\223\030\226\022\230\u0174\237\041\240" +
    "\034\245\021\246\006\001\001\000\002\001\001\000\002" +
    "\001\001\000\046\002\032\005\120\013\003\040\005\042" +
    "\025\056\010\071\042\125\012\163\011\202\004\204\026" +
    "\207\031\223\030\226\022\237\041\240\034\245\021\246" +
    "\006\001\001\000\024\015\u0178\024\u017a\031\u017c\032\u0177" +
    "\033\u017b\034\053\036\056\037\055\206\061\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\015\u0178\024\u017a" +
    "\031\u0189\032\u0177\033\u017b\034\053\036\056\037\055\206" +
    "\061\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\006\u0180\010\u0181\236\u017e\001\001\000\022\015\u0178\024" +
    "\u017a\032\u0188\033\u017b\034\053\036\056\037\055\206\061" +
    "\001\001\000\002\001\001\000\022\015\u0178\024\u017a\032" +
    "\u0182\033\u017b\034\053\036\056\037\055\206\061\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\015\u0178\024\u017a\033\u0186\034\053\036\056\037\055" +
    "\206\061\001\001\000\020\015\u0178\024\u017a\033\u0185\034" +
    "\053\036\056\037\055\206\061\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\015\303" +
    "\144\277\150\u0193\151\275\155\276\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\006\u0158\212\u0196\213\u015a" +
    "\001\001\000\006\006\u016e\216\u0197\001\001\000\006\006" +
    "\u0199\220\u019a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u019e\221\u019d\001\001\000" +
    "\002\001\001\000\050\002\032\004\u019f\005\043\013\003" +
    "\040\005\042\025\056\010\071\042\125\012\163\011\202" +
    "\004\204\026\207\031\223\030\226\022\237\041\240\034" +
    "\245\021\246\006\001\001\000\002\001\001\000\052\002" +
    "\032\005\120\006\u01a0\013\003\040\005\042\025\056\010" +
    "\071\042\125\012\163\011\202\004\204\026\207\031\222" +
    "\u01a1\223\030\226\022\237\041\240\034\245\021\246\006" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\u01af\130\u01ab\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u01b4" +
    "\131\u01b3\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u01bd\142\u01bc\001\001\000\006\006\u01b4\131\u01be\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\u01bd\142\u01c1\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u01bd\142\u01c4\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u01bd" +
    "\142\u01c7\001\001\000\002\001\001\000\006\006\u01cb\132" +
    "\u01ca\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u01b4\131\u01cd\001\001\000\002\001" +
    "\001\000\006\006\u01cb\132\u01cf\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u01bd\142\u01d2\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\u01d7\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u01d9\060" +
    "\u01d8\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\061\u01dc\001\001\000\006\006\u01e0\062\u01de\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\u01e0\062\u01e2\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\063\u01e5" +
    "\001\001\000\002\001\001\000\016\024\u01e7\034\053\036" +
    "\056\037\055\064\u01e8\206\061\001\001\000\006\006\u01f0" +
    "\065\u01ef\001\001\000\002\001\001\000\006\006\u01ec\066" +
    "\u01eb\001\001\000\004\063\u01ed\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\024\u01f1\034" +
    "\053\036\056\037\055\206\061\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u01f0\065\u01f2\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\006\u01f7\015\u01f6" +
    "\206\u01f8\241\u01f5\001\001\000\004\010\u01f9\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u01fd\242\u01fb\001\001\000\004\010" +
    "\u0202\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\u0201\243\u0200\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\050\002\032\004\u0203\005\043" +
    "\013\003\040\005\042\025\056\010\071\042\125\012\163" +
    "\011\202\004\204\026\207\031\223\030\226\022\237\041" +
    "\240\034\245\021\246\006\001\001\000\050\002\032\005" +
    "\120\013\003\040\005\042\025\056\010\071\042\125\012" +
    "\163\011\202\004\204\026\207\031\223\030\226\022\237" +
    "\041\240\034\244\u0204\245\021\246\006\001\001\000\002" +
    "\001\001\000\004\010\u0210\001\001\000\004\010\u0209\001" +
    "\001\000\012\006\u01f7\015\u01f6\206\u01f8\241\u020c\001\001" +
    "\000\012\006\u01f7\015\u01f6\206\u01f8\241\u020a\001\001\000" +
    "\002\001\001\000\004\010\u020b\001\001\000\002\001\001" +
    "\000\004\010\u020d\001\001\000\002\001\001\000\012\006" +
    "\u01f7\015\u01f6\206\u01f8\241\u0213\001\001\000\012\006\u01f7" +
    "\015\u01f6\206\u01f8\241\u0211\001\001\000\002\001\001\000" +
    "\004\010\u0212\001\001\000\002\001\001\000\004\010\u0214" +
    "\001\001\000\002\001\001\000\006\006\u021f\247\u021e\001" +
    "\001\000\004\153\u0217\001\001\000\006\006\u021a\203\u0219" +
    "\001\001\000\004\206\u021b\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\153\u021c\001\001\000\006\006\u021a" +
    "\203\u021d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\071\u0224\001\001\000\006\006\u0226\250" +
    "\u0225\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\u0228\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\u022c\252\u022d\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\206\u022f\001\001\000" +
    "\006\006\u0231\251\u0232\001\001\000\004\206\u0233\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u0231\251" +
    "\u0234\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\034\015\u02b4" +
    "\024\u017a\031\u02b3\032\u0177\033\u017b\034\053\036\056\037" +
    "\055\074\u02b2\075\u02b1\100\u02b0\206\061\232\u025e\001\001" +
    "\000\002\001\001\000\006\017\u02ad\034\u02ab\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\015\u0242\107\u0243" +
    "\001\001\000\006\006\u029c\111\u02a6\001\001\000\010\006" +
    "\u0248\112\u024a\113\u0247\001\001\000\002\001\001\000\006" +
    "\006\u0296\114\u02a5\001\001\000\006\006\u0296\114\u02a4\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u0296" +
    "\114\u0294\001\001\000\006\006\u024d\016\u024b\001\001\000" +
    "\006\006\u0252\116\u0254\001\001\000\004\015\u024e\001\001" +
    "\000\002\001\001\000\004\007\u024f\001\001\000\024\015" +
    "\u0178\024\u017a\031\u0250\032\u0177\033\u017b\034\053\036\056" +
    "\037\055\206\061\001\001\000\010\006\u0103\021\u0251\023" +
    "\u0102\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u0256\117\u0257\001\001\000\012\015" +
    "\u0285\100\u0287\120\u0286\232\u025e\001\001\000\002\001\001" +
    "\000\006\006\u025a\122\u0259\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\015\u0261\100\u0262" +
    "\232\u025e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\336\123\u0274\001\001\000\006\006\336\123\u026d\001" +
    "\001\000\002\001\001\000\010\006\u026a\101\u0268\102\u0269" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\u026b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u026f\124\u0270\001\001\000\004\015\u0271\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\336\123\u0272\001" +
    "\001\000\006\006\u025a\122\u0273\001\001\000\002\001\001" +
    "\000\006\006\u026f\124\u0278\001\001\000\020\006\102\024" +
    "\104\034\053\036\056\037\055\206\101\224\u0276\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\u026a\101\u027a\102\u0269\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\006\u026a\101\u027d\102\u0269\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\006\u026a" +
    "\101\u0280\102\u0269\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\006\u026a\101\u0283\102\u0269\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\u028e\001\001\000" +
    "\002\001\001\000\004\007\u0288\001\001\000\014\024\u0289" +
    "\034\053\036\056\037\055\206\061\001\001\000\010\006" +
    "\u028c\023\u028a\121\u028b\001\001\000\012\015\u0285\100\u0287" +
    "\120\u028d\232\u025e\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\024\u028f\034\053\036\056" +
    "\037\055\206\061\001\001\000\010\006\u028c\023\u028a\121" +
    "\u0290\001\001\000\002\001\001\000\004\015\u0292\001\001" +
    "\000\006\006\160\055\u0293\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\u0298\001\001\000\006\006\u029c\111\u029b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\015\u029e\001\001\000\002\001\001\000" +
    "\004\015\u02a0\001\001\000\010\006\u0248\112\u02a1\113\u0247" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u02a9" +
    "\110\u02a8\001\001\000\006\015\u0242\107\u02aa\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\034\u02ae\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\u02b9\103\u02b8\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\015\u0178\024\u017a\031\u02b6" +
    "\032\u0177\033\u017b\034\053\036\056\037\055\206\061\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u02bc" +
    "\076\u02bb\001\001\000\002\001\001\000\010\006\u0240\072" +
    "\u02bd\073\u023c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\u02c4\001\001\000\002\001\001\000\006\170\u0308\171" +
    "\u0307\001\001\000\006\165\u02fc\166\u02fd\001\001\000\006" +
    "\015\256\137\u02f9\001\001\000\006\015\u02df\173\u02de\001" +
    "\001\000\004\177\u02cb\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\200\u02ce\201\u02d2\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u02d7\162\u02d8\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\201\u02d9\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\174" +
    "\u02e1\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\015\303\144\277\150\u02f6\151\275\155\276\175\u02f5\001" +
    "\001\000\006\015\u02e7\176\u02e8\001\001\000\004\015\u02f3" +
    "\001\001\000\006\006\137\043\u02f0\001\001\000\006\006" +
    "\137\043\u02ed\001\001\000\006\006\u02eb\233\u02e9\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\u02e7\176" +
    "\u02ec\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\u02ee\001\001\000\006\006\u02eb\233\u02ef\001\001\000" +
    "\002\001\001\000\004\015\u02f1\001\001\000\006\006\u02eb" +
    "\233\u02f2\001\001\000\002\001\001\000\006\006\u02eb\233" +
    "\u02f4\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\015\303\144\277\150\u02f8\151\275\155" +
    "\276\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\167" +
    "\u02ff\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u030a\001" +
    "\001\000\004\172\u030c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\017\u031b\034\u02ab\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\u0318\001\001" +
    "\000\006\006\160\055\u0319\001\001\000\006\006\u024d\016" +
    "\u031a\001\001\000\002\001\001\000\006\006\u031e\020\u031c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\u0320\001\001\000\002\001\001\000\004" +
    "\015\u0322\001\001\000\002\001\001\000\030\015\u0178\024" +
    "\u017a\025\u0324\026\u0326\031\u0325\032\u0177\033\u017b\034\053" +
    "\036\056\037\055\206\061\001\001\000\006\006\u024d\016" +
    "\u032e\001\001\000\002\001\001\000\006\006\u0328\027\u0329" +
    "\001\001\000\004\015\u032a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\030\015\u0178\024\u017a" +
    "\025\u032c\026\u0326\031\u0325\032\u0177\033\u017b\034\053\036" +
    "\056\037\055\206\061\001\001\000\006\006\u024d\016\u032d" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\006" +
    "\102\024\104\034\053\036\056\037\055\206\101\224\u0330" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\u0335\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    public int cont = 0;
    public String errores="";
    
    public void syntax_error(Symbol s){
         errores +="Error de sintaxis. Linea: " + (s.right + 1) +" Columna: " + s.left + ". Texto: \"" + s.value + "\"\n";
    }

    public Symbol getS(){
        return this.s;
}

public void unrecovered_syntax_error(Symbol s){ 
        errores +="Error de sintaxis. Linea: " + (s.right + 1) +" Columna: " + s.left + ". Texto: En alguna sentencia no se termino de cerrar la sentencia \"" + s.value + "\"\n";
    }




/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // empty ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empty",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()),((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= querys 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // querys ::= querys sentencia 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("querys",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // querys ::= sentencia 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("querys",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // sentencia ::= eliminar fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // sentencia ::= update fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // sentencia ::= truncate fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // sentencia ::= drop fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // sentencia ::= insert fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // sentencia ::= select fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // sentencia ::= create fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // sentencia ::= alter fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // sentencia ::= procedure fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // sentencia ::= sets fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sentencia ::= declares fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // sentencia ::= exec fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // sentencia ::= functions fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // sentencia ::= begin_transaction 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // sentencia ::= save_point 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // sentencia ::= cursor fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sentencia ::= USE objeto_nombre fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // sentencia ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // cursor ::= DECLARE objeto_nombre tipo_cursor CURSOR FOR select abrir_cursor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cursor",164, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // abrir_cursor ::= OPEN objeto_nombre FETCH NEXT FROM tipo_fetch 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("abrir_cursor",166, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // abrir_cursor ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("abrir_cursor",166, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // tipo_cursor ::= INSENSITIVE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // tipo_cursor ::= SCROLL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_cursor ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_fetch ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_fetch",168, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_fetch ::= objeto_nombre INTO VARIABLES mas_variables 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_fetch",168, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // mas_variables ::= COMA VARIABLES mas_variables 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_variables",167, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // mas_variables ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_variables",167, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // begin_transaction ::= trans transaction_name with_trans fin querys fin_transaction 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("begin_transaction",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // trans ::= BEGIN TRAN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("trans",158, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // trans ::= BEGIN TRANSACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("trans",158, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // transaction_name ::= VARIABLES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("transaction_name",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // transaction_name ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("transaction_name",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // transaction_name ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("transaction_name",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // with_trans ::= WITH MARK description 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_trans",160, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // with_trans ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_trans",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // description ::= STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("description",161, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // description ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("description",161, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // fin_transaction ::= COMMIT fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // fin_transaction ::= COMMIT TRAN transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // fin_transaction ::= COMMIT TRANSACTION transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // fin_transaction ::= ROLLBACK fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // fin_transaction ::= ROLLBACK TRAN transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // fin_transaction ::= ROLLBACK TRANSACTION transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_transaction",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // save_point ::= SAVE TRAN transaction_name fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("save_point",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // functions ::= CREATE alterar FUNCTION objeto_nombre PARENTESIS_ABIERTO parametros PARENTESIS_CERRADO RETURNS tipo_retorno with_procedure as BEGIN interno_funcion RETURN E fin_function END 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("functions",148, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // as ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("as",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // as ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("as",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tipo_retorno ::= tipo_dato 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tipo_retorno ::= VARIABLES TABLE PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tipo_retorno ::= TABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // llamar_funciones ::= objeto_nombre PARENTESIS_ABIERTO enviar_datos PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("llamar_funciones",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // fin_function ::= fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_function",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // fin_function ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_function",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // interno_funcion ::= querys 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("interno_funcion",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // interno_funcion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("interno_funcion",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // exec ::= EXECUTE objeto_nombre enviar_datos 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exec",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // exec ::= EXEC objeto_nombre enviar_datos 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exec",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // enviar_datos ::= VARIABLES ASIGNAR data_tipo mandar_mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // enviar_datos ::= data_tipo mandar_mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // enviar_datos ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // mandar_mas ::= COMA enviar_datos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mandar_mas",147, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // mandar_mas ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mandar_mas",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // sets ::= SET VARIABLES ASIGNAR data_tipo sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // sets ::= SET NOCOUNT ON sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // sets2 ::= COMA VARIABLES ASIGNAR data_tipo sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets2",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // sets2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets2",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // declares ::= DECLARE VARIABLES tipo_dato declares2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares",128, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // declares2 ::= COMA VARIABLES tipo_dato declares2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // declares2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // procedure ::= CREATE alterar proc objeto_nombre parametros with_procedure replication AS empezar querys final 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // alterar ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alterar",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // alterar ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alterar",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // proc ::= PROC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("proc",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // proc ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("proc",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametros ::= parametros1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parametros ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametros1 ::= ARROBA IDENTIFICADOR tipo_dato tipo_parametro parametros2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros1",137, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // parametros2 ::= COMA parametros1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros2",138, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametros2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros2",138, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // tipo_parametro ::= OUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // tipo_parametro ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // tipo_parametro ::= READONLY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // tipo_parametro ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // with_procedure ::= WITH procedure_option 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_procedure",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // with_procedure ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_procedure",140, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // procedure_option ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // procedure_option ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // procedure_option ::= EXECUTE AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // replication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("replication",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // replication ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("replication",142, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // empezar ::= BEGIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empezar",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // empezar ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empezar",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // final ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("final",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // final ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("final",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // alter ::= ALTER opciones 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alter",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // opciones ::= DATABASE database_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // opciones ::= INDEX index_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // opciones ::= TABLE table_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // opciones ::= USER user_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // opciones ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // database_alter ::= nombre_actual tipo_alter_base 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database_alter",115, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // nombre_actual ::= CURRENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_actual",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // nombre_actual ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_actual",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // tipo_alter_base ::= MODIFY NAME ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // tipo_alter_base ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // index_alter ::= nombre_index ON objeto_nombre accion_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index_alter",118, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // nombre_index ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_index",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // nombre_index ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_index",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // accion_index ::= REBUILD 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // accion_index ::= DISABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // accion_index ::= REORGANIZE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // accion_index ::= SET 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // accion_index ::= RESUME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // accion_index ::= PAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // accion_index ::= ABORT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // table_alter ::= objeto_nombre accion_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_alter",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // accion_alter ::= ALTER COLUMN add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // accion_alter ::= ADD tipo_add 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // accion_alter ::= DROP drop_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // tipo_add ::= add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_add",123, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // drop_column ::= CONSTRAINT if_op objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // drop_column ::= COLUMN objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // drop_column ::= INDEX if_op objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // drop_column ::= objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // mas_drop ::= COMA drop_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_drop",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // mas_drop ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_drop",153, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // user_alter ::= IDENTIFICADOR WITH set_item 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user_alter",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // set_item ::= set_item1 set_item2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item",126, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // set_item1 ::= NAME ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // set_item1 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // set_item1 ::= LOGIN ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // set_item1 ::= PASSWORD ASIGNAR STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // set_item2 ::= COMA set_item1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // set_item2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // create ::= CREATE opciones_crear 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("create",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // opciones_crear ::= DATABASE database_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // opciones_crear ::= opciones_index INDEX index_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // opciones_crear ::= TABLE table_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // opciones_crear ::= USER user 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // opciones_crear ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // database_create ::= objeto_nombre extras_database 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database_create",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // extras_database ::= ON PRIMARY PARENTESIS_ABIERTO filespec PARENTESIS_CERRADO mas_file 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // extras_database ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // extras_database ::= WITH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // extras_database ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // filespec ::= NAME ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // filespec ::= NAMES ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // filespec ::= FILE ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // filespec ::= FILENAME ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // filespec ::= SIZE ASIGNAR INT_NUM mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // filespec ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // mas_file2 ::= COMA filespec 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file2",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // mas_file2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file2",96, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // mas_file ::= COMA PARENTESIS_ABIERTO filespec PARENTESIS_CERRADO mas_file 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // mas_file ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // opciones_index ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // opciones_index ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // opciones_index ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // opciones_index ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // index_create ::= objeto_nombre ON objeto_nombre PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index_create",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // column_index ::= objeto_nombre tipo_index_orden mas_de_columnindex 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_index",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // mas_de_columnindex ::= COMA column_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_columnindex",155, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // mas_de_columnindex ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_columnindex",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // tipo_index_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // tipo_index_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // tipo_index_orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // mas_index ::= INCLUDE PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // mas_index ::= ON objeto_nombre PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // mas_index ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // view_create ::= objeto_nombre column_view AS select 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("view_create",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // column_view ::= PARENTESIS_ABIERTO column_view1 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // column_view ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // column_view1 ::= objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view1",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // user ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user",99, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // user ::= IDENTIFICADOR FOR LOGIN IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // table_create ::= objeto_nombre PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO extra_create_table 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_create",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // extra_create_table ::= ON objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // extra_create_table ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // extra_create_table ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // add_column ::= add_column1 add_column2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // add_column1 ::= objeto_nombre tipo_dato constraint 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column1",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // add_column1 ::= aux2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column1",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // add_column2 ::= COMA add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column2",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // add_column2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column2",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // tipo_dato ::= CHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // tipo_dato ::= VARCHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // tipo_dato ::= NVARCHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // tipo_dato ::= TEXT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // tipo_dato ::= IMAGE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // tipo_dato ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // tipo_dato ::= VARBINARY PARENTESIS_ABIERTO MAX PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // tipo_dato ::= DATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // tipo_dato ::= DATETIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // tipo_dato ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // tipo_dato ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // tipo_dato ::= TIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // tipo_dato ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // tipo_dato ::= TIMESTAMP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // tipo_dato ::= FLOAT PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // tipo_dato ::= INT PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // tipo_dato ::= MONEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // tipo_dato ::= REAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // tipo_dato ::= BIT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // tipo_dato ::= INT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // tipo_dato ::= DECIMAL PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // tipo_dato ::= DEC PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // tipo_dato ::= NUMERIC PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // constraint ::= constraint1 constraint2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // constraint ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // constraint1 ::= IDENTITY PARENTESIS_ABIERTO NUM COMA NUM PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // constraint1 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // constraint1 ::= UNIQUE extra_unique 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // constraint1 ::= PRIMARY KEY extra_primary 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // constraint1 ::= FOREIGN KEY PARENTESIS_ABIERTO objeto_nombre PARENTESIS_CERRADO REFERENCES objeto_nombre PARENTESIS_ABIERTO objeto_nombre PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // constraint1 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // constraint1 ::= CHECK PARENTESIS_ABIERTO expresion_logica PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // constraint1 ::= DEFAULT data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // extra_unique ::= PARENTESIS_ABIERTO objeto_nombre mas_de_un_objeto PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_unique",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // extra_unique ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_unique",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // extra_primary ::= opciones_index PARENTESIS_ABIERTO objeto_nombre mas_de_un_objeto tipo_orden PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_primary",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // extra_primary ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_primary",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // constraint2 ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // constraint2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // expresion_logica ::= otra_condicion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion_logica",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // aux2 ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("aux2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // aux2 ::= CONSTRAINT objeto_nombre constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("aux2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // select ::= SELECT option_select FROM origen joins condicionales agrupado teniendo orden 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("select",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // option_select ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("option_select",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // option_select ::= seleccion columna 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("option_select",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // seleccion ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // seleccion ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // seleccion ::= TOP expresion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // seleccion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // columna ::= columna1 alias_columna columna2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // columna1 ::= funciones 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // columna1 ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // columna1 ::= objeto_nombre ASIGNAR E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // columna2 ::= COMA option_select 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // columna2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // data_tipo_operacion ::= data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo_operacion",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // data_tipo_operacion ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo_operacion",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // funciones ::= SUM PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // funciones ::= AVG PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // funciones ::= COUNT PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // funciones ::= MIN PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // funciones ::= MAX PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // funciones ::= llamar_funciones 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // valor ::= BIT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // valor ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // valor ::= puede objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // puede ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("puede",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // puede ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("puede",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // alias_columna ::= AS STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // alias_columna ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // alias_columna ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // operacion ::= operacion_matematica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // operacion ::= operacion_logica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // operacion_matematica ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion_matematica",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // operacion_logica ::= data_tipo_operacion operadores data_tipo_operacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion_logica",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // operador ::= SUMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // operador ::= RESTA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // operador ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // operador ::= DIVISION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // operador ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // origen ::= objeto_nombre alias_tabla origen1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // origen1 ::= COMA origen 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen1",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // origen1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen1",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // alias_tabla ::= AS STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // alias_tabla ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // alias_tabla ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // alias_tabla ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // joins ::= tipo_join JOIN objeto_nombre alias_tabla ON objeto_nombre ASIGNAR objeto_nombre joins 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("joins",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // joins ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("joins",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // tipo_join ::= INNER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // tipo_join ::= LEFT tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // tipo_join ::= RIGHT tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // tipo_join ::= FULL tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // tipo_join ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // tipo_join1 ::= OUTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // tipo_join1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // agrupado ::= GROUP BY objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agrupado",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // agrupado ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agrupado",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // teniendo ::= HAVING teniendo1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // teniendo ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // teniendo1 ::= funciones operadores data_tipo teniendo2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo1",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // teniendo1 ::= objeto_nombre operadores data_tipo teniendo2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo1",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // teniendo2 ::= operadores_logicos teniendo1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo2",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // teniendo2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo2",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // orden ::= ORDER BY objeto_nombre tipo_orden orden2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // orden ::= ORDER BY funciones tipo_orden orden2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // tipo_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // tipo_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // tipo_orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // orden2 ::= COMA objeto_nombre tipo_orden orden 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden2",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // orden2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden2",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // insert ::= INSERT into objeto_nombre campos VALUES valores 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("insert",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // insert ::= INSERT into objeto_nombre campos DEFAULT VALUES 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("insert",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // into ::= INTO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("into",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // into ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("into",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // campos ::= PARENTESIS_ABIERTO campos2 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // campos ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // campos2 ::= IDENTIFICADOR mas_de_un_identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos2",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // mas_de_un_identificador ::= COMA IDENTIFICADOR mas_de_un_identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_identificador",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // mas_de_un_identificador ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_identificador",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // valores ::= PARENTESIS_ABIERTO valores2 PARENTESIS_CERRADO mas_valores 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // valores2 ::= data_tipo mas_valores2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores2",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // mas_valores2 ::= COMA data_tipo mas_valores2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // mas_valores2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // mas_valores ::= COMA valores 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // mas_valores ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // drop ::= DROP tipo_objeto 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // if_op ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("if_op",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // if_op ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("if_op",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // tipo_objeto ::= TABLE if_op tabla 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // tipo_objeto ::= index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // tipo_objeto ::= database 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // tipo_objeto ::= PROCEDURE objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // tipo_objeto ::= FUNCTION objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // tipo_objeto ::= USER if_op objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // tipo_objeto ::= VIEW if_op objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // tabla ::= objeto_nombre tabla2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // tabla2 ::= COMA tabla 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla2",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // tabla2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla2",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // index ::= INDEX if_op objeto_nombre index2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // index2 ::= drop_relational_or_xml_or_spatial_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // index2 ::= drop_backward_compatible_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // drop_relational_or_xml_or_spatial_index ::= ON objeto_nombre drop_relational_or_xml_or_spatial_index2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // drop_relational_or_xml_or_spatial_index2 ::= COMA objeto_nombre drop_relational_or_xml_or_spatial_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index2",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // drop_relational_or_xml_or_spatial_index2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index2",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // drop_backward_compatible_index ::= objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // drop_backward_compatible_index2 ::= mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index2",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // drop_backward_compatible_index2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index2",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // database ::= DATABASE if_op objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // mas_de_un_objeto ::= COMA objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_objeto",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // mas_de_un_objeto ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_objeto",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // truncate ::= TRUNCATE TABLE objeto_nombre 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("truncate",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // update ::= UPDATE opciones_delete objeto_nombre SET objeto_nombre ASIGNAR asignaciones condicionales 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("update",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // asignaciones ::= asignaciones1 asignaciones2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // asignaciones2 ::= COMA objeto_nombre ASIGNAR asignaciones condicionales 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // asignaciones2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // asignaciones1 ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // E ::= E SUMA T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // E ::= E RESTA T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // E ::= T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // T ::= T MULTIPLICACION F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // T ::= T DIVISION F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // T ::= F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // F ::= PARENTESIS_ABIERTO E PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // F ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // F ::= data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // NUM ::= INT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NUM",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // NUM ::= BIT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NUM",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // FLOTANTE ::= FLOAT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLOTANTE",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // VALORES_NUMEROS ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VALORES_NUMEROS",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // VALORES_NUMEROS ::= FLOTANTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VALORES_NUMEROS",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // eliminar ::= DELETE opciones_delete FROM objeto_nombre mas_de_un_objeto condicionales 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("eliminar",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // fin ::= PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // fin ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // opciones_delete ::= TOP expresion porcentaje 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_delete",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // opciones_delete ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_delete",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // expresion ::= PARENTESIS_ABIERTO NUM PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // expresion ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // porcentaje ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("porcentaje",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // porcentaje ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("porcentaje",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // condicionales ::= WHERE objeto_nombre operadores E condicionales1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // condicionales ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // condicionales1 ::= operadores_logicos otra_condicion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // condicionales1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // otra_condicion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("otra_condicion",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // otra_condicion ::= objeto_nombre operadores data_tipo condicionales1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("otra_condicion",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // operadores_logicos ::= AND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores_logicos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // operadores_logicos ::= OR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores_logicos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // data_tipo ::= STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // data_tipo ::= VALORES_NUMEROS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // data_tipo ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // data_tipo ::= VARIABLES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // VARIABLES ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VARIABLES",132, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // operadores ::= MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // operadores ::= MENOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // operadores ::= MAYOR_IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // operadores ::= MENOR_IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // operadores ::= DIFERENTE_DE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // operadores ::= LIKE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // operadores ::= BETWEEN NUM AND INT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // operadores ::= ASIGNAR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // operadores ::= IS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // objeto_nombre ::= IDENTIFICADOR objeto_nombre1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // objeto_nombre1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // objeto_nombre1 ::= PUNTO objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // objeto_nombre2 ::= PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // objeto_nombre2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
