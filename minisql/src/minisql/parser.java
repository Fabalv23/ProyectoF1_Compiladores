
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20150226 (SVN rev 63)
//----------------------------------------------------

package minisql;

import java_cup.runtime.Symbol;
import java.util.LinkedList;
import java.util.Stack;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20150226 (SVN rev 63) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Simbolos.class;
}

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u018a\000\002\002\004\000\002\006\002\000\002\003" +
    "\003\000\002\004\004\000\002\004\003\000\002\005\004" +
    "\000\002\005\004\000\002\005\004\000\002\005\004\000" +
    "\002\005\004\000\002\005\004\000\002\005\004\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\005" +
    "\004\000\002\005\004\000\002\005\004\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\004\000\002\005\005\000\002\005\003\000\002" +
    "\246\011\000\002\250\010\000\002\250\003\000\002\247" +
    "\003\000\002\247\003\000\002\247\003\000\002\252\003" +
    "\000\002\252\006\000\002\251\005\000\002\251\003\000" +
    "\002\253\005\000\002\254\005\000\002\255\004\000\002" +
    "\256\004\000\002\256\002\000\002\257\005\000\002\260" +
    "\003\000\002\260\004\000\002\260\002\000\002\261\003" +
    "\000\002\261\003\000\002\226\023\000\002\227\003\000" +
    "\002\227\003\000\002\231\003\000\002\231\007\000\002" +
    "\231\003\000\002\232\006\000\002\236\003\000\002\236" +
    "\003\000\002\230\003\000\002\230\003\000\002\223\005" +
    "\000\002\223\005\000\002\224\006\000\002\224\004\000" +
    "\002\224\003\000\002\225\004\000\002\225\003\000\002" +
    "\204\007\000\002\204\006\000\002\205\007\000\002\205" +
    "\003\000\002\202\006\000\002\203\006\000\002\203\003" +
    "\000\002\207\015\000\002\210\004\000\002\210\003\000" +
    "\002\211\003\000\002\211\003\000\002\212\003\000\002" +
    "\212\003\000\002\213\007\000\002\214\004\000\002\214" +
    "\003\000\002\215\003\000\002\215\003\000\002\215\003" +
    "\000\002\215\003\000\002\216\004\000\002\216\003\000" +
    "\002\217\003\000\002\217\003\000\002\217\005\000\002" +
    "\220\004\000\002\220\003\000\002\221\003\000\002\221" +
    "\003\000\002\222\003\000\002\222\003\000\002\163\004" +
    "\000\002\164\004\000\002\164\004\000\002\164\004\000" +
    "\002\164\004\000\002\164\004\000\002\165\004\000\002" +
    "\166\003\000\002\166\003\000\002\167\006\000\002\167" +
    "\004\000\002\170\006\000\002\171\003\000\002\171\003" +
    "\000\002\172\003\000\002\172\003\000\002\172\003\000" +
    "\002\172\003\000\002\172\003\000\002\172\003\000\002" +
    "\172\003\000\002\173\004\000\002\174\005\000\002\174" +
    "\004\000\002\174\004\000\002\175\003\000\002\176\006" +
    "\000\002\176\005\000\002\176\006\000\002\176\004\000" +
    "\002\233\004\000\002\233\003\000\002\177\005\000\002" +
    "\200\004\000\002\201\005\000\002\201\003\000\002\201" +
    "\005\000\002\201\005\000\002\162\004\000\002\162\003" +
    "\000\002\125\004\000\002\126\004\000\002\126\005\000" +
    "\002\126\004\000\002\126\004\000\002\126\004\000\002" +
    "\127\004\000\002\130\010\000\002\130\004\000\002\130" +
    "\003\000\002\130\003\000\002\131\006\000\002\131\006" +
    "\000\002\131\006\000\002\131\006\000\002\131\006\000" +
    "\002\131\003\000\002\142\004\000\002\142\003\000\002" +
    "\132\007\000\002\132\003\000\002\133\003\000\002\133" +
    "\003\000\002\133\003\000\002\133\003\000\002\134\011" +
    "\000\002\135\005\000\002\235\004\000\002\235\003\000" +
    "\002\234\003\000\002\234\003\000\002\234\003\000\002" +
    "\136\006\000\002\136\010\000\002\136\003\000\002\137" +
    "\006\000\002\140\005\000\002\140\003\000\002\141\004" +
    "\000\002\145\003\000\002\145\006\000\002\146\007\000" +
    "\002\147\004\000\002\147\004\000\002\147\003\000\002" +
    "\150\004\000\002\151\005\000\002\151\003\000\002\152" +
    "\004\000\002\152\003\000\002\153\006\000\002\153\006" +
    "\000\002\153\006\000\002\153\003\000\002\153\003\000" +
    "\002\153\003\000\002\153\006\000\002\153\003\000\002" +
    "\153\003\000\002\153\003\000\002\153\003\000\002\153" +
    "\003\000\002\153\003\000\002\153\003\000\002\153\006" +
    "\000\002\153\006\000\002\153\003\000\002\153\003\000" +
    "\002\153\003\000\002\153\003\000\002\153\010\000\002" +
    "\153\010\000\002\153\010\000\002\154\004\000\002\154" +
    "\003\000\002\155\010\000\002\155\003\000\002\155\004" +
    "\000\002\155\005\000\002\155\014\000\002\155\004\000" +
    "\002\155\006\000\002\155\004\000\002\161\006\000\002" +
    "\161\003\000\002\143\010\000\002\143\003\000\002\156" +
    "\003\000\002\156\003\000\002\157\003\000\002\144\003" +
    "\000\002\144\005\000\002\071\013\000\002\072\003\000" +
    "\002\072\004\000\002\073\003\000\002\073\003\000\002" +
    "\073\004\000\002\073\003\000\002\074\005\000\002\075" +
    "\003\000\002\075\003\000\002\075\005\000\002\076\004" +
    "\000\002\076\003\000\002\077\003\000\002\077\003\000" +
    "\002\100\006\000\002\100\006\000\002\100\006\000\002" +
    "\100\006\000\002\100\006\000\002\100\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\004\000\002\102\003" +
    "\000\002\102\003\000\002\103\004\000\002\103\004\000" +
    "\002\103\003\000\002\104\003\000\002\104\003\000\002" +
    "\105\003\000\002\067\005\000\002\106\003\000\002\106" +
    "\003\000\002\106\003\000\002\106\003\000\002\106\003" +
    "\000\002\107\005\000\002\110\004\000\002\110\003\000" +
    "\002\111\004\000\002\111\004\000\002\111\003\000\002" +
    "\111\003\000\002\112\013\000\002\112\003\000\002\113" +
    "\003\000\002\113\004\000\002\113\004\000\002\113\004" +
    "\000\002\113\003\000\002\114\003\000\002\114\003\000" +
    "\002\116\006\000\002\116\003\000\002\117\004\000\002" +
    "\117\003\000\002\120\006\000\002\120\006\000\002\121" +
    "\004\000\002\121\003\000\002\122\007\000\002\122\007" +
    "\000\002\122\003\000\002\123\003\000\002\123\003\000" +
    "\002\123\003\000\002\124\006\000\002\124\003\000\002" +
    "\056\010\000\002\056\010\000\002\057\003\000\002\057" +
    "\003\000\002\060\005\000\002\060\003\000\002\061\004" +
    "\000\002\062\005\000\002\062\003\000\002\063\006\000" +
    "\002\064\004\000\002\065\005\000\002\065\003\000\002" +
    "\066\004\000\002\066\003\000\002\042\004\000\002\043" +
    "\004\000\002\043\003\000\002\041\005\000\002\041\003" +
    "\000\002\041\003\000\002\041\004\000\002\041\004\000" +
    "\002\041\006\000\002\041\005\000\002\044\004\000\002" +
    "\045\004\000\002\045\003\000\002\046\006\000\002\047" +
    "\003\000\002\047\003\000\002\050\005\000\002\051\005" +
    "\000\002\051\003\000\002\052\004\000\002\053\003\000" +
    "\002\053\003\000\002\054\006\000\002\055\005\000\002" +
    "\055\003\000\002\040\005\000\002\002\012\000\002\025" +
    "\004\000\002\027\007\000\002\027\003\000\002\026\003" +
    "\000\002\031\005\000\002\031\005\000\002\031\003\000" +
    "\002\032\005\000\002\032\005\000\002\032\003\000\002" +
    "\033\005\000\002\033\003\000\002\033\003\000\002\034" +
    "\003\000\002\034\003\000\002\036\003\000\002\037\003" +
    "\000\002\037\003\000\002\013\010\000\002\010\003\000" +
    "\002\010\003\000\002\014\005\000\002\014\003\000\002" +
    "\017\005\000\002\017\003\000\002\020\003\000\002\020" +
    "\003\000\002\016\007\000\002\016\003\000\002\021\004" +
    "\000\002\021\003\000\002\022\003\000\002\022\006\000" +
    "\002\023\003\000\002\023\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\206" +
    "\004\000\002\007\003\000\002\007\003\000\002\007\003" +
    "\000\002\007\003\000\002\007\003\000\002\007\003\000" +
    "\002\007\006\000\002\007\003\000\002\007\003\000\002" +
    "\015\004\000\002\011\003\000\002\011\004\000\002\012" +
    "\004\000\002\012\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0326\000\046\003\032\341\020\374\052\u0102\017\u0103" +
    "\011\u0105\042\u010d\040\u0111\027\u0126\041\u0132\023\u0157\022" +
    "\u016b\016\u016c\025\u016e\036\u016f\047\u0176\050\u0177\051\u0178" +
    "\037\001\002\000\006\347\156\350\157\001\002\000\006" +
    "\347\156\350\157\001\002\000\006\347\156\350\157\001" +
    "\002\000\060\002\uffec\003\uffec\341\uffec\347\uffec\350\uffec" +
    "\374\uffec\u0102\uffec\u0103\uffec\u0105\uffec\u010d\uffec\u0111\uffec\u0126" +
    "\uffec\u0132\uffec\u0157\uffec\u016b\uffec\u016c\uffec\u016d\uffec\u016e\uffec" +
    "\u016f\uffec\u0172\uffec\u0176\uffec\u0177\uffec\u0178\uffec\001\002\000" +
    "\006\347\156\350\157\001\002\000\004\u0104\u0323\001\002" +
    "\000\006\347\156\350\157\001\002\000\006\347\156\350" +
    "\157\001\002\000\060\002\uffef\003\uffef\341\uffef\347\uffef" +
    "\350\uffef\374\uffef\u0102\uffef\u0103\uffef\u0105\uffef\u010d\uffef\u0111" +
    "\uffef\u0126\uffef\u0132\uffef\u0157\uffef\u016b\uffef\u016c\uffef\u016d\uffef" +
    "\u016e\uffef\u016f\uffef\u0172\uffef\u0176\uffef\u0177\uffef\u0178\uffef\001" +
    "\002\000\006\347\156\350\157\001\002\000\004\372\076" +
    "\001\002\000\006\343\u0303\372\000\001\002\000\006\342" +
    "\000\343\u0303\001\002\000\004\002\u0302\001\002\000\014" +
    "\u0104\u02b6\u0106\u02b4\u0107\u02b5\u0127\u02b8\u0130\u02b7\001\002\000" +
    "\004\372\076\001\002\000\006\347\156\350\157\001\002" +
    "\000\006\u0173\131\u0174\130\001\002\000\060\002\uffee\003" +
    "\uffee\341\uffee\347\uffee\350\uffee\374\uffee\u0102\uffee\u0103\uffee" +
    "\u0105\uffee\u010d\uffee\u0111\uffee\u0126\uffee\u0132\uffee\u0157\uffee\u016b" +
    "\uffee\u016c\uffee\u016d\uffee\u016e\uffee\u016f\uffee\u0172\uffee\u0176\uffee" +
    "\u0177\uffee\u0178\uffee\001\002\000\044\343\u022e\344\000\355" +
    "\000\366\000\367\000\371\000\372\000\u0100\u022a\u010b\000" +
    "\u0112\u0229\u0113\000\u0114\000\u0115\000\u0116\000\u0117\000\u0119" +
    "\u022c\u0165\000\001\002\000\006\347\156\350\157\001\002" +
    "\000\006\347\156\350\157\001\002\000\060\002\uffe9\003" +
    "\uffe9\341\uffe9\347\uffe9\350\uffe9\374\uffe9\u0102\uffe9\u0103\uffe9" +
    "\u0105\uffe9\u010d\uffe9\u0111\uffe9\u0126\uffe9\u0132\uffe9\u0157\uffe9\u016b" +
    "\uffe9\u016c\uffe9\u016d\uffe9\u016e\uffe9\u016f\uffe9\u0172\uffe9\u0176\uffe9" +
    "\u0177\uffe9\u0178\uffe9\001\002\000\006\347\156\350\157\001" +
    "\002\000\006\347\156\350\157\001\002\000\006\347\156" +
    "\350\157\001\002\000\006\372\076\u0165\055\001\002\000" +
    "\006\u0173\131\u0174\130\001\002\000\006\372\000\u010f\u01e4" +
    "\001\002\000\032\354\253\u0104\251\u0106\000\u0107\242\u0127" +
    "\243\u0130\250\u013f\244\u0140\246\u0141\254\u0163\000\u0164\000" +
    "\u0170\000\001\002\000\020\u0104\170\u0106\162\u0107\161\u0127" +
    "\163\u0130\167\u0164\165\u0170\171\001\002\000\006\347\156" +
    "\350\157\001\002\000\060\002\ufffd\003\ufffd\341\ufffd\347" +
    "\ufffd\350\ufffd\374\ufffd\u0102\ufffd\u0103\ufffd\u0105\ufffd\u010d\ufffd" +
    "\u0111\ufffd\u0126\ufffd\u0132\ufffd\u0157\ufffd\u016b\ufffd\u016c\ufffd\u016d" +
    "\ufffd\u016e\ufffd\u016f\ufffd\u0172\ufffd\u0176\ufffd\u0177\ufffd\u0178\ufffd" +
    "\001\002\000\060\002\uffed\003\uffed\341\uffed\347\uffed\350" +
    "\uffed\374\uffed\u0102\uffed\u0103\uffed\u0105\uffed\u010d\uffed\u0111\uffed" +
    "\u0126\uffed\u0132\uffed\u0157\uffed\u016b\uffed\u016c\uffed\u016d\uffed\u016e" +
    "\uffed\u016f\uffed\u0172\uffed\u0176\uffed\u0177\uffed\u0178\uffed\001\002" +
    "\000\050\002\uffff\003\032\341\020\374\052\u0102\017\u0103" +
    "\011\u0105\042\u010d\040\u0111\027\u0126\041\u0132\023\u0157\022" +
    "\u016b\016\u016c\025\u016e\036\u016f\047\u0176\050\u0177\051\u0178" +
    "\037\001\002\000\004\372\076\001\002\000\064\002\uffda" +
    "\003\uffda\341\uffda\347\uffda\350\uffda\374\uffda\u0102\uffda\u0103" +
    "\uffda\u0105\uffda\u010d\uffda\u0111\uffda\u0126\uffda\u0132\uffda\u0157\uffda" +
    "\u016b\uffda\u016c\uffda\u016d\uffda\u016e\uffda\u016f\uffda\u0172\uffda\u0173" +
    "\131\u0174\130\u0176\uffda\u0177\uffda\u0178\uffda\001\002\000\006" +
    "\u0173\131\u0174\130\001\002\000\006\u0131\053\u0165\055\001" +
    "\002\000\004\u010a\125\001\002\000\004\373\057\001\002" +
    "\000\004\372\056\001\002\000\144\340\ufe86\342\ufe86\345" +
    "\ufe86\347\ufe86\350\ufe86\352\ufe86\353\ufe86\354\ufe86\370\ufe86" +
    "\373\ufe86\375\ufe86\376\ufe86\377\ufe86\u0100\ufe86\u0101\ufe86\u0104" +
    "\ufe86\u010b\ufe86\u0110\ufe86\u0118\ufe86\u0120\ufe86\u0122\ufe86\u0123\ufe86" +
    "\u0128\ufe86\u0133\ufe86\u0135\ufe86\u0137\ufe86\u0138\ufe86\u013d\ufe86\u013f" +
    "\ufe86\u0145\ufe86\u0146\ufe86\u0147\ufe86\u0148\ufe86\u0149\ufe86\u014a\ufe86" +
    "\u014b\ufe86\u014c\ufe86\u014d\ufe86\u014e\ufe86\u014f\ufe86\u0150\ufe86\u0151" +
    "\ufe86\u0152\ufe86\u0153\ufe86\u0154\ufe86\u0155\ufe86\u0156\ufe86\u016d\ufe86" +
    "\u017e\ufe86\001\002\000\022\344\073\355\071\366\072\367" +
    "\061\371\064\372\076\u010b\065\u0165\055\001\002\000\066" +
    "\342\ufe9d\345\ufe9d\347\ufe9d\350\ufe9d\352\ufe9d\353\ufe9d\354" +
    "\ufe9d\375\ufe9d\376\ufe9d\377\ufe9d\u0100\ufe9d\u0101\ufe9d\u010b\ufe9d" +
    "\u0110\ufe9d\u0118\ufe9d\u0120\ufe9d\u0122\ufe9d\u0123\ufe9d\u0128\ufe9d\u0133" +
    "\ufe9d\u0135\ufe9d\u0137\ufe9d\u0138\ufe9d\u013f\ufe9d\u016d\ufe9d\u017e\ufe9d" +
    "\001\002\000\120\342\ufe9f\344\ufe9f\345\ufe9f\347\ufe9f\350" +
    "\ufe9f\351\ufe9f\352\ufe9f\353\ufe9f\354\ufe9f\355\ufe9f\366\ufe9f" +
    "\367\ufe9f\371\ufe9f\372\ufe9f\375\ufe9f\376\ufe9f\377\ufe9f\u0100" +
    "\ufe9f\u0101\ufe9f\u010b\ufe9f\u0110\ufe9f\u0113\ufe9f\u0114\ufe9f\u0115\ufe9f" +
    "\u0116\ufe9f\u0117\ufe9f\u0118\ufe9f\u0120\ufe9f\u0122\ufe9f\u0123\ufe9f\u0128" +
    "\ufe9f\u0133\ufe9f\u0135\ufe9f\u0137\ufe9f\u0138\ufe9f\u013f\ufe9f\u0165\ufe9f" +
    "\u016d\ufe9f\u017e\ufe9f\001\002\000\046\342\ufea7\345\ufea7\347" +
    "\ufea7\350\ufea7\352\ufea7\353\ufea7\354\ufea7\375\ufea7\376\ufea7" +
    "\377\ufea7\u0100\106\u0101\107\u0118\ufea7\u0120\ufea7\u0122\ufea7\u0123" +
    "\ufea7\u016d\ufea7\u017e\ufea7\001\002\000\066\342\ufe89\345\ufe89" +
    "\347\ufe89\350\ufe89\352\ufe89\353\ufe89\354\ufe89\375\ufe89\376" +
    "\ufe89\377\ufe89\u0100\ufe89\u0101\ufe89\u010b\ufe89\u0110\ufe89\u0118\ufe89" +
    "\u0120\ufe89\u0122\ufe89\u0123\ufe89\u0128\ufe89\u0133\ufe89\u0135\ufe89\u0137" +
    "\ufe89\u0138\ufe89\u013f\ufe89\u016d\ufe89\u017e\ufe89\001\002\000\066" +
    "\342\ufe9e\345\ufe9e\347\ufe9e\350\ufe9e\352\ufe9e\353\ufe9e\354" +
    "\ufe9e\375\ufe9e\376\ufe9e\377\ufe9e\u0100\ufe9e\u0101\ufe9e\u010b\ufe9e" +
    "\u0110\ufe9e\u0118\ufe9e\u0120\ufe9e\u0122\ufe9e\u0123\ufe9e\u0128\ufe9e\u0133" +
    "\ufe9e\u0135\ufe9e\u0137\ufe9e\u0138\ufe9e\u013f\ufe9e\u016d\ufe9e\u017e\ufe9e" +
    "\001\002\000\066\342\ufe88\345\ufe88\347\ufe88\350\ufe88\352" +
    "\ufe88\353\ufe88\354\ufe88\375\ufe88\376\ufe88\377\ufe88\u0100\ufe88" +
    "\u0101\ufe88\u010b\ufe88\u0110\ufe88\u0118\ufe88\u0120\ufe88\u0122\ufe88\u0123" +
    "\ufe88\u0128\ufe88\u0133\ufe88\u0135\ufe88\u0137\ufe88\u0138\ufe88\u013f\ufe88" +
    "\u016d\ufe88\u017e\ufe88\001\002\000\066\342\ufe9c\345\ufe9c\347" +
    "\ufe9c\350\ufe9c\352\ufe9c\353\ufe9c\354\ufe9c\375\ufe9c\376\ufe9c" +
    "\377\ufe9c\u0100\ufe9c\u0101\ufe9c\u010b\ufe9c\u0110\ufe9c\u0118\ufe9c\u0120" +
    "\ufe9c\u0122\ufe9c\u0123\ufe9c\u0128\ufe9c\u0133\ufe9c\u0135\ufe9c\u0137\ufe9c" +
    "\u0138\ufe9c\u013f\ufe9c\u016d\ufe9c\u017e\ufe9c\001\002\000\046\342" +
    "\ufea2\345\ufea2\347\ufea2\350\ufea2\352\ufea2\353\ufea2\354\ufea2" +
    "\375\ufea2\376\ufea2\377\ufea2\u0100\ufea2\u0101\ufea2\u0118\ufea2\u0120" +
    "\ufea2\u0122\ufea2\u0123\ufea2\u016d\ufea2\u017e\ufea2\001\002\000\066" +
    "\342\ufe87\345\ufe87\347\ufe87\350\ufe87\352\ufe87\353\ufe87\354" +
    "\ufe87\375\ufe87\376\ufe87\377\ufe87\u0100\ufe87\u0101\ufe87\u010b\ufe87" +
    "\u0110\ufe87\u0118\ufe87\u0120\ufe87\u0122\ufe87\u0123\ufe87\u0128\ufe87\u0133" +
    "\ufe87\u0135\ufe87\u0137\ufe87\u0138\ufe87\u013f\ufe87\u016d\ufe87\u017e\ufe87" +
    "\001\002\000\066\342\ufe8a\345\ufe8a\347\ufe8a\350\ufe8a\352" +
    "\ufe8a\353\ufe8a\354\ufe8a\375\ufe8a\376\ufe8a\377\ufe8a\u0100\ufe8a" +
    "\u0101\ufe8a\u010b\ufe8a\u0110\ufe8a\u0118\ufe8a\u0120\ufe8a\u0122\ufe8a\u0123" +
    "\ufe8a\u0128\ufe8a\u0133\ufe8a\u0135\ufe8a\u0137\ufe8a\u0138\ufe8a\u013f\ufe8a" +
    "\u016d\ufe8a\u017e\ufe8a\001\002\000\120\342\ufea0\344\ufea0\345" +
    "\ufea0\347\ufea0\350\ufea0\351\ufea0\352\ufea0\353\ufea0\354\ufea0" +
    "\355\ufea0\366\ufea0\367\ufea0\371\ufea0\372\ufea0\375\ufea0\376" +
    "\ufea0\377\ufea0\u0100\ufea0\u0101\ufea0\u010b\ufea0\u0110\ufea0\u0113\ufea0" +
    "\u0114\ufea0\u0115\ufea0\u0116\ufea0\u0117\ufea0\u0118\ufea0\u0120\ufea0\u0122" +
    "\ufea0\u0123\ufea0\u0128\ufea0\u0133\ufea0\u0135\ufea0\u0137\ufea0\u0138\ufea0" +
    "\u013f\ufea0\u0165\ufea0\u016d\ufea0\u017e\ufea0\001\002\000\022\344" +
    "\073\355\071\366\072\367\061\371\064\372\076\u010b\065" +
    "\u0165\055\001\002\000\046\342\ufea1\345\ufea1\347\ufea1\350" +
    "\ufea1\352\ufea1\353\ufea1\354\ufea1\375\ufea1\376\ufea1\377\ufea1" +
    "\u0100\ufea1\u0101\ufea1\u0118\ufea1\u0120\ufea1\u0122\ufea1\u0123\ufea1\u016d" +
    "\ufea1\u017e\ufea1\001\002\000\046\342\ufea4\345\ufea4\347\ufea4" +
    "\350\ufea4\352\ufea4\353\ufea4\354\ufea4\375\ufea4\376\ufea4\377" +
    "\ufea4\u0100\ufea4\u0101\ufea4\u0118\ufea4\u0120\ufea4\u0122\ufea4\u0123\ufea4" +
    "\u016d\ufea4\u017e\ufea4\001\002\000\332\002\000\003\000\340" +
    "\000\341\000\342\000\344\000\345\000\346\117\347\000" +
    "\350\000\352\000\353\000\354\000\355\000\356\000\357" +
    "\000\360\000\361\000\362\000\364\000\365\000\366\000" +
    "\367\000\370\000\371\000\372\000\373\000\374\000\375" +
    "\000\376\000\377\000\u0100\000\u0101\000\u0102\000\u0103\000" +
    "\u0105\000\u010a\000\u010b\000\u010d\000\u010e\000\u010f\000\u0110" +
    "\000\u0111\000\u0118\000\u011a\000\u011b\000\u011c\000\u011d\000" +
    "\u011e\000\u0120\000\u0122\000\u0123\000\u0124\000\u0125\000\u0126" +
    "\000\u0128\000\u0129\000\u012a\000\u0132\000\u0133\000\u0135\000" +
    "\u0137\000\u0138\000\u013c\000\u013d\000\u013f\000\u0144\000\u0145" +
    "\000\u0146\000\u0147\000\u0148\000\u0149\000\u014a\000\u014b\000" +
    "\u014c\000\u014d\000\u014e\000\u014f\000\u0150\000\u0151\000\u0152" +
    "\000\u0153\000\u0154\000\u0155\000\u0156\000\u0157\000\u015a\000" +
    "\u015b\000\u015c\000\u015d\000\u015e\000\u015f\000\u0162\000\u0165" +
    "\000\u016b\000\u016c\000\u016d\000\u016e\000\u016f\000\u0172\000" +
    "\u0176\000\u0177\000\u0178\000\u0179\000\u017a\000\u017b\000\u017c" +
    "\000\u017e\000\001\002\000\014\347\000\350\000\375\100" +
    "\376\103\377\101\001\002\000\004\u0165\055\001\002\000" +
    "\022\344\073\355\071\366\072\367\061\371\064\372\076" +
    "\u010b\065\u0165\055\001\002\000\006\347\uffc1\350\uffc1\001" +
    "\002\000\022\344\073\355\071\366\072\367\061\371\064" +
    "\372\076\u010b\065\u0165\055\001\002\000\006\347\uffbe\350" +
    "\uffbe\001\002\000\046\342\ufea9\345\ufea9\347\ufea9\350\ufea9" +
    "\352\ufea9\353\ufea9\354\ufea9\375\ufea9\376\ufea9\377\ufea9\u0100" +
    "\106\u0101\107\u0118\ufea9\u0120\ufea9\u0122\ufea9\u0123\ufea9\u016d\ufea9" +
    "\u017e\ufea9\001\002\000\022\344\073\355\071\366\072\367" +
    "\061\371\064\372\076\u010b\065\u0165\055\001\002\000\022" +
    "\344\073\355\071\366\072\367\061\371\064\372\076\u010b" +
    "\065\u0165\055\001\002\000\046\342\ufea5\345\ufea5\347\ufea5" +
    "\350\ufea5\352\ufea5\353\ufea5\354\ufea5\375\ufea5\376\ufea5\377" +
    "\ufea5\u0100\ufea5\u0101\ufea5\u0118\ufea5\u0120\ufea5\u0122\ufea5\u0123\ufea5" +
    "\u016d\ufea5\u017e\ufea5\001\002\000\046\342\ufea6\345\ufea6\347" +
    "\ufea6\350\ufea6\352\ufea6\353\ufea6\354\ufea6\375\ufea6\376\ufea6" +
    "\377\ufea6\u0100\ufea6\u0101\ufea6\u0118\ufea6\u0120\ufea6\u0122\ufea6\u0123" +
    "\ufea6\u016d\ufea6\u017e\ufea6\001\002\000\046\342\ufea8\345\ufea8" +
    "\347\ufea8\350\ufea8\352\ufea8\353\ufea8\354\ufea8\375\ufea8\376" +
    "\ufea8\377\ufea8\u0100\106\u0101\107\u0118\ufea8\u0120\ufea8\u0122\ufea8" +
    "\u0123\ufea8\u016d\ufea8\u017e\ufea8\001\002\000\004\373\114\001" +
    "\002\000\022\344\073\355\071\366\072\367\061\371\064" +
    "\372\076\u010b\065\u0165\055\001\002\000\014\347\000\350" +
    "\000\375\100\376\103\377\101\001\002\000\006\347\uffbf" +
    "\350\uffbf\001\002\000\004\372\076\001\002\000\330\002" +
    "\ufe7c\003\ufe7c\340\ufe7c\341\ufe7c\342\ufe7c\344\ufe7c\345\ufe7c" +
    "\347\ufe7c\350\ufe7c\352\ufe7c\353\ufe7c\354\ufe7c\355\ufe7c\356" +
    "\ufe7c\357\ufe7c\360\ufe7c\361\ufe7c\362\ufe7c\364\ufe7c\365\ufe7c" +
    "\366\ufe7c\367\ufe7c\370\ufe7c\371\ufe7c\372\ufe7c\373\ufe7c\374" +
    "\ufe7c\375\ufe7c\376\ufe7c\377\ufe7c\u0100\ufe7c\u0101\ufe7c\u0102\ufe7c" +
    "\u0103\ufe7c\u0105\ufe7c\u010a\ufe7c\u010b\ufe7c\u010d\ufe7c\u010e\ufe7c\u010f" +
    "\ufe7c\u0110\ufe7c\u0111\ufe7c\u0118\ufe7c\u011a\ufe7c\u011b\ufe7c\u011c\ufe7c" +
    "\u011d\ufe7c\u011e\ufe7c\u0120\ufe7c\u0122\ufe7c\u0123\ufe7c\u0124\ufe7c\u0125" +
    "\ufe7c\u0126\ufe7c\u0128\ufe7c\u0129\ufe7c\u012a\ufe7c\u0132\ufe7c\u0133\ufe7c" +
    "\u0135\ufe7c\u0137\ufe7c\u0138\ufe7c\u013c\ufe7c\u013d\ufe7c\u013f\ufe7c\u0144" +
    "\ufe7c\u0145\ufe7c\u0146\ufe7c\u0147\ufe7c\u0148\ufe7c\u0149\ufe7c\u014a\ufe7c" +
    "\u014b\ufe7c\u014c\ufe7c\u014d\ufe7c\u014e\ufe7c\u014f\ufe7c\u0150\ufe7c\u0151" +
    "\ufe7c\u0152\ufe7c\u0153\ufe7c\u0154\ufe7c\u0155\ufe7c\u0156\ufe7c\u0157\ufe7c" +
    "\u015a\ufe7c\u015b\ufe7c\u015c\ufe7c\u015d\ufe7c\u015e\ufe7c\u015f\ufe7c\u0162" +
    "\ufe7c\u0165\ufe7c\u016b\ufe7c\u016c\ufe7c\u016d\ufe7c\u016e\ufe7c\u016f\ufe7c" +
    "\u0172\ufe7c\u0176\ufe7c\u0177\ufe7c\u0178\ufe7c\u0179\ufe7c\u017a\ufe7c\u017b" +
    "\ufe7c\u017c\ufe7c\u017e\ufe7c\001\002\000\330\002\ufe7b\003\ufe7b" +
    "\340\ufe7b\341\ufe7b\342\ufe7b\344\ufe7b\345\ufe7b\347\ufe7b\350" +
    "\ufe7b\352\ufe7b\353\ufe7b\354\ufe7b\355\ufe7b\356\ufe7b\357\ufe7b" +
    "\360\ufe7b\361\ufe7b\362\ufe7b\364\ufe7b\365\ufe7b\366\ufe7b\367" +
    "\ufe7b\370\ufe7b\371\ufe7b\372\ufe7b\373\ufe7b\374\ufe7b\375\ufe7b" +
    "\376\ufe7b\377\ufe7b\u0100\ufe7b\u0101\ufe7b\u0102\ufe7b\u0103\ufe7b\u0105" +
    "\ufe7b\u010a\ufe7b\u010b\ufe7b\u010d\ufe7b\u010e\ufe7b\u010f\ufe7b\u0110\ufe7b" +
    "\u0111\ufe7b\u0118\ufe7b\u011a\ufe7b\u011b\ufe7b\u011c\ufe7b\u011d\ufe7b\u011e" +
    "\ufe7b\u0120\ufe7b\u0122\ufe7b\u0123\ufe7b\u0124\ufe7b\u0125\ufe7b\u0126\ufe7b" +
    "\u0128\ufe7b\u0129\ufe7b\u012a\ufe7b\u0132\ufe7b\u0133\ufe7b\u0135\ufe7b\u0137" +
    "\ufe7b\u0138\ufe7b\u013c\ufe7b\u013d\ufe7b\u013f\ufe7b\u0144\ufe7b\u0145\ufe7b" +
    "\u0146\ufe7b\u0147\ufe7b\u0148\ufe7b\u0149\ufe7b\u014a\ufe7b\u014b\ufe7b\u014c" +
    "\ufe7b\u014d\ufe7b\u014e\ufe7b\u014f\ufe7b\u0150\ufe7b\u0151\ufe7b\u0152\ufe7b" +
    "\u0153\ufe7b\u0154\ufe7b\u0155\ufe7b\u0156\ufe7b\u0157\ufe7b\u015a\ufe7b\u015b" +
    "\ufe7b\u015c\ufe7b\u015d\ufe7b\u015e\ufe7b\u015f\ufe7b\u0162\ufe7b\u0165\ufe7b" +
    "\u016b\ufe7b\u016c\ufe7b\u016d\ufe7b\u016e\ufe7b\u016f\ufe7b\u0172\ufe7b\u0176" +
    "\ufe7b\u0177\ufe7b\u0178\ufe7b\u0179\ufe7b\u017a\ufe7b\u017b\ufe7b\u017c\ufe7b" +
    "\u017e\ufe7b\001\002\000\330\002\ufe7a\003\ufe7a\340\ufe7a\341" +
    "\ufe7a\342\ufe7a\344\ufe7a\345\ufe7a\347\ufe7a\350\ufe7a\352\ufe7a" +
    "\353\ufe7a\354\ufe7a\355\ufe7a\356\ufe7a\357\ufe7a\360\ufe7a\361" +
    "\ufe7a\362\ufe7a\364\ufe7a\365\ufe7a\366\ufe7a\367\ufe7a\370\ufe7a" +
    "\371\ufe7a\372\ufe7a\373\ufe7a\374\ufe7a\375\ufe7a\376\ufe7a\377" +
    "\ufe7a\u0100\ufe7a\u0101\ufe7a\u0102\ufe7a\u0103\ufe7a\u0105\ufe7a\u010a\ufe7a" +
    "\u010b\ufe7a\u010d\ufe7a\u010e\ufe7a\u010f\ufe7a\u0110\ufe7a\u0111\ufe7a\u0118" +
    "\ufe7a\u011a\ufe7a\u011b\ufe7a\u011c\ufe7a\u011d\ufe7a\u011e\ufe7a\u0120\ufe7a" +
    "\u0122\ufe7a\u0123\ufe7a\u0124\ufe7a\u0125\ufe7a\u0126\ufe7a\u0128\ufe7a\u0129" +
    "\ufe7a\u012a\ufe7a\u0132\ufe7a\u0133\ufe7a\u0135\ufe7a\u0137\ufe7a\u0138\ufe7a" +
    "\u013c\ufe7a\u013d\ufe7a\u013f\ufe7a\u0144\ufe7a\u0145\ufe7a\u0146\ufe7a\u0147" +
    "\ufe7a\u0148\ufe7a\u0149\ufe7a\u014a\ufe7a\u014b\ufe7a\u014c\ufe7a\u014d\ufe7a" +
    "\u014e\ufe7a\u014f\ufe7a\u0150\ufe7a\u0151\ufe7a\u0152\ufe7a\u0153\ufe7a\u0154" +
    "\ufe7a\u0155\ufe7a\u0156\ufe7a\u0157\ufe7a\u015a\ufe7a\u015b\ufe7a\u015c\ufe7a" +
    "\u015d\ufe7a\u015e\ufe7a\u015f\ufe7a\u0162\ufe7a\u0165\ufe7a\u016b\ufe7a\u016c" +
    "\ufe7a\u016d\ufe7a\u016e\ufe7a\u016f\ufe7a\u0172\ufe7a\u0176\ufe7a\u0177\ufe7a" +
    "\u0178\ufe7a\u0179\ufe7a\u017a\ufe7a\u017b\ufe7a\u017c\ufe7a\u017e\ufe7a\001" +
    "\002\000\010\345\124\376\103\377\101\001\002\000\046" +
    "\342\ufea3\345\ufea3\347\ufea3\350\ufea3\352\ufea3\353\ufea3\354" +
    "\ufea3\375\ufea3\376\ufea3\377\ufea3\u0100\ufea3\u0101\ufea3\u0118\ufea3" +
    "\u0120\ufea3\u0122\ufea3\u0123\ufea3\u016d\ufea3\u017e\ufea3\001\002\000" +
    "\010\347\000\350\000\375\100\001\002\000\006\347\uffc0" +
    "\350\uffc0\001\002\000\064\002\uffd6\003\uffd6\341\uffd6\347" +
    "\uffd6\350\uffd6\372\076\374\uffd6\u0102\uffd6\u0103\uffd6\u0105\uffd6" +
    "\u010d\uffd6\u0111\uffd6\u0126\uffd6\u0132\uffd6\u0157\uffd6\u0165\134\u016b" +
    "\uffd6\u016c\uffd6\u016d\uffd6\u016e\uffd6\u016f\uffd6\u0172\uffd6\u0176\uffd6" +
    "\u0177\uffd6\u0178\uffd6\001\002\000\064\002\uffd4\003\uffd4\341" +
    "\uffd4\347\uffd4\350\uffd4\372\uffd4\374\uffd4\u0102\uffd4\u0103\uffd4" +
    "\u0105\uffd4\u010d\uffd4\u0111\uffd4\u0126\uffd4\u0132\uffd4\u0157\uffd4\u0165" +
    "\uffd4\u016b\uffd4\u016c\uffd4\u016d\uffd4\u016e\uffd4\u016f\uffd4\u0172\uffd4" +
    "\u0176\uffd4\u0177\uffd4\u0178\uffd4\001\002\000\064\002\uffd5\003" +
    "\uffd5\341\uffd5\347\uffd5\350\uffd5\372\uffd5\374\uffd5\u0102\uffd5" +
    "\u0103\uffd5\u0105\uffd5\u010d\uffd5\u0111\uffd5\u0126\uffd5\u0132\uffd5\u0157" +
    "\uffd5\u0165\uffd5\u016b\uffd5\u016c\uffd5\u016d\uffd5\u016e\uffd5\u016f\uffd5" +
    "\u0172\uffd5\u0176\uffd5\u0177\uffd5\u0178\uffd5\001\002\000\060\002" +
    "\uffdd\003\uffdd\341\uffdd\347\uffdd\350\uffdd\374\uffdd\u0102\uffdd" +
    "\u0103\uffdd\u0105\uffdd\u010d\uffdd\u0111\uffdd\u0126\uffdd\u0132\uffdd\u0157" +
    "\uffdd\u016b\uffdd\u016c\uffdd\u016d\uffdd\u016e\uffdd\u016f\uffdd\u0172\uffdd" +
    "\u0176\uffdd\u0177\uffdd\u0178\uffdd\001\002\000\060\002\uffd8\003" +
    "\uffd8\341\uffd8\347\uffd8\350\uffd8\374\uffd8\u0102\uffd8\u0103\uffd8" +
    "\u0105\uffd8\u010d\uffd8\u0111\uffd8\u0126\uffd8\u0132\uffd8\u0157\uffd8\u016b" +
    "\uffd8\u016c\uffd8\u016d\uffd8\u016e\uffd8\u016f\uffd8\u0172\uffd8\u0176\uffd8" +
    "\u0177\uffd8\u0178\uffd8\001\002\000\004\372\076\001\002\000" +
    "\060\002\uffd7\003\uffd7\341\uffd7\347\uffd7\350\uffd7\374\uffd7" +
    "\u0102\uffd7\u0103\uffd7\u0105\uffd7\u010d\uffd7\u0111\uffd7\u0126\uffd7\u0132" +
    "\uffd7\u0157\uffd7\u016b\uffd7\u016c\uffd7\u016d\uffd7\u016e\uffd7\u016f\uffd7" +
    "\u0172\uffd7\u0176\uffd7\u0177\uffd7\u0178\uffd7\001\002\000\060\002" +
    "\uffdc\003\uffdc\341\uffdc\347\uffdc\350\uffdc\374\uffdc\u0102\uffdc" +
    "\u0103\uffdc\u0105\uffdc\u010d\uffdc\u0111\uffdc\u0126\uffdc\u0132\uffdc\u0157" +
    "\uffdc\u016b\uffdc\u016c\uffdc\u016d\uffdc\u016e\uffdc\u016f\uffdc\u0172\uffdc" +
    "\u0176\uffdc\u0177\uffdc\u0178\uffdc\001\002\000\064\002\uffd6\003" +
    "\uffd6\341\uffd6\347\uffd6\350\uffd6\372\076\374\uffd6\u0102\uffd6" +
    "\u0103\uffd6\u0105\uffd6\u010d\uffd6\u0111\uffd6\u0126\uffd6\u0132\uffd6\u0157" +
    "\uffd6\u0165\134\u016b\uffd6\u016c\uffd6\u016d\uffd6\u016e\uffd6\u016f\uffd6" +
    "\u0172\uffd6\u0176\uffd6\u0177\uffd6\u0178\uffd6\001\002\000\060\002" +
    "\uffdb\003\uffdb\341\uffdb\347\uffdb\350\uffdb\374\uffdb\u0102\uffdb" +
    "\u0103\uffdb\u0105\uffdb\u010d\uffdb\u0111\uffdb\u0126\uffdb\u0132\uffdb\u0157" +
    "\uffdb\u016b\uffdb\u016c\uffdb\u016d\uffdb\u016e\uffdb\u016f\uffdb\u0172\uffdb" +
    "\u0176\uffdb\u0177\uffdb\u0178\uffdb\001\002\000\022\347\000\350" +
    "\000\355\071\366\072\367\061\371\064\u010b\065\u0165\055" +
    "\001\002\000\014\345\ufe87\347\ufe87\350\ufe87\373\152\375" +
    "\ufe87\001\002\000\010\345\uffc4\347\uffc4\350\uffc4\001\002" +
    "\000\006\347\uffc7\350\uffc7\001\002\000\012\345\000\347" +
    "\000\350\000\375\146\001\002\000\024\345\000\347\000" +
    "\350\000\355\071\366\072\367\061\371\064\u010b\065\u0165" +
    "\055\001\002\000\010\345\uffc5\347\uffc5\350\uffc5\001\002" +
    "\000\010\345\uffc2\347\uffc2\350\uffc2\001\002\000\010\345" +
    "\uffc3\347\uffc3\350\uffc3\001\002\000\016\355\071\366\072" +
    "\367\061\371\064\u010b\065\u0165\055\001\002\000\012\345" +
    "\000\347\000\350\000\375\146\001\002\000\010\345\uffc6" +
    "\347\uffc6\350\uffc6\001\002\000\060\002\ufffe\003\ufffe\341" +
    "\ufffe\347\ufffe\350\ufffe\374\ufffe\u0102\ufffe\u0103\ufffe\u0105\ufffe" +
    "\u010d\ufffe\u0111\ufffe\u0126\ufffe\u0132\ufffe\u0157\ufffe\u016b\ufffe\u016c" +
    "\ufffe\u016d\ufffe\u016e\ufffe\u016f\ufffe\u0172\ufffe\u0176\ufffe\u0177\ufffe" +
    "\u0178\ufffe\001\002\000\060\002\ufe9a\003\ufe9a\341\ufe9a\347" +
    "\ufe9a\350\ufe9a\374\ufe9a\u0102\ufe9a\u0103\ufe9a\u0105\ufe9a\u010d\ufe9a" +
    "\u0111\ufe9a\u0126\ufe9a\u0132\ufe9a\u0157\ufe9a\u016b\ufe9a\u016c\ufe9a\u016d" +
    "\ufe9a\u016e\ufe9a\u016f\ufe9a\u0172\ufe9a\u0176\ufe9a\u0177\ufe9a\u0178\ufe9a" +
    "\001\002\000\060\002\ufe99\003\ufe99\341\ufe99\347\ufe99\350" +
    "\ufe99\374\ufe99\u0102\ufe99\u0103\ufe99\u0105\ufe99\u010d\ufe99\u0111\ufe99" +
    "\u0126\ufe99\u0132\ufe99\u0157\ufe99\u016b\ufe99\u016c\ufe99\u016d\ufe99\u016e" +
    "\ufe99\u016f\ufe99\u0172\ufe99\u0176\ufe99\u0177\ufe99\u0178\ufe99\001\002" +
    "\000\060\002\ufff7\003\ufff7\341\ufff7\347\ufff7\350\ufff7\374" +
    "\ufff7\u0102\ufff7\u0103\ufff7\u0105\ufff7\u010d\ufff7\u0111\ufff7\u0126\ufff7" +
    "\u0132\ufff7\u0157\ufff7\u016b\ufff7\u016c\ufff7\u016d\ufff7\u016e\ufff7\u016f" +
    "\ufff7\u0172\ufff7\u0176\ufff7\u0177\ufff7\u0178\ufff7\001\002\000\006" +
    "\372\000\u0108\176\001\002\000\006\372\000\u0108\176\001" +
    "\002\000\006\372\000\u0108\176\001\002\000\006\347\ufec8" +
    "\350\ufec8\001\002\000\004\372\076\001\002\000\006\347" +
    "\ufec4\350\ufec4\001\002\000\006\372\000\u0108\176\001\002" +
    "\000\006\372\000\u0108\176\001\002\000\004\372\076\001" +
    "\002\000\006\347\ufec3\350\ufec3\001\002\000\006\347\ufec1" +
    "\350\ufec1\001\002\000\004\372\ufec6\001\002\000\004\372" +
    "\076\001\002\000\004\u0109\177\001\002\000\004\372\ufec7" +
    "\001\002\000\010\347\000\350\000\375\202\001\002\000" +
    "\006\347\ufec5\350\ufec5\001\002\000\004\372\076\001\002" +
    "\000\006\347\ufebe\350\ufebe\001\002\000\006\347\ufebc\350" +
    "\ufebc\001\002\000\006\347\ufebd\350\ufebd\001\002\000\004" +
    "\372\076\001\002\000\006\347\ufebf\350\ufebf\001\002\000" +
    "\006\347\ufec2\350\ufec2\001\002\000\004\372\076\001\002" +
    "\000\010\347\000\350\000\375\213\001\002\000\004\372" +
    "\076\001\002\000\006\347\ufec0\350\ufec0\001\002\000\024" +
    "\345\ufeb0\347\ufeb0\350\ufeb0\352\ufeb0\u0122\ufeb0\u0123\ufeb0\u0124" +
    "\ufeb0\u0125\ufeb0\u017e\ufeb0\001\002\000\026\345\000\347\000" +
    "\350\000\352\000\375\213\u0122\000\u0123\000\u0124\000\u0125" +
    "\000\u017e\000\001\002\000\024\345\ufeb1\347\ufeb1\350\ufeb1" +
    "\352\ufeb1\u0122\ufeb1\u0123\ufeb1\u0124\ufeb1\u0125\ufeb1\u017e\ufeb1\001" +
    "\002\000\004\372\076\001\002\000\006\372\076\u010a\223" +
    "\001\002\000\006\347\ufeb9\350\ufeb9\001\002\000\004\372" +
    "\076\001\002\000\010\347\000\350\000\375\213\001\002" +
    "\000\006\347\ufeba\350\ufeba\001\002\000\006\347\ufebb\350" +
    "\ufebb\001\002\000\006\347\ufeb5\350\ufeb5\001\002\000\010" +
    "\347\000\350\000\375\231\001\002\000\004\372\076\001" +
    "\002\000\006\347\ufeb6\350\ufeb6\001\002\000\006\347\ufeb8" +
    "\350\ufeb8\001\002\000\004\u010a\223\001\002\000\006\347" +
    "\ufeb7\350\ufeb7\001\002\000\004\372\076\001\002\000\010" +
    "\347\000\350\000\375\213\001\002\000\006\347\ufeb2\350" +
    "\ufeb2\001\002\000\006\347\uff79\350\uff79\001\002\000\004" +
    "\372\076\001\002\000\004\372\u01b3\001\002\000\004\u0106" +
    "\uff64\001\002\000\010\u0163\u0170\u0164\u016f\u0170\u0171\001\002" +
    "\000\006\344\uff63\u0106\uff63\001\002\000\012\u0106\uff61\u0163" +
    "\uffb8\u0164\uffb8\u0170\uffb8\001\002\000\004\372\076\001\002" +
    "\000\004\372\076\001\002\000\004\u0106\256\001\002\000" +
    "\004\u0157\255\001\002\000\006\344\uff62\u0106\uff62\001\002" +
    "\000\010\u0163\uffb9\u0164\uffb9\u0170\uffb9\001\002\000\004\372" +
    "\076\001\002\000\006\347\uff77\350\uff77\001\002\000\004" +
    "\u010a\261\001\002\000\004\372\076\001\002\000\004\344" +
    "\263\001\002\000\004\372\076\001\002\000\012\345\000" +
    "\375\000\u0124\303\u0125\304\001\002\000\004\345\266\001" +
    "\002\000\012\347\000\350\000\u010a\270\u0142\272\001\002" +
    "\000\006\347\uff60\350\uff60\001\002\000\004\372\076\001" +
    "\002\000\006\347\uff57\350\uff57\001\002\000\004\344\273" +
    "\001\002\000\004\372\076\001\002\000\004\345\275\001" +
    "\002\000\006\347\uff59\350\uff59\001\002\000\004\344\277" +
    "\001\002\000\004\372\076\001\002\000\004\345\301\001" +
    "\002\000\012\347\000\350\000\u010a\270\u0142\272\001\002" +
    "\000\006\347\uff58\350\uff58\001\002\000\006\345\uff5c\375" +
    "\uff5c\001\002\000\006\345\uff5b\375\uff5b\001\002\000\006" +
    "\345\uff5a\375\uff5a\001\002\000\006\345\000\375\307\001" +
    "\002\000\004\372\076\001\002\000\004\345\uff5d\001\002" +
    "\000\004\345\uff5f\001\002\000\004\345\uff5e\001\002\000" +
    "\004\344\315\001\002\000\006\347\uff76\350\uff76\001\002" +
    "\000\026\372\076\u010b\323\u0110\325\u0128\331\u0133\316\u0135" +
    "\333\u0137\327\u0138\330\u0139\326\u013f\322\001\002\000\004" +
    "\344\u015e\001\002\000\012\345\000\347\000\350\000\375" +
    "\u015a\001\002\000\012\345\uff1f\347\uff1f\350\uff1f\375\uff1f" +
    "\001\002\000\012\345\uff4a\347\uff4a\350\uff4a\375\uff4a\001" +
    "\002\000\034\344\373\345\000\347\000\350\000\375\000" +
    "\u010b\000\u0110\000\u0128\000\u0133\000\u0135\000\u0137\000\u0138" +
    "\000\u013f\000\001\002\000\032\345\uff2d\347\uff2d\350\uff2d" +
    "\375\uff2d\u010b\uff2d\u0110\uff2d\u0128\uff2d\u0133\uff2d\u0135\uff2d\u0137" +
    "\uff2d\u0138\uff2d\u013f\uff2d\001\002\000\054\340\u0132\370\u011f" +
    "\u013d\u012c\u0145\u0122\u0146\u0127\u0147\u012f\u0148\u0121\u0149\u0129\u014a" +
    "\u0124\u014b\u0120\u014c\u0125\u014d\u012d\u014e\u012b\u014f\u011e\u0150\u012e" +
    "\u0151\u0128\u0152\u011d\u0153\u0131\u0154\u012a\u0155\u0123\u0156\u0130\001" +
    "\002\000\016\355\071\366\072\367\061\371\064\u010b\065" +
    "\u0165\055\001\002\000\004\372\076\001\002\000\004\u010b" +
    "\u0119\001\002\000\004\344\377\001\002\000\004\u0134\353" +
    "\001\002\000\004\345\345\001\002\000\004\u0134\334\001" +
    "\002\000\004\344\335\001\002\000\004\372\076\001\002" +
    "\000\004\345\337\001\002\000\004\u0136\340\001\002\000" +
    "\004\372\076\001\002\000\004\344\342\001\002\000\004" +
    "\372\076\001\002\000\004\345\344\001\002\000\032\345" +
    "\uff2a\347\uff2a\350\uff2a\375\uff2a\u010b\uff2a\u0110\uff2a\u0128\uff2a" +
    "\u0133\uff2a\u0135\uff2a\u0137\uff2a\u0138\uff2a\u013f\uff2a\001\002\000" +
    "\010\347\000\350\000\u010a\347\001\002\000\006\347\uff50" +
    "\350\uff50\001\002\000\006\372\076\u0128\351\001\002\000" +
    "\006\347\uff4d\350\uff4d\001\002\000\006\347\uff4e\350\uff4e" +
    "\001\002\000\006\347\uff4f\350\uff4f\001\002\000\030\344" +
    "\000\u010b\323\u0110\325\u0128\331\u0133\316\u0135\333\u0137\327" +
    "\u0138\330\u013f\355\u0140\246\u0141\254\001\002\000\032\345" +
    "\uff23\347\uff23\350\uff23\375\uff23\u010b\uff23\u0110\uff23\u0128\uff23" +
    "\u0133\uff23\u0135\uff23\u0137\uff23\u0138\uff23\u013f\uff23\001\002\000" +
    "\034\344\373\345\000\347\000\350\000\375\000\u010b\000" +
    "\u0110\000\u0128\000\u0133\000\u0135\000\u0137\000\u0138\000\u013f" +
    "\000\001\002\000\004\344\uff61\001\002\000\032\345\uff2b" +
    "\347\uff2b\350\uff2b\375\uff2b\u010b\uff2b\u0110\uff2b\u0128\uff2b\u0133" +
    "\uff2b\u0135\uff2b\u0137\uff2b\u0138\uff2b\u013f\uff2b\001\002\000\004" +
    "\344\361\001\002\000\004\372\076\001\002\000\012\345" +
    "\000\375\213\u0124\000\u0125\000\001\002\000\010\345\000" +
    "\u0124\364\u0125\365\001\002\000\016\345\ufedc\347\ufedc\350" +
    "\ufedc\375\ufedc\u0123\ufedc\u017e\ufedc\001\002\000\016\345\ufedb" +
    "\347\ufedb\350\ufedb\375\ufedb\u0123\ufedb\u017e\ufedb\001\002\000" +
    "\016\345\ufeda\347\ufeda\350\ufeda\375\ufeda\u0123\ufeda\u017e\ufeda" +
    "\001\002\000\004\345\370\001\002\000\032\345\uff24\347" +
    "\uff24\350\uff24\375\uff24\u010b\uff24\u0110\uff24\u0128\uff24\u0133\uff24" +
    "\u0135\uff24\u0137\uff24\u0138\uff24\u013f\uff24\001\002\000\032\345" +
    "\uff2c\347\uff2c\350\uff2c\375\uff2c\u010b\uff2c\u0110\uff2c\u0128\uff2c" +
    "\u0133\uff2c\u0135\uff2c\u0137\uff2c\u0138\uff2c\u013f\uff2c\001\002\000" +
    "\032\345\uff25\347\uff25\350\uff25\375\uff25\u010b\uff25\u0110\uff25" +
    "\u0128\uff25\u0133\uff25\u0135\uff25\u0137\uff25\u0138\uff25\u013f\uff25\001" +
    "\002\000\004\372\076\001\002\000\006\345\000\375\213" +
    "\001\002\000\004\345\376\001\002\000\032\345\uff26\347" +
    "\uff26\350\uff26\375\uff26\u010b\uff26\u0110\uff26\u0128\uff26\u0133\uff26" +
    "\u0135\uff26\u0137\uff26\u0138\uff26\u013f\uff26\001\002\000\006\345" +
    "\000\372\076\001\002\000\004\345\u0118\001\002\000\024" +
    "\356\u0104\357\u0107\360\u0105\361\u010a\362\u010b\364\u010c\365" +
    "\u0108\373\u0109\u013c\u010d\001\002\000\022\345\ufe8e\347\ufe8e" +
    "\350\ufe8e\352\ufe8e\u0120\ufe8e\u0122\ufe8e\u0123\ufe8e\u017e\ufe8e\001" +
    "\002\000\004\345\uff20\001\002\000\022\344\ufe85\355\ufe85" +
    "\366\ufe85\367\ufe85\371\ufe85\372\ufe85\u010b\ufe85\u0165\ufe85\001" +
    "\002\000\022\344\ufe83\355\ufe83\366\ufe83\367\ufe83\371\ufe83" +
    "\372\ufe83\u010b\ufe83\u0165\ufe83\001\002\000\016\355\071\366" +
    "\072\367\061\371\064\u010b\065\u0165\055\001\002\000\022" +
    "\344\ufe84\355\ufe84\366\ufe84\367\ufe84\371\ufe84\372\ufe84\u010b" +
    "\ufe84\u0165\ufe84\001\002\000\006\366\072\367\061\001\002" +
    "\000\022\344\ufe7e\355\ufe7e\366\ufe7e\367\ufe7e\371\ufe7e\372" +
    "\ufe7e\u010b\ufe7e\u0165\ufe7e\001\002\000\022\344\ufe82\355\ufe82" +
    "\366\ufe82\367\ufe82\371\ufe82\372\ufe82\u010b\ufe82\u0165\ufe82\001" +
    "\002\000\022\344\ufe81\355\ufe81\366\ufe81\367\ufe81\371\ufe81" +
    "\372\ufe81\u010b\ufe81\u0165\ufe81\001\002\000\022\344\ufe80\355" +
    "\ufe80\366\ufe80\367\ufe80\371\ufe80\372\ufe80\u010b\ufe80\u0165\ufe80" +
    "\001\002\000\022\344\ufe7d\355\ufe7d\366\ufe7d\367\ufe7d\371" +
    "\ufe7d\372\ufe7d\u010b\ufe7d\u0165\ufe7d\001\002\000\004\353\u010f" +
    "\001\002\000\004\366\u0110\001\002\000\022\344\ufe7f\355" +
    "\ufe7f\366\ufe7f\367\ufe7f\371\ufe7f\372\ufe7f\u010b\ufe7f\u0165\ufe7f" +
    "\001\002\000\026\345\000\347\000\350\000\352\000\353" +
    "\u0113\354\u0116\u0120\000\u0122\000\u0123\000\u017e\000\001\002" +
    "\000\022\345\ufe8d\347\ufe8d\350\ufe8d\352\ufe8d\u0120\ufe8d\u0122" +
    "\ufe8d\u0123\ufe8d\u017e\ufe8d\001\002\000\036\345\ufe8c\347\ufe8c" +
    "\350\ufe8c\352\ufe8c\372\ufe8c\u0113\ufe8c\u0114\ufe8c\u0115\ufe8c\u0116" +
    "\ufe8c\u0117\ufe8c\u0120\ufe8c\u0122\ufe8c\u0123\ufe8c\u017e\ufe8c\001\002" +
    "\000\024\345\000\347\000\350\000\352\000\372\076\u0120" +
    "\000\u0122\000\u0123\000\u017e\000\001\002\000\022\345\ufe8f" +
    "\347\ufe8f\350\ufe8f\352\ufe8f\u0120\ufe8f\u0122\ufe8f\u0123\ufe8f\u017e" +
    "\ufe8f\001\002\000\036\345\ufe8b\347\ufe8b\350\ufe8b\352\ufe8b" +
    "\372\ufe8b\u0113\ufe8b\u0114\ufe8b\u0115\ufe8b\u0116\ufe8b\u0117\ufe8b\u0120" +
    "\ufe8b\u0122\ufe8b\u0123\ufe8b\u017e\ufe8b\001\002\000\022\345\ufe90" +
    "\347\ufe90\350\ufe90\352\ufe90\u0120\ufe90\u0122\ufe90\u0123\ufe90\u017e" +
    "\ufe90\001\002\000\032\345\uff28\347\uff28\350\uff28\375\uff28" +
    "\u010b\uff28\u0110\uff28\u0128\uff28\u0133\uff28\u0135\uff28\u0137\uff28\u0138" +
    "\uff28\u013f\uff28\001\002\000\032\345\uff29\347\uff29\350\uff29" +
    "\375\uff29\u010b\uff29\u0110\uff29\u0128\uff29\u0133\uff29\u0135\uff29\u0137" +
    "\uff29\u0138\uff29\u013f\uff29\001\002\000\022\u010b\323\u0110\325" +
    "\u0128\331\u0133\316\u0135\333\u0137\327\u0138\330\u013f\322\001" +
    "\002\000\012\345\uff1e\347\uff1e\350\uff1e\375\uff1e\001\002" +
    "\000\032\345\uff27\347\uff27\350\uff27\375\uff27\u010b\uff27\u0110" +
    "\uff27\u0128\uff27\u0133\uff27\u0135\uff27\u0137\uff27\u0138\uff27\u013f\uff27" +
    "\001\002\000\050\345\uff37\347\uff37\350\uff37\375\uff37\u010b" +
    "\uff37\u0110\uff37\u0118\uff37\u0128\uff37\u012a\uff37\u0133\uff37\u0135\uff37" +
    "\u0137\uff37\u0138\uff37\u013f\uff37\u0144\uff37\u0166\uff37\u0167\uff37\u0168" +
    "\uff37\u016c\uff37\001\002\000\050\345\uff3b\347\uff3b\350\uff3b" +
    "\375\uff3b\u010b\uff3b\u0110\uff3b\u0118\uff3b\u0128\uff3b\u012a\uff3b\u0133" +
    "\uff3b\u0135\uff3b\u0137\uff3b\u0138\uff3b\u013f\uff3b\u0144\uff3b\u0166\uff3b" +
    "\u0167\uff3b\u0168\uff3b\u016c\uff3b\001\002\000\052\344\u0157\345" +
    "\uff34\347\uff34\350\uff34\375\uff34\u010b\uff34\u0110\uff34\u0118\uff34" +
    "\u0128\uff34\u012a\uff34\u0133\uff34\u0135\uff34\u0137\uff34\u0138\uff34\u013f" +
    "\uff34\u0144\uff34\u0166\uff34\u0167\uff34\u0168\uff34\u016c\uff34\001\002" +
    "\000\050\345\uff3f\347\uff3f\350\uff3f\375\uff3f\u010b\uff3f\u0110" +
    "\uff3f\u0118\uff3f\u0128\uff3f\u012a\uff3f\u0133\uff3f\u0135\uff3f\u0137\uff3f" +
    "\u0138\uff3f\u013f\uff3f\u0144\uff3f\u0166\uff3f\u0167\uff3f\u0168\uff3f\u016c" +
    "\uff3f\001\002\000\050\345\uff43\347\uff43\350\uff43\375\uff43" +
    "\u010b\uff43\u0110\uff43\u0118\uff43\u0128\uff43\u012a\uff43\u0133\uff43\u0135" +
    "\uff43\u0137\uff43\u0138\uff43\u013f\uff43\u0144\uff43\u0166\uff43\u0167\uff43" +
    "\u0168\uff43\u016c\uff43\001\002\000\004\344\u0154\001\002\000" +
    "\004\344\u014f\001\002\000\050\345\uff40\347\uff40\350\uff40" +
    "\375\uff40\u010b\uff40\u0110\uff40\u0118\uff40\u0128\uff40\u012a\uff40\u0133" +
    "\uff40\u0135\uff40\u0137\uff40\u0138\uff40\u013f\uff40\u0144\uff40\u0166\uff40" +
    "\u0167\uff40\u0168\uff40\u016c\uff40\001\002\000\050\345\uff3e\347" +
    "\uff3e\350\uff3e\375\uff3e\u010b\uff3e\u0110\uff3e\u0118\uff3e\u0128\uff3e" +
    "\u012a\uff3e\u0133\uff3e\u0135\uff3e\u0137\uff3e\u0138\uff3e\u013f\uff3e\u0144" +
    "\uff3e\u0166\uff3e\u0167\uff3e\u0168\uff3e\u016c\uff3e\001\002\000\032" +
    "\345\000\347\000\350\000\375\000\u010b\323\u0110\325\u0128" +
    "\331\u0133\316\u0135\333\u0137\327\u0138\330\u013f\322\001\002" +
    "\000\004\344\u0146\001\002\000\004\344\u0143\001\002\000" +
    "\052\344\u0140\345\uff42\347\uff42\350\uff42\375\uff42\u010b\uff42" +
    "\u0110\uff42\u0118\uff42\u0128\uff42\u012a\uff42\u0133\uff42\u0135\uff42\u0137" +
    "\uff42\u0138\uff42\u013f\uff42\u0144\uff42\u0166\uff42\u0167\uff42\u0168\uff42" +
    "\u016c\uff42\001\002\000\050\345\uff35\347\uff35\350\uff35\375" +
    "\uff35\u010b\uff35\u0110\uff35\u0118\uff35\u0128\uff35\u012a\uff35\u0133\uff35" +
    "\u0135\uff35\u0137\uff35\u0138\uff35\u013f\uff35\u0144\uff35\u0166\uff35\u0167" +
    "\uff35\u0168\uff35\u016c\uff35\001\002\000\050\345\uff3c\347\uff3c" +
    "\350\uff3c\375\uff3c\u010b\uff3c\u0110\uff3c\u0118\uff3c\u0128\uff3c\u012a" +
    "\uff3c\u0133\uff3c\u0135\uff3c\u0137\uff3c\u0138\uff3c\u013f\uff3c\u0144\uff3c" +
    "\u0166\uff3c\u0167\uff3c\u0168\uff3c\u016c\uff3c\001\002\000\004\344" +
    "\u013b\001\002\000\050\345\uff3d\347\uff3d\350\uff3d\375\uff3d" +
    "\u010b\uff3d\u0110\uff3d\u0118\uff3d\u0128\uff3d\u012a\uff3d\u0133\uff3d\u0135" +
    "\uff3d\u0137\uff3d\u0138\uff3d\u013f\uff3d\u0144\uff3d\u0166\uff3d\u0167\uff3d" +
    "\u0168\uff3d\u016c\uff3d\001\002\000\050\345\uff3a\347\uff3a\350" +
    "\uff3a\375\uff3a\u010b\uff3a\u0110\uff3a\u0118\uff3a\u0128\uff3a\u012a\uff3a" +
    "\u0133\uff3a\u0135\uff3a\u0137\uff3a\u0138\uff3a\u013f\uff3a\u0144\uff3a\u0166" +
    "\uff3a\u0167\uff3a\u0168\uff3a\u016c\uff3a\001\002\000\050\345\uff44" +
    "\347\uff44\350\uff44\375\uff44\u010b\uff44\u0110\uff44\u0118\uff44\u0128" +
    "\uff44\u012a\uff44\u0133\uff44\u0135\uff44\u0137\uff44\u0138\uff44\u013f\uff44" +
    "\u0144\uff44\u0166\uff44\u0167\uff44\u0168\uff44\u016c\uff44\001\002\000" +
    "\004\344\u0136\001\002\000\050\345\uff36\347\uff36\350\uff36" +
    "\375\uff36\u010b\uff36\u0110\uff36\u0118\uff36\u0128\uff36\u012a\uff36\u0133" +
    "\uff36\u0135\uff36\u0137\uff36\u0138\uff36\u013f\uff36\u0144\uff36\u0166\uff36" +
    "\u0167\uff36\u0168\uff36\u016c\uff36\001\002\000\004\344\u0133\001" +
    "\002\000\010\366\072\367\061\371\064\001\002\000\004" +
    "\345\u0135\001\002\000\050\345\uff45\347\uff45\350\uff45\375" +
    "\uff45\u010b\uff45\u0110\uff45\u0118\uff45\u0128\uff45\u012a\uff45\u0133\uff45" +
    "\u0135\uff45\u0137\uff45\u0138\uff45\u013f\uff45\u0144\uff45\u0166\uff45\u0167" +
    "\uff45\u0168\uff45\u016c\uff45\001\002\000\010\366\072\367\061" +
    "\371\064\001\002\000\004\375\u0138\001\002\000\010\366" +
    "\072\367\061\371\064\001\002\000\004\345\u013a\001\002" +
    "\000\050\345\uff31\347\uff31\350\uff31\375\uff31\u010b\uff31\u0110" +
    "\uff31\u0118\uff31\u0128\uff31\u012a\uff31\u0133\uff31\u0135\uff31\u0137\uff31" +
    "\u0138\uff31\u013f\uff31\u0144\uff31\u0166\uff31\u0167\uff31\u0168\uff31\u016c" +
    "\uff31\001\002\000\010\366\072\367\061\371\064\001\002" +
    "\000\004\375\u013d\001\002\000\010\366\072\367\061\371" +
    "\064\001\002\000\004\345\u013f\001\002\000\050\345\uff32" +
    "\347\uff32\350\uff32\375\uff32\u010b\uff32\u0110\uff32\u0118\uff32\u0128" +
    "\uff32\u012a\uff32\u0133\uff32\u0135\uff32\u0137\uff32\u0138\uff32\u013f\uff32" +
    "\u0144\uff32\u0166\uff32\u0167\uff32\u0168\uff32\u016c\uff32\001\002\000" +
    "\004\u0117\u0141\001\002\000\004\345\u0142\001\002\000\050" +
    "\345\uff41\347\uff41\350\uff41\375\uff41\u010b\uff41\u0110\uff41\u0118" +
    "\uff41\u0128\uff41\u012a\uff41\u0133\uff41\u0135\uff41\u0137\uff41\u0138\uff41" +
    "\u013f\uff41\u0144\uff41\u0166\uff41\u0167\uff41\u0168\uff41\u016c\uff41\001" +
    "\002\000\010\366\072\367\061\371\064\001\002\000\004" +
    "\345\u0145\001\002\000\050\345\uff39\347\uff39\350\uff39\375" +
    "\uff39\u010b\uff39\u0110\uff39\u0118\uff39\u0128\uff39\u012a\uff39\u0133\uff39" +
    "\u0135\uff39\u0137\uff39\u0138\uff39\u013f\uff39\u0144\uff39\u0166\uff39\u0167" +
    "\uff39\u0168\uff39\u016c\uff39\001\002\000\010\366\072\367\061" +
    "\371\064\001\002\000\004\345\u0148\001\002\000\050\345" +
    "\uff46\347\uff46\350\uff46\375\uff46\u010b\uff46\u0110\uff46\u0118\uff46" +
    "\u0128\uff46\u012a\uff46\u0133\uff46\u0135\uff46\u0137\uff46\u0138\uff46\u013f" +
    "\uff46\u0144\uff46\u0166\uff46\u0167\uff46\u0168\uff46\u016c\uff46\001\002" +
    "\000\012\345\uff4b\347\uff4b\350\uff4b\375\uff4b\001\002\000" +
    "\032\345\000\347\000\350\000\375\000\u010b\323\u0110\325" +
    "\u0128\331\u0133\316\u0135\333\u0137\327\u0138\330\u013f\322\001" +
    "\002\000\012\345\uff2f\347\uff2f\350\uff2f\375\uff2f\001\002" +
    "\000\012\345\uff30\347\uff30\350\uff30\375\uff30\001\002\000" +
    "\012\345\uff22\347\uff22\350\uff22\375\uff22\001\002\000\012" +
    "\345\uff21\347\uff21\350\uff21\375\uff21\001\002\000\010\366" +
    "\072\367\061\371\064\001\002\000\004\375\u0151\001\002" +
    "\000\010\366\072\367\061\371\064\001\002\000\004\345" +
    "\u0153\001\002\000\050\345\uff33\347\uff33\350\uff33\375\uff33" +
    "\u010b\uff33\u0110\uff33\u0118\uff33\u0128\uff33\u012a\uff33\u0133\uff33\u0135" +
    "\uff33\u0137\uff33\u0138\uff33\u013f\uff33\u0144\uff33\u0166\uff33\u0167\uff33" +
    "\u0168\uff33\u016c\uff33\001\002\000\010\366\072\367\061\371" +
    "\064\001\002\000\004\345\u0156\001\002\000\050\345\uff47" +
    "\347\uff47\350\uff47\375\uff47\u010b\uff47\u0110\uff47\u0118\uff47\u0128" +
    "\uff47\u012a\uff47\u0133\uff47\u0135\uff47\u0137\uff47\u0138\uff47\u013f\uff47" +
    "\u0144\uff47\u0166\uff47\u0167\uff47\u0168\uff47\u016c\uff47\001\002\000" +
    "\010\366\072\367\061\371\064\001\002\000\004\345\u0159" +
    "\001\002\000\050\345\uff38\347\uff38\350\uff38\375\uff38\u010b" +
    "\uff38\u0110\uff38\u0118\uff38\u0128\uff38\u012a\uff38\u0133\uff38\u0135\uff38" +
    "\u0137\uff38\u0138\uff38\u013f\uff38\u0144\uff38\u0166\uff38\u0167\uff38\u0168" +
    "\uff38\u016c\uff38\001\002\000\026\372\076\u010b\323\u0110\325" +
    "\u0128\331\u0133\316\u0135\333\u0137\327\u0138\330\u0139\326\u013f" +
    "\322\001\002\000\010\345\uff48\347\uff48\350\uff48\001\002" +
    "\000\010\345\uff4c\347\uff4c\350\uff4c\001\002\000\010\345" +
    "\uff49\347\uff49\350\uff49\001\002\000\006\366\072\367\061" +
    "\001\002\000\004\375\u0160\001\002\000\006\366\072\367" +
    "\061\001\002\000\004\345\u0162\001\002\000\032\345\uff2e" +
    "\347\uff2e\350\uff2e\375\uff2e\u010b\uff2e\u0110\uff2e\u0128\uff2e\u0133" +
    "\uff2e\u0135\uff2e\u0137\uff2e\u0138\uff2e\u013f\uff2e\001\002\000\006" +
    "\344\u0167\u0118\000\001\002\000\006\347\uff74\350\uff74\001" +
    "\002\000\004\u0118\u016c\001\002\000\004\u0118\uff54\001\002" +
    "\000\004\372\076\001\002\000\006\345\000\375\213\001" +
    "\002\000\004\345\u016a\001\002\000\004\u0118\uff55\001\002" +
    "\000\004\345\uff53\001\002\000\004\u0111\027\001\002\000" +
    "\006\347\uff56\350\uff56\001\002\000\004\372\076\001\002" +
    "\000\004\372\uffb6\001\002\000\004\372\uffb7\001\002\000" +
    "\004\372\076\001\002\000\004\344\u0173\001\002\000\006" +
    "\345\000\u0165\u0176\001\002\000\004\345\u0183\001\002\000" +
    "\012\345\uffb4\u0118\uffb4\u012a\uffb4\u0144\uffb4\001\002\000\004" +
    "\372\u0178\001\002\000\012\345\uffb5\u0118\uffb5\u012a\uffb5\u0144" +
    "\uffb5\001\002\000\054\340\u0132\370\u011f\u013d\u012c\u0145\u0122" +
    "\u0146\u0127\u0147\u012f\u0148\u0121\u0149\u0129\u014a\u0124\u014b\u0120\u014c" +
    "\u0125\u014d\u012d\u014e\u012b\u014f\u011e\u0150\u012e\u0151\u0128\u0152\u011d" +
    "\u0153\u0131\u0154\u012a\u0155\u0123\u0156\u0130\001\002\000\022\345" +
    "\000\375\000\u0118\000\u012a\000\u0144\000\u0166\u017a\u0167\u017b" +
    "\u0168\u017e\001\002\000\014\345\uffb0\375\uffb0\u0118\uffb0\u012a" +
    "\uffb0\u0144\uffb0\001\002\000\014\345\uffaf\375\uffaf\u0118\uffaf" +
    "\u012a\uffaf\u0144\uffaf\001\002\000\014\345\000\375\u017f\u0118" +
    "\000\u012a\000\u0144\000\001\002\000\014\345\uffad\375\uffad" +
    "\u0118\uffad\u012a\uffad\u0144\uffad\001\002\000\014\345\uffae\375" +
    "\uffae\u0118\uffae\u012a\uffae\u0144\uffae\001\002\000\004\u0165\u0176" +
    "\001\002\000\012\345\uffb1\u0118\uffb1\u012a\uffb1\u0144\uffb1\001" +
    "\002\000\012\345\uffb3\u0118\uffb3\u012a\uffb3\u0144\uffb3\001\002" +
    "\000\012\345\uffb2\u0118\uffb2\u012a\uffb2\u0144\uffb2\001\002\000" +
    "\004\u0171\u0184\001\002\000\060\340\u0132\370\u011f\u0104\u0186" +
    "\u013d\u012c\u0145\u0122\u0146\u0127\u0147\u012f\u0148\u0121\u0149\u0129\u014a" +
    "\u0124\u014b\u0120\u014c\u0125\u014d\u012d\u014e\u012b\u014f\u011e\u0150\u012e" +
    "\u0151\u0128\u0152\u011d\u0153\u0131\u0154\u012a\u0155\u0123\u0156\u0130\u0165" +
    "\055\001\002\000\010\u0118\uffd0\u012a\uffd0\u016c\uffd0\001\002" +
    "\000\010\u0118\uffce\u012a\uffce\u016c\uffce\001\002\000\004\u0104" +
    "\u019f\001\002\000\010\u0118\000\u012a\u0189\u016c\000\001\002" +
    "\000\010\u0169\u019a\u016a\u019c\u016b\u0199\001\002\000\010\u0118" +
    "\uffab\u0144\uffab\u016c\uffab\001\002\000\006\u0118\u018d\u016c\000" +
    "\001\002\000\004\u016c\u018f\001\002\000\004\u016c\uffd2\001" +
    "\002\000\004\u016c\uffd1\001\002\000\050\003\032\341\020" +
    "\374\052\u0102\017\u0103\011\u0105\042\u010d\040\u0111\027\u0126" +
    "\041\u0132\023\u0157\022\u016b\016\u016c\025\u016e\036\u016f\047" +
    "\u0172\000\u0176\050\u0177\051\u0178\037\001\002\000\004\u0172" +
    "\uffc9\001\002\000\004\u0172\u0193\001\002\000\050\003\032" +
    "\341\020\374\052\u0102\017\u0103\011\u0105\042\u010d\040\u0111" +
    "\027\u0126\041\u0132\023\u0157\022\u016b\016\u016c\025\u016e\036" +
    "\u016f\047\u0172\uffca\u0176\050\u0177\051\u0178\037\001\002\000" +
    "\022\344\073\355\071\366\072\367\061\371\064\372\076" +
    "\u010b\065\u0165\055\001\002\000\014\347\156\350\157\376" +
    "\103\377\101\u016d\000\001\002\000\004\u016d\u0198\001\002" +
    "\000\004\u016d\uffcb\001\002\000\004\u016d\uffcc\001\002\000" +
    "\006\347\uffd3\350\uffd3\001\002\000\004\u0118\u019d\001\002" +
    "\000\010\u0118\uffaa\u0144\uffaa\u016c\uffaa\001\002\000\010\u0118" +
    "\uffac\u0144\uffac\u016c\uffac\001\002\000\010\u0118\uffa9\u0144\uffa9" +
    "\u016c\uffa9\001\002\000\004\372\u019e\001\002\000\010\u0118" +
    "\uffa8\u0144\uffa8\u016c\uffa8\001\002\000\004\344\u01a0\001\002" +
    "\000\026\372\076\u010b\323\u0110\325\u0128\331\u0133\316\u0135" +
    "\333\u0137\327\u0138\330\u0139\326\u013f\322\001\002\000\004" +
    "\345\u01a2\001\002\000\010\u0118\uffcf\u012a\uffcf\u016c\uffcf\001" +
    "\002\000\012\u0118\000\u012a\000\u0144\000\u0165\u0176\001\002" +
    "\000\010\u0118\000\u012a\u0189\u0144\000\001\002\000\006\u0118" +
    "\000\u0144\u01a6\001\002\000\004\u013b\u01b1\001\002\000\004" +
    "\u0118\uffa6\001\002\000\004\u0118\u01a9\001\002\000\046\003" +
    "\000\341\000\374\000\u0102\000\u0103\000\u0105\000\u010d\000" +
    "\u0111\000\u0126\000\u0132\000\u0157\000\u016b\000\u016c\u01aa\u016e" +
    "\000\u016f\000\u0176\000\u0177\000\u0178\000\001\002\000\046" +
    "\003\uffa5\341\uffa5\374\uffa5\u0102\uffa5\u0103\uffa5\u0105\uffa5\u010d" +
    "\uffa5\u0111\uffa5\u0126\uffa5\u0132\uffa5\u0157\uffa5\u016b\uffa5\u016c\uffa5" +
    "\u016e\uffa5\u016f\uffa5\u0176\uffa5\u0177\uffa5\u0178\uffa5\001\002\000" +
    "\046\003\032\341\020\374\052\u0102\017\u0103\011\u0105\042" +
    "\u010d\040\u0111\027\u0126\041\u0132\023\u0157\022\u016b\016\u016c" +
    "\025\u016e\036\u016f\047\u0176\050\u0177\051\u0178\037\001\002" +
    "\000\046\003\uffa4\341\uffa4\374\uffa4\u0102\uffa4\u0103\uffa4\u0105" +
    "\uffa4\u010d\uffa4\u0111\uffa4\u0126\uffa4\u0132\uffa4\u0157\uffa4\u016b\uffa4" +
    "\u016c\uffa4\u016e\uffa4\u016f\uffa4\u0176\uffa4\u0177\uffa4\u0178\uffa4\001" +
    "\002\000\054\003\032\341\020\347\000\350\000\374\052" +
    "\u0102\017\u0103\011\u0105\042\u010d\040\u0111\027\u0126\041\u0132" +
    "\023\u0157\022\u016b\016\u016c\025\u016d\u01b0\u016e\036\u016f\047" +
    "\u0176\050\u0177\051\u0178\037\001\002\000\006\347\uffa2\350" +
    "\uffa2\001\002\000\006\347\uffba\350\uffba\001\002\000\006" +
    "\347\uffa3\350\uffa3\001\002\000\004\u0118\uffa7\001\002\000" +
    "\006\347\uff75\350\uff75\001\002\000\010\347\uff52\350\uff52" +
    "\u0144\u01b4\001\002\000\004\u0143\u01b5\001\002\000\004\372" +
    "\u01b6\001\002\000\006\347\uff51\350\uff51\001\002\000\014" +
    "\347\000\350\000\u010a\u01bb\u0129\u01b9\u012a\u01bc\001\002\000" +
    "\006\347\uff78\350\uff78\001\002\000\004\372\u01e1\001\002" +
    "\000\006\347\uff73\350\uff73\001\002\000\004\u0128\u01be\001" +
    "\002\000\006\347\uff70\350\uff70\001\002\000\006\347\uff6f" +
    "\350\uff6f\001\002\000\004\344\u01bf\001\002\000\016\345" +
    "\000\u012b\u01c3\u012c\u01c4\u012d\u01c5\u012e\u01c0\u012f\u01c6\001\002" +
    "\000\004\373\u01de\001\002\000\004\345\u01d6\001\002\000" +
    "\004\345\uff69\001\002\000\004\373\u01d3\001\002\000\004" +
    "\373\u01d0\001\002\000\004\373\u01cd\001\002\000\004\373" +
    "\u01c7\001\002\000\004\366\u01c8\001\002\000\006\345\000" +
    "\375\u01c9\001\002\000\016\345\000\u012b\u01c3\u012c\u01c4\u012d" +
    "\u01c5\u012e\u01c0\u012f\u01c6\001\002\000\004\345\uff6a\001\002" +
    "\000\004\345\uff67\001\002\000\004\345\uff68\001\002\000" +
    "\004\355\u01ce\001\002\000\006\345\000\375\u01c9\001\002" +
    "\000\004\345\uff6c\001\002\000\004\355\u01d1\001\002\000" +
    "\006\345\000\375\u01c9\001\002\000\004\345\uff6d\001\002" +
    "\000\004\355\u01d4\001\002\000\006\345\000\375\u01c9\001" +
    "\002\000\004\345\uff6e\001\002\000\010\347\000\350\000" +
    "\375\u01d7\001\002\000\004\344\u01da\001\002\000\006\347" +
    "\uff72\350\uff72\001\002\000\006\347\uff65\350\uff65\001\002" +
    "\000\016\345\000\u012b\u01c3\u012c\u01c4\u012d\u01c5\u012e\u01c0\u012f" +
    "\u01c6\001\002\000\004\345\u01dc\001\002\000\010\347\000" +
    "\350\000\375\u01d7\001\002\000\006\347\uff66\350\uff66\001" +
    "\002\000\004\355\u01df\001\002\000\006\345\000\375\u01c9" +
    "\001\002\000\004\345\uff6b\001\002\000\006\347\uff71\350" +
    "\uff71\001\002\000\004\372\076\001\002\000\004\372\ufed4" +
    "\001\002\000\004\372\ufed5\001\002\000\010\344\u01e8\u010e" +
    "\000\u0110\000\001\002\000\006\u010e\u01f2\u0110\u01f1\001\002" +
    "\000\006\u010e\ufed2\u0110\ufed2\001\002\000\004\372\u01e9\001" +
    "\002\000\006\345\000\375\u01ed\001\002\000\004\345\u01eb" +
    "\001\002\000\006\u010e\ufed3\u0110\ufed3\001\002\000\004\345" +
    "\ufed1\001\002\000\004\372\u01ef\001\002\000\004\345\ufecf" +
    "\001\002\000\006\345\000\375\u01ed\001\002\000\004\345" +
    "\ufed0\001\002\000\004\u010e\u0201\001\002\000\004\344\u01f4" +
    "\001\002\000\006\347\ufed7\350\ufed7\001\002\000\016\355" +
    "\071\366\072\367\061\371\064\u010b\065\u0165\055\001\002" +
    "\000\006\345\000\375\u01fc\001\002\000\004\345\u01f7\001" +
    "\002\000\010\347\000\350\000\375\u01f8\001\002\000\004" +
    "\344\u01f4\001\002\000\006\347\ufece\350\ufece\001\002\000" +
    "\006\347\ufec9\350\ufec9\001\002\000\006\347\ufeca\350\ufeca" +
    "\001\002\000\016\355\071\366\072\367\061\371\064\u010b" +
    "\065\u0165\055\001\002\000\004\345\ufecd\001\002\000\004" +
    "\345\ufecb\001\002\000\006\345\000\375\u01fc\001\002\000" +
    "\004\345\ufecc\001\002\000\006\347\ufed6\350\ufed6\001\002" +
    "\000\004\372\076\001\002\000\060\002\uffde\003\uffde\341" +
    "\uffde\347\uffde\350\uffde\374\uffde\u0102\uffde\u0103\uffde\u0105\uffde" +
    "\u010d\uffde\u0111\uffde\u0126\uffde\u0132\uffde\u0157\uffde\u016b\uffde\u016c" +
    "\uffde\u016d\uffde\u016e\uffde\u016f\uffde\u0172\uffde\u0176\uffde\u0177\uffde" +
    "\u0178\uffde\001\002\000\010\u0179\000\u017a\u020e\u017b\u0210\001" +
    "\002\000\054\340\u0132\370\u011f\u013d\u012c\u0145\u0122\u0146\u0127" +
    "\u0147\u012f\u0148\u0121\u0149\u0129\u014a\u0124\u014b\u0120\u014c\u0125\u014d" +
    "\u012d\u014e\u012b\u014f\u011e\u0150\u012e\u0151\u0128\u0152\u011d\u0153\u0131" +
    "\u0154\u012a\u0155\u0123\u0156\u0130\001\002\000\010\347\000\350" +
    "\000\375\u0207\001\002\000\004\u0165\055\001\002\000\006" +
    "\347\uffbd\350\uffbd\001\002\000\006\347\uffbb\350\uffbb\001" +
    "\002\000\054\340\u0132\370\u011f\u013d\u012c\u0145\u0122\u0146\u0127" +
    "\u0147\u012f\u0148\u0121\u0149\u0129\u014a\u0124\u014b\u0120\u014c\u0125\u014d" +
    "\u012d\u014e\u012b\u014f\u011e\u0150\u012e\u0151\u0128\u0152\u011d\u0153\u0131" +
    "\u0154\u012a\u0155\u0123\u0156\u0130\001\002\000\010\347\000\350" +
    "\000\375\u0207\001\002\000\006\347\uffbc\350\uffbc\001\002" +
    "\000\004\u0179\u0211\001\002\000\004\u0179\uffe5\001\002\000" +
    "\004\u0179\uffe3\001\002\000\004\u0179\uffe4\001\002\000\004" +
    "\u0144\u0212\001\002\000\004\u0111\027\001\002\000\010\347" +
    "\000\350\000\u017e\u0216\001\002\000\006\347\uffe8\350\uffe8" +
    "\001\002\000\006\347\uffe6\350\uffe6\001\002\000\004\372" +
    "\076\001\002\000\004\u017c\u0218\001\002\000\004\u017d\u0219" +
    "\001\002\000\004\342\u021a\001\002\000\004\372\076\001" +
    "\002\000\010\347\uffe2\350\uffe2\u010f\u021d\001\002\000\006" +
    "\347\uffe7\350\uffe7\001\002\000\004\u0165\055\001\002\000" +
    "\010\347\000\350\000\375\u021f\001\002\000\004\u0165\055" +
    "\001\002\000\006\347\uffdf\350\uffdf\001\002\000\006\347" +
    "\uffe1\350\uffe1\001\002\000\010\347\000\350\000\375\u021f" +
    "\001\002\000\006\347\uffe0\350\uffe0\001\002\000\060\002" +
    "\ufffb\003\ufffb\341\ufffb\347\ufffb\350\ufffb\374\ufffb\u0102\ufffb" +
    "\u0103\ufffb\u0105\ufffb\u010d\ufffb\u0111\ufffb\u0126\ufffb\u0132\ufffb\u0157" +
    "\ufffb\u016b\ufffb\u016c\ufffb\u016d\ufffb\u016e\ufffb\u016f\ufffb\u0172\ufffb" +
    "\u0176\ufffb\u0177\ufffb\u0178\ufffb\001\002\000\060\002\ufff4\003" +
    "\ufff4\341\ufff4\347\ufff4\350\ufff4\374\ufff4\u0102\ufff4\u0103\ufff4" +
    "\u0105\ufff4\u010d\ufff4\u0111\ufff4\u0126\ufff4\u0132\ufff4\u0157\ufff4\u016b" +
    "\ufff4\u016c\ufff4\u016d\ufff4\u016e\ufff4\u016f\ufff4\u0172\ufff4\u0176\ufff4" +
    "\u0177\ufff4\u0178\ufff4\001\002\000\060\002\ufff1\003\ufff1\341" +
    "\ufff1\347\ufff1\350\ufff1\374\ufff1\u0102\ufff1\u0103\ufff1\u0105\ufff1" +
    "\u010d\ufff1\u0111\ufff1\u0126\ufff1\u0132\ufff1\u0157\ufff1\u016b\ufff1\u016c" +
    "\ufff1\u016d\ufff1\u016e\ufff1\u016f\ufff1\u0172\ufff1\u0176\ufff1\u0177\ufff1" +
    "\u0178\ufff1\001\002\000\060\002\ufff3\003\ufff3\341\ufff3\347" +
    "\ufff3\350\ufff3\374\ufff3\u0102\ufff3\u0103\ufff3\u0105\ufff3\u010d\ufff3" +
    "\u0111\ufff3\u0126\ufff3\u0132\ufff3\u0157\ufff3\u016b\ufff3\u016c\ufff3\u016d" +
    "\ufff3\u016e\ufff3\u016f\ufff3\u0172\ufff3\u0176\ufff3\u0177\ufff3\u0178\ufff3" +
    "\001\002\000\060\002\ufff9\003\ufff9\341\ufff9\347\ufff9\350" +
    "\ufff9\374\ufff9\u0102\ufff9\u0103\ufff9\u0105\ufff9\u010d\ufff9\u0111\ufff9" +
    "\u0126\ufff9\u0132\ufff9\u0157\ufff9\u016b\ufff9\u016c\ufff9\u016d\ufff9\u016e" +
    "\ufff9\u016f\ufff9\u0172\ufff9\u0176\ufff9\u0177\ufff9\u0178\ufff9\001\002" +
    "\000\034\344\uff1a\355\uff1a\366\uff1a\367\uff1a\371\uff1a\372" +
    "\uff1a\u010b\uff1a\u0113\uff1a\u0114\uff1a\u0115\uff1a\u0116\uff1a\u0117\uff1a" +
    "\u0165\uff1a\001\002\000\004\342\uff1c\001\002\000\034\344" +
    "\073\355\071\366\072\367\061\371\064\372\076\u010b\065" +
    "\u0113\u025e\u0114\u025d\u0115\u0260\u0116\u0264\u0117\u0261\u0165\055\001" +
    "\002\000\034\344\uff19\355\uff19\366\uff19\367\uff19\371\uff19" +
    "\372\uff19\u010b\uff19\u0113\uff19\u0114\uff19\u0115\uff19\u0116\uff19\u0117" +
    "\uff19\u0165\uff19\001\002\000\004\342\u0235\001\002\000\010" +
    "\344\u0231\366\072\367\061\001\002\000\034\344\uff17\355" +
    "\uff17\366\uff17\367\uff17\371\uff17\372\uff17\u010b\uff17\u0113\uff17" +
    "\u0114\uff17\u0115\uff17\u0116\uff17\u0117\uff17\u0165\uff17\001\002\000" +
    "\040\342\ufe95\344\ufe95\351\ufe95\355\ufe95\366\ufe95\367\ufe95" +
    "\371\ufe95\372\ufe95\u010b\ufe95\u0113\ufe95\u0114\ufe95\u0115\ufe95\u0116" +
    "\ufe95\u0117\ufe95\u0165\ufe95\001\002\000\006\366\072\367\061" +
    "\001\002\000\034\344\uff18\355\uff18\366\uff18\367\uff18\371" +
    "\uff18\372\uff18\u010b\uff18\u0113\uff18\u0114\uff18\u0115\uff18\u0116\uff18" +
    "\u0117\uff18\u0165\uff18\001\002\000\004\345\u0234\001\002\000" +
    "\040\342\ufe96\344\ufe96\351\ufe96\355\ufe96\366\ufe96\367\ufe96" +
    "\371\ufe96\372\ufe96\u010b\ufe96\u0113\ufe96\u0114\ufe96\u0115\ufe96\u0116" +
    "\ufe96\u0117\ufe96\u0165\ufe96\001\002\000\004\372\076\001\002" +
    "\000\032\347\000\350\000\352\000\u011a\000\u011b\u0243\u011c" +
    "\u0242\u011d\u0244\u011e\u0248\u0120\000\u0122\000\u0123\000\u017e\000" +
    "\001\002\000\040\347\000\350\000\352\000\372\u0239\375" +
    "\000\u0118\u0238\u011a\000\u011b\000\u011c\000\u011d\000\u011e\000" +
    "\u0120\000\u0122\000\u0123\000\u017e\000\001\002\000\006\355" +
    "\u0240\372\u0241\001\002\000\036\347\ufef2\350\ufef2\352\ufef2" +
    "\375\ufef2\u010a\ufef2\u011a\ufef2\u011b\ufef2\u011c\ufef2\u011d\ufef2\u011e" +
    "\ufef2\u0120\ufef2\u0122\ufef2\u0123\ufef2\u017e\ufef2\001\002\000\034" +
    "\347\000\350\000\352\000\375\u023c\u011a\000\u011b\000\u011c" +
    "\000\u011d\000\u011e\000\u0120\000\u0122\000\u0123\000\u017e\000" +
    "\001\002\000\036\347\ufef1\350\ufef1\352\ufef1\375\ufef1\u010a" +
    "\ufef1\u011a\ufef1\u011b\ufef1\u011c\ufef1\u011d\ufef1\u011e\ufef1\u0120\ufef1" +
    "\u0122\ufef1\u0123\ufef1\u017e\ufef1\001\002\000\004\372\076\001" +
    "\002\000\032\347\ufef7\350\ufef7\352\ufef7\u011a\ufef7\u011b\ufef7" +
    "\u011c\ufef7\u011d\ufef7\u011e\ufef7\u0120\ufef7\u0122\ufef7\u0123\ufef7\u017e" +
    "\ufef7\001\002\000\032\347\ufef5\350\ufef5\352\ufef5\u011a\ufef5" +
    "\u011b\ufef5\u011c\ufef5\u011d\ufef5\u011e\ufef5\u0120\ufef5\u0122\ufef5\u0123" +
    "\ufef5\u017e\ufef5\001\002\000\032\347\ufef6\350\ufef6\352\ufef6" +
    "\u011a\ufef6\u011b\ufef6\u011c\ufef6\u011d\ufef6\u011e\ufef6\u0120\ufef6\u0122" +
    "\ufef6\u0123\ufef6\u017e\ufef6\001\002\000\036\347\ufef4\350\ufef4" +
    "\352\ufef4\375\ufef4\u010a\ufef4\u011a\ufef4\u011b\ufef4\u011c\ufef4\u011d" +
    "\ufef4\u011e\ufef4\u0120\ufef4\u0122\ufef4\u0123\ufef4\u017e\ufef4\001\002" +
    "\000\036\347\ufef3\350\ufef3\352\ufef3\375\ufef3\u010a\ufef3\u011a" +
    "\ufef3\u011b\ufef3\u011c\ufef3\u011d\ufef3\u011e\ufef3\u0120\ufef3\u0122\ufef3" +
    "\u0123\ufef3\u017e\ufef3\001\002\000\006\u011a\000\u011f\u024a\001" +
    "\002\000\004\u011a\ufeee\001\002\000\006\u011a\000\u011f\u024a" +
    "\001\002\000\022\347\ufeef\350\ufeef\352\ufeef\u011a\ufeea\u0120" +
    "\ufeef\u0122\ufeef\u0123\ufeef\u017e\ufeef\001\002\000\004\u011a\u0295" +
    "\001\002\000\020\347\000\350\000\352\u024d\u0120\000\u0122" +
    "\000\u0123\000\u017e\000\001\002\000\006\u011a\000\u011f\u024a" +
    "\001\002\000\004\u011a\ufeeb\001\002\000\004\u011a\ufee9\001" +
    "\002\000\004\u011a\ufee8\001\002\000\016\347\000\350\000" +
    "\u0120\u0254\u0122\000\u0123\000\u017e\000\001\002\000\004\372" +
    "\076\001\002\000\020\347\ufe91\350\ufe91\352\ufe91\u0120\ufe91" +
    "\u0122\ufe91\u0123\ufe91\u017e\ufe91\001\002\000\024\356\u0104\357" +
    "\u0107\360\u0105\361\u010a\362\u010b\364\u010c\365\u0108\373\u0109" +
    "\u013c\u010d\001\002\000\022\344\073\355\071\366\072\367" +
    "\061\371\064\372\076\u010b\065\u0165\055\001\002\000\030" +
    "\347\000\350\000\352\000\353\u0113\354\u0116\376\103\377" +
    "\101\u0120\000\u0122\000\u0123\000\u017e\000\001\002\000\020" +
    "\347\ufe92\350\ufe92\352\ufe92\u0120\ufe92\u0122\ufe92\u0123\ufe92\u017e" +
    "\ufe92\001\002\000\014\347\ufee6\350\ufee6\u0122\ufee6\u0123\ufee6" +
    "\u017e\ufee6\001\002\000\004\u0121\u0292\001\002\000\014\347" +
    "\000\350\000\u0122\u0256\u0123\000\u017e\000\001\002\000\016" +
    "\372\076\u0113\u025e\u0114\u025d\u0115\u0260\u0116\u0264\u0117\u0261\001" +
    "\002\000\012\347\ufee4\350\ufee4\u0123\ufee4\u017e\ufee4\001\002" +
    "\000\012\347\000\350\000\u0123\u0259\u017e\000\001\002\000" +
    "\004\u0121\u025c\001\002\000\010\347\uff1d\350\uff1d\u017e\uff1d" +
    "\001\002\000\010\347\ufedd\350\ufedd\u017e\ufedd\001\002\000" +
    "\016\372\076\u0113\u025e\u0114\u025d\u0115\u0260\u0116\u0264\u0117\u0261" +
    "\001\002\000\004\344\u0283\001\002\000\004\344\u0280\001" +
    "\002\000\044\342\uff09\347\uff09\350\uff09\356\uff09\357\uff09" +
    "\360\uff09\361\uff09\362\uff09\364\uff09\365\uff09\373\uff09\375" +
    "\uff09\u0118\uff09\u0124\uff09\u0125\uff09\u013c\uff09\u017e\uff09\001\002" +
    "\000\004\344\u027d\001\002\000\004\344\u027a\001\002\000" +
    "\020\344\u0276\347\000\350\000\375\000\u0124\364\u0125\365" +
    "\u017e\000\001\002\000\016\347\000\350\000\375\000\u0124" +
    "\364\u0125\365\u017e\000\001\002\000\004\344\u0265\001\002" +
    "\000\012\367\u0269\372\000\u0100\u0267\u0112\u0266\001\002\000" +
    "\004\372\uff05\001\002\000\004\345\uff07\001\002\000\004" +
    "\372\076\001\002\000\004\345\uff08\001\002\000\004\345" +
    "\u026c\001\002\000\004\372\uff04\001\002\000\044\342\uff0b" +
    "\347\uff0b\350\uff0b\356\uff0b\357\uff0b\360\uff0b\361\uff0b\362" +
    "\uff0b\364\uff0b\365\uff0b\373\uff0b\375\uff0b\u0118\uff0b\u0124\uff0b" +
    "\u0125\uff0b\u013c\uff0b\u017e\uff0b\001\002\000\004\345\uff06\001" +
    "\002\000\012\347\000\350\000\375\u026f\u017e\000\001\002" +
    "\000\004\372\076\001\002\000\010\347\ufed8\350\ufed8\u017e" +
    "\ufed8\001\002\000\010\347\ufede\350\ufede\u017e\ufede\001\002" +
    "\000\016\347\000\350\000\u0123\000\u0124\364\u0125\365\u017e" +
    "\000\001\002\000\012\347\000\350\000\u0123\u0259\u017e\000" +
    "\001\002\000\010\347\ufed9\350\ufed9\u017e\ufed9\001\002\000" +
    "\012\347\000\350\000\375\u026f\u017e\000\001\002\000\020" +
    "\345\000\355\071\366\072\367\061\371\064\u010b\065\u0165" +
    "\055\001\002\000\004\345\u0278\001\002\000\044\342\uffcd" +
    "\347\uffcd\350\uffcd\356\uffcd\357\uffcd\360\uffcd\361\uffcd\362" +
    "\uffcd\364\uffcd\365\uffcd\373\uffcd\375\uffcd\u0118\uffcd\u0124\uffcd" +
    "\u0125\uffcd\u013c\uffcd\u017e\uffcd\001\002\000\010\347\ufedf\350" +
    "\ufedf\u017e\ufedf\001\002\000\012\367\u0269\372\000\u0100\u0267" +
    "\u0112\u0266\001\002\000\004\345\u027c\001\002\000\044\342" +
    "\uff0a\347\uff0a\350\uff0a\356\uff0a\357\uff0a\360\uff0a\361\uff0a" +
    "\362\uff0a\364\uff0a\365\uff0a\373\uff0a\375\uff0a\u0118\uff0a\u0124" +
    "\uff0a\u0125\uff0a\u013c\uff0a\u017e\uff0a\001\002\000\012\367\u0269" +
    "\372\000\u0100\u0267\u0112\u0266\001\002\000\004\345\u027f\001" +
    "\002\000\044\342\uff0c\347\uff0c\350\uff0c\356\uff0c\357\uff0c" +
    "\360\uff0c\361\uff0c\362\uff0c\364\uff0c\365\uff0c\373\uff0c\375" +
    "\uff0c\u0118\uff0c\u0124\uff0c\u0125\uff0c\u013c\uff0c\u017e\uff0c\001\002" +
    "\000\012\367\u0269\372\000\u0100\u0267\u0112\u0266\001\002\000" +
    "\004\345\u0282\001\002\000\044\342\uff0e\347\uff0e\350\uff0e" +
    "\356\uff0e\357\uff0e\360\uff0e\361\uff0e\362\uff0e\364\uff0e\365" +
    "\uff0e\373\uff0e\375\uff0e\u0118\uff0e\u0124\uff0e\u0125\uff0e\u013c\uff0e" +
    "\u017e\uff0e\001\002\000\012\367\u0269\372\000\u0100\u0267\u0112" +
    "\u0266\001\002\000\004\345\u0285\001\002\000\044\342\uff0d" +
    "\347\uff0d\350\uff0d\356\uff0d\357\uff0d\360\uff0d\361\uff0d\362" +
    "\uff0d\364\uff0d\365\uff0d\373\uff0d\375\uff0d\u0118\uff0d\u0124\uff0d" +
    "\u0125\uff0d\u013c\uff0d\u017e\uff0d\001\002\000\026\344\u0276\356" +
    "\u0104\357\u0107\360\u0105\361\u010a\362\u010b\364\u010c\365\u0108" +
    "\373\u0109\u013c\u010d\001\002\000\012\347\ufee5\350\ufee5\u0123" +
    "\ufee5\u017e\ufee5\001\002\000\024\356\u0104\357\u0107\360\u0105" +
    "\361\u010a\362\u010b\364\u010c\365\u0108\373\u0109\u013c\u010d\001" +
    "\002\000\016\355\071\366\072\367\061\371\064\u010b\065" +
    "\u0165\055\001\002\000\016\347\000\350\000\353\u0113\354" +
    "\u0116\u0123\000\u017e\000\001\002\000\012\347\ufee3\350\ufee3" +
    "\u0123\ufee3\u017e\ufee3\001\002\000\016\372\076\u0113\u025e\u0114" +
    "\u025d\u0115\u0260\u0116\u0264\u0117\u0261\001\002\000\012\347\ufee0" +
    "\350\ufee0\u0123\ufee0\u017e\ufee0\001\002\000\012\347\ufee1\350" +
    "\ufee1\u0123\ufee1\u017e\ufee1\001\002\000\016\355\071\366\072" +
    "\367\061\371\064\u010b\065\u0165\055\001\002\000\016\347" +
    "\000\350\000\353\u0113\354\u0116\u0123\000\u017e\000\001\002" +
    "\000\012\347\ufee2\350\ufee2\u0123\ufee2\u017e\ufee2\001\002\000" +
    "\004\372\076\001\002\000\016\347\000\350\000\375\213" +
    "\u0122\000\u0123\000\u017e\000\001\002\000\014\347\ufee7\350" +
    "\ufee7\u0122\ufee7\u0123\ufee7\u017e\ufee7\001\002\000\004\372\076" +
    "\001\002\000\010\372\u0239\u010a\000\u0118\u0238\001\002\000" +
    "\004\u010a\u0298\001\002\000\004\372\076\001\002\000\004" +
    "\373\u029a\001\002\000\004\372\076\001\002\000\032\347" +
    "\000\350\000\352\000\u011a\000\u011b\u0243\u011c\u0242\u011d\u0244" +
    "\u011e\u0248\u0120\000\u0122\000\u0123\000\u017e\000\001\002\000" +
    "\020\347\ufef0\350\ufef0\352\ufef0\u0120\ufef0\u0122\ufef0\u0123\ufef0" +
    "\u017e\ufef0\001\002\000\004\u011a\ufeec\001\002\000\004\u011a" +
    "\ufeed\001\002\000\010\342\uff15\375\uff15\u0118\uff15\001\002" +
    "\000\010\342\000\375\000\u0118\u02a6\001\002\000\004\342" +
    "\uff1b\001\002\000\014\342\uff14\375\uff14\376\103\377\101" +
    "\u0118\uff14\001\002\000\024\342\ufea2\344\u0276\373\u02a4\375" +
    "\ufea2\376\ufea2\377\ufea2\u0100\ufea2\u0101\ufea2\u0118\ufea2\001\002" +
    "\000\022\344\073\355\071\366\072\367\061\371\064\372" +
    "\076\u010b\065\u0165\055\001\002\000\014\342\uff13\375\uff13" +
    "\376\103\377\101\u0118\uff13\001\002\000\006\355\u02ad\372" +
    "\u02ae\001\002\000\006\342\000\375\u02a9\001\002\000\006" +
    "\342\uff01\375\uff01\001\002\000\044\343\u022e\344\000\355" +
    "\000\366\000\367\000\371\000\372\000\u0100\u022a\u010b\000" +
    "\u0112\u0229\u0113\000\u0114\000\u0115\000\u0116\000\u0117\000\u0119" +
    "\u022c\u0165\000\001\002\000\004\342\uff16\001\002\000\004" +
    "\342\uff11\001\002\000\004\342\uff12\001\002\000\006\342" +
    "\uff03\375\uff03\001\002\000\006\342\uff02\375\uff02\001\002" +
    "\000\064\002\uffd6\003\uffd6\341\uffd6\347\uffd6\350\uffd6\372" +
    "\076\374\uffd6\u0102\uffd6\u0103\uffd6\u0105\uffd6\u010d\uffd6\u0111\uffd6" +
    "\u0126\uffd6\u0132\uffd6\u0157\uffd6\u0165\134\u016b\uffd6\u016c\uffd6\u016d" +
    "\uffd6\u016e\uffd6\u016f\uffd6\u0172\uffd6\u0176\uffd6\u0177\uffd6\u0178\uffd6" +
    "\001\002\000\060\002\uffd9\003\uffd9\341\uffd9\347\uffd9\350" +
    "\uffd9\374\uffd9\u0102\uffd9\u0103\uffd9\u0105\uffd9\u010d\uffd9\u0111\uffd9" +
    "\u0126\uffd9\u0132\uffd9\u0157\uffd9\u016b\uffd9\u016c\uffd9\u016d\uffd9\u016e" +
    "\uffd9\u016f\uffd9\u0172\uffd9\u0176\uffd9\u0177\uffd9\u0178\uffd9\001\002" +
    "\000\060\002\ufff0\003\ufff0\341\ufff0\347\ufff0\350\ufff0\374" +
    "\ufff0\u0102\ufff0\u0103\ufff0\u0105\ufff0\u010d\ufff0\u0111\ufff0\u0126\ufff0" +
    "\u0132\ufff0\u0157\ufff0\u016b\ufff0\u016c\ufff0\u016d\ufff0\u016e\ufff0\u016f" +
    "\ufff0\u0172\ufff0\u0176\ufff0\u0177\ufff0\u0178\ufff0\001\002\000\006" +
    "\347\156\350\157\001\002\000\060\002\uffea\003\uffea\341" +
    "\uffea\347\uffea\350\uffea\374\uffea\u0102\uffea\u0103\uffea\u0105\uffea" +
    "\u010d\uffea\u0111\uffea\u0126\uffea\u0132\uffea\u0157\uffea\u016b\uffea\u016c" +
    "\uffea\u016d\uffea\u016e\uffea\u016f\uffea\u0172\uffea\u0176\uffea\u0177\uffea" +
    "\u0178\uffea\001\002\000\006\372\u02f5\u0119\u02f4\001\002\000" +
    "\006\372\u02ea\u0158\u02e9\001\002\000\004\372\076\001\002" +
    "\000\004\372\076\001\002\000\004\372\u02bb\001\002\000" +
    "\006\347\uffa1\350\uffa1\001\002\000\006\347\uff9d\350\uff9d" +
    "\001\002\000\004\u012a\u02bc\001\002\000\012\u010b\u02bf\u012b" +
    "\u02c0\u0143\u02be\u0160\u02c1\001\002\000\006\347\uff81\350\uff81" +
    "\001\002\000\004\373\u02cb\001\002\000\010\347\uff7e\350" +
    "\uff7e\375\uff7e\001\002\000\004\373\u02c9\001\002\000\004" +
    "\373\u02c7\001\002\000\010\347\000\350\000\375\u02c3\001" +
    "\002\000\012\u010b\u02bf\u012b\u02c0\u0143\u02be\u0160\u02c1\001\002" +
    "\000\006\347\uff7a\350\uff7a\001\002\000\006\347\uff80\350" +
    "\uff80\001\002\000\006\347\uff7b\350\uff7b\001\002\000\004" +
    "\355\u02c8\001\002\000\010\347\uff7c\350\uff7c\375\uff7c\001" +
    "\002\000\004\372\u02ca\001\002\000\010\347\uff7f\350\uff7f" +
    "\375\uff7f\001\002\000\004\372\u02cc\001\002\000\010\347" +
    "\uff7d\350\uff7d\375\uff7d\001\002\000\006\347\uff9c\350\uff9c" +
    "\001\002\000\006\347\uff9e\350\uff9e\001\002\000\010\u0105" +
    "\u02d3\u0157\u02d0\u0162\u02d2\001\002\000\004\u0161\u02e7\001\002" +
    "\000\006\347\uff8c\350\uff8c\001\002\000\026\372\076\u010b" +
    "\323\u0110\325\u0128\331\u0133\316\u0135\333\u0137\327\u0138\330" +
    "\u0139\326\u013f\322\001\002\000\012\372\076\u0106\u02d6\u0139" +
    "\u02d4\u0161\u02d5\001\002\000\006\372\000\u0108\176\001\002" +
    "\000\004\372\076\001\002\000\006\372\000\u0108\176\001" +
    "\002\000\010\347\000\350\000\375\u02da\001\002\000\006" +
    "\347\uff89\350\uff89\001\002\000\006\347\uff84\350\uff84\001" +
    "\002\000\012\372\076\u0106\u02d6\u0139\u02d4\u0161\u02d5\001\002" +
    "\000\006\347\uff82\350\uff82\001\002\000\006\347\uff83\350" +
    "\uff83\001\002\000\004\372\076\001\002\000\010\347\000" +
    "\350\000\375\u02da\001\002\000\006\347\uff85\350\uff85\001" +
    "\002\000\010\347\000\350\000\375\u02da\001\002\000\006" +
    "\347\uff86\350\uff86\001\002\000\004\372\076\001\002\000" +
    "\010\347\000\350\000\375\u02da\001\002\000\006\347\uff87" +
    "\350\uff87\001\002\000\006\347\uff8a\350\uff8a\001\002\000" +
    "\006\347\uff88\350\uff88\001\002\000\026\372\076\u010b\323" +
    "\u0110\325\u0128\331\u0133\316\u0135\333\u0137\327\u0138\330\u0139" +
    "\326\u013f\322\001\002\000\006\347\uff8b\350\uff8b\001\002" +
    "\000\006\u0129\uff9a\u0159\uff9a\001\002\000\006\u0129\uff99\u0159" +
    "\uff99\001\002\000\006\347\uffa0\350\uffa0\001\002\000\006" +
    "\u0129\u02ed\u0159\u02ef\001\002\000\004\372\u02f3\001\002\000" +
    "\006\347\uff9b\350\uff9b\001\002\000\004\u012b\u02f0\001\002" +
    "\000\004\373\u02f1\001\002\000\004\372\u02f2\001\002\000" +
    "\006\347\uff98\350\uff98\001\002\000\006\347\uff97\350\uff97" +
    "\001\002\000\004\u010a\uff94\001\002\000\004\u010a\uff95\001" +
    "\002\000\004\u010a\u02f8\001\002\000\006\347\uff9f\350\uff9f" +
    "\001\002\000\004\372\076\001\002\000\020\374\u02ff\u015a" +
    "\u02fe\u015b\u02fa\u015c\u02fd\u015d\u02fc\u015e\u0300\u015f\u0301\001\002" +
    "\000\006\347\uff92\350\uff92\001\002\000\006\347\uff96\350" +
    "\uff96\001\002\000\006\347\uff8f\350\uff8f\001\002\000\006" +
    "\347\uff91\350\uff91\001\002\000\006\347\uff93\350\uff93\001" +
    "\002\000\006\347\uff90\350\uff90\001\002\000\006\347\uff8e" +
    "\350\uff8e\001\002\000\006\347\uff8d\350\uff8d\001\002\000" +
    "\004\002\001\001\002\000\010\344\u0231\366\072\367\061" +
    "\001\002\000\004\342\u0306\001\002\000\006\342\ufe97\372" +
    "\ufe97\001\002\000\004\372\076\001\002\000\012\347\000" +
    "\350\000\352\000\375\213\001\002\000\010\347\000\350" +
    "\000\352\u024d\001\002\000\006\347\ufe9b\350\ufe9b\001\002" +
    "\000\010\342\000\351\u030c\372\000\001\002\000\006\342" +
    "\ufe98\372\ufe98\001\002\000\006\342\ufe94\372\ufe94\001\002" +
    "\000\006\342\ufe93\372\ufe93\001\002\000\004\372\076\001" +
    "\002\000\004\374\u0310\001\002\000\004\372\076\001\002" +
    "\000\004\373\u0312\001\002\000\022\344\073\355\071\366" +
    "\072\367\061\371\064\372\076\u010b\065\u0165\055\001\002" +
    "\000\010\347\000\350\000\352\u024d\001\002\000\016\347" +
    "\ufeaa\350\ufeaa\352\ufeaa\375\ufeaa\376\103\377\101\001\002" +
    "\000\012\347\000\350\000\352\000\375\u0316\001\002\000" +
    "\004\372\076\001\002\000\010\347\ufeab\350\ufeab\352\ufeab" +
    "\001\002\000\010\347\ufead\350\ufead\352\ufead\001\002\000" +
    "\004\373\u031a\001\002\000\022\344\073\355\071\366\072" +
    "\367\061\371\064\372\076\u010b\065\u0165\055\001\002\000" +
    "\010\347\000\350\000\352\u024d\001\002\000\010\347\ufeac" +
    "\350\ufeac\352\ufeac\001\002\000\006\347\ufeae\350\ufeae\001" +
    "\002\000\022\347\000\350\000\355\071\366\072\367\061" +
    "\371\064\u010b\065\u0165\055\001\002\000\006\347\uffc8\350" +
    "\uffc8\001\002\000\060\002\ufff6\003\ufff6\341\ufff6\347\ufff6" +
    "\350\ufff6\374\ufff6\u0102\ufff6\u0103\ufff6\u0105\ufff6\u010d\ufff6\u0111" +
    "\ufff6\u0126\ufff6\u0132\ufff6\u0157\ufff6\u016b\ufff6\u016c\ufff6\u016d\ufff6" +
    "\u016e\ufff6\u016f\ufff6\u0172\ufff6\u0176\ufff6\u0177\ufff6\u0178\ufff6\001" +
    "\002\000\060\002\ufff5\003\ufff5\341\ufff5\347\ufff5\350\ufff5" +
    "\374\ufff5\u0102\ufff5\u0103\ufff5\u0105\ufff5\u010d\ufff5\u0111\ufff5\u0126" +
    "\ufff5\u0132\ufff5\u0157\ufff5\u016b\ufff5\u016c\ufff5\u016d\ufff5\u016e\ufff5" +
    "\u016f\ufff5\u0172\ufff5\u0176\ufff5\u0177\ufff5\u0178\ufff5\001\002\000" +
    "\060\002\ufff8\003\ufff8\341\ufff8\347\ufff8\350\ufff8\374\ufff8" +
    "\u0102\ufff8\u0103\ufff8\u0105\ufff8\u010d\ufff8\u0111\ufff8\u0126\ufff8\u0132" +
    "\ufff8\u0157\ufff8\u016b\ufff8\u016c\ufff8\u016d\ufff8\u016e\ufff8\u016f\ufff8" +
    "\u0172\ufff8\u0176\ufff8\u0177\ufff8\u0178\ufff8\001\002\000\004\372" +
    "\076\001\002\000\006\347\ufeaf\350\ufeaf\001\002\000\060" +
    "\002\uffeb\003\uffeb\341\uffeb\347\uffeb\350\uffeb\374\uffeb\u0102" +
    "\uffeb\u0103\uffeb\u0105\uffeb\u010d\uffeb\u0111\uffeb\u0126\uffeb\u0132\uffeb" +
    "\u0157\uffeb\u016b\uffeb\u016c\uffeb\u016d\uffeb\u016e\uffeb\u016f\uffeb\u0172" +
    "\uffeb\u0176\uffeb\u0177\uffeb\u0178\uffeb\001\002\000\060\002\ufffa" +
    "\003\ufffa\341\ufffa\347\ufffa\350\ufffa\374\ufffa\u0102\ufffa\u0103" +
    "\ufffa\u0105\ufffa\u010d\ufffa\u0111\ufffa\u0126\ufffa\u0132\ufffa\u0157\ufffa" +
    "\u016b\ufffa\u016c\ufffa\u016d\ufffa\u016e\ufffa\u016f\ufffa\u0172\ufffa\u0176" +
    "\ufffa\u0177\ufffa\u0178\ufffa\001\002\000\060\002\ufff2\003\ufff2" +
    "\341\ufff2\347\ufff2\350\ufff2\374\ufff2\u0102\ufff2\u0103\ufff2\u0105" +
    "\ufff2\u010d\ufff2\u0111\ufff2\u0126\ufff2\u0132\ufff2\u0157\ufff2\u016b\ufff2" +
    "\u016c\ufff2\u016d\ufff2\u016e\ufff2\u016f\ufff2\u0172\ufff2\u0176\ufff2\u0177" +
    "\ufff2\u0178\ufff2\001\002\000\060\002\ufffc\003\ufffc\341\ufffc" +
    "\347\ufffc\350\ufffc\374\ufffc\u0102\ufffc\u0103\ufffc\u0105\ufffc\u010d" +
    "\ufffc\u0111\ufffc\u0126\ufffc\u0132\ufffc\u0157\ufffc\u016b\ufffc\u016c\ufffc" +
    "\u016d\ufffc\u016e\ufffc\u016f\ufffc\u0172\ufffc\u0176\ufffc\u0177\ufffc\u0178" +
    "\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0326\000\054\002\034\003\020\004\045\005\043\013" +
    "\003\040\005\042\027\056\011\071\042\125\014\163\012" +
    "\202\004\204\030\207\033\223\032\226\023\246\007\253" +
    "\006\254\044\255\025\257\013\001\001\000\004\010\u0327" +
    "\001\001\000\004\010\u0326\001\001\000\004\010\u0325\001" +
    "\001\000\002\001\001\000\004\010\u0324\001\001\000\002" +
    "\001\001\000\004\010\u0321\001\001\000\004\010\u0320\001" +
    "\001\000\002\001\001\000\004\010\u031f\001\001\000\004" +
    "\015\u031d\001\001\000\006\006\u0304\014\u030d\001\001\000" +
    "\006\006\u0304\014\u0303\001\001\000\002\001\001\000\004" +
    "\164\u02b8\001\001\000\004\015\u02b1\001\001\000\004\010" +
    "\u02b0\001\001\000\004\261\u02ae\001\001\000\002\001\001" +
    "\000\010\006\u022e\072\u022c\073\u022a\001\001\000\004\010" +
    "\u0227\001\001\000\004\010\u0226\001\001\000\002\001\001" +
    "\000\004\010\u0225\001\001\000\004\010\u0224\001\001\000" +
    "\004\010\u0223\001\001\000\006\015\u0203\206\u0204\001\001" +
    "\000\004\261\u0201\001\001\000\006\006\u01e2\057\u01e1\001" +
    "\001\000\012\006\246\126\240\133\251\210\244\001\001" +
    "\000\010\041\163\046\165\054\171\001\001\000\004\010" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\050" +
    "\002\034\005\154\013\003\040\005\042\027\056\011\071" +
    "\042\125\014\163\012\202\004\204\030\207\033\223\032" +
    "\226\023\246\007\253\006\254\044\255\025\257\013\001" +
    "\001\000\004\015\140\001\001\000\006\256\135\261\136" +
    "\001\001\000\004\261\126\001\001\000\004\206\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\015\066\024\073\031\076\032" +
    "\061\033\074\034\057\036\065\037\062\206\067\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\015\066\024\073\031\122" +
    "\032\061\033\074\034\057\036\065\037\062\206\067\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\120" +
    "\011\117\001\001\000\006\006\103\205\101\001\001\000" +
    "\004\206\112\001\001\000\022\015\066\024\073\032\111" +
    "\033\074\034\057\036\065\037\062\206\067\001\001\000" +
    "\002\001\001\000\022\015\066\024\073\032\104\033\074" +
    "\034\057\036\065\037\062\206\067\001\001\000\002\001" +
    "\001\000\002\001\001\000\020\015\066\024\073\033\110" +
    "\034\057\036\065\037\062\206\067\001\001\000\020\015" +
    "\066\024\073\033\107\034\057\036\065\037\062\206\067" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\015\066\024\073\031\114" +
    "\032\061\033\074\034\057\036\065\037\062\206\067\001" +
    "\001\000\006\006\103\205\115\001\001\000\002\001\001" +
    "\000\004\015\121\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\103\205\125\001\001\000\002\001\001\000" +
    "\006\015\132\260\131\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\015" +
    "\134\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\132\260\137\001\001\000\002\001\001\000\020\006" +
    "\142\024\144\034\057\036\065\037\062\206\141\224\143" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\147\225\146\001\001\000\020\006\142" +
    "\024\144\034\057\036\065\037\062\206\141\224\150\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\024\152\034\057\036\065\037\062\206\067\001" +
    "\001\000\006\006\147\225\153\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\173\043\235\001\001\000\006" +
    "\006\173\043\217\001\001\000\006\006\173\043\210\001" +
    "\001\000\002\001\001\000\004\015\207\001\001\000\002" +
    "\001\001\000\006\006\173\043\205\001\001\000\006\006" +
    "\173\043\174\001\001\000\004\015\172\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\015" +
    "\177\044\200\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\203\045\202\001\001\000\002\001\001\000" +
    "\006\015\177\044\204\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\015\206\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\211\001\001" +
    "\000\006\006\214\055\213\001\001\000\004\015\215\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\214" +
    "\055\216\001\001\000\002\001\001\000\004\015\220\001" +
    "\001\000\012\015\223\047\225\050\224\052\221\001\001" +
    "\000\002\001\001\000\004\015\227\001\001\000\006\006" +
    "\214\055\226\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\231\051\232\001\001\000" +
    "\004\015\233\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\050\234\001\001\000\002\001\001\000\004\015" +
    "\236\001\001\000\006\006\214\055\237\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\015\u01b6\127\u01b7\001" +
    "\001\000\004\145\u01b1\001\001\000\002\001\001\000\004" +
    "\211\u016d\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\u0162\137\u0163\001\001\000\006\015\312\146\313" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\257\134\256\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\261\001" +
    "\001\000\002\001\001\000\006\015\263\135\264\001\001" +
    "\000\006\006\304\234\305\001\001\000\002\001\001\000" +
    "\006\006\270\136\266\001\001\000\002\001\001\000\004" +
    "\015\275\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\263\135\273\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\015\263\135\277\001" +
    "\001\000\002\001\001\000\006\006\270\136\301\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\307\235\310\001\001\000\006" +
    "\015\263\135\311\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\015\323\144\320\150\331\151\316\155\317\001" +
    "\001\000\002\001\001\000\006\006\u015a\152\u015b\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\371\161" +
    "\370\001\001\000\002\001\001\000\004\153\u0125\001\001" +
    "\000\014\024\u011b\034\057\036\065\037\062\206\067\001" +
    "\001\000\004\015\u0119\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\335\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\015\340\001\001\000" +
    "\002\001\001\000\004\015\342\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\347\147\345\001\001\000" +
    "\002\001\001\000\004\015\351\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\006\355\133" +
    "\357\143\356\155\353\001\001\000\002\001\001\000\006" +
    "\006\371\161\370\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\361\001\001\000\006" +
    "\006\214\055\362\001\001\000\006\006\365\123\366\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\015\373\001\001\000\006\006\214" +
    "\055\374\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\006\u0101\015\u0100\022\u0102\157\377\001\001\000\002" +
    "\001\001\000\004\007\u0105\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\024\u0110\034\057\036\065\037\062\206\067\001\001\000" +
    "\002\001\001\000\004\034\u010d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\006\u0114\021\u0111\023\u0113\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\006\u0101\015\u0100" +
    "\022\u0116\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\155\u011a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\006\u014a" +
    "\154\u0148\155\u0149\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\034\057\036\065\037\u0133\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\034\057\036\065" +
    "\037\u0136\001\001\000\002\001\001\000\010\034\057\036" +
    "\065\037\u0138\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\034\057\036\065\037\u013b\001\001\000\002\001" +
    "\001\000\010\034\057\036\065\037\u013d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\034\057\036\065\037\u0143" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\034" +
    "\057\036\065\037\u0146\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\006\u014d\155\u014c\156" +
    "\u014b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\034\057\036\065\037" +
    "\u014f\001\001\000\002\001\001\000\010\034\057\036\065" +
    "\037\u0151\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\034\057\036\065\037\u0154\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\034\057\036\065\037\u0157\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\015\323" +
    "\144\320\150\u015c\151\316\155\317\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\034\u015e" +
    "\001\001\000\002\001\001\000\004\034\u0160\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u0165\140\u0164" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\015\u0167\141\u0168\001\001\000\006\006\214" +
    "\055\u016a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\071\u016c\001\001\000\002\001\001" +
    "\000\004\015\u01a2\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\u0171\001\001\000\002\001\001\000\010" +
    "\006\u0174\212\u0173\213\u0176\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\153\u0178\001\001\000\006\006\u017c\215\u017b\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u017f\214\u0180" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\213" +
    "\u0181\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\153\u0184\206\u0186\231" +
    "\u0187\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u0189\216\u018a\001\001\000\004\217" +
    "\u019a\001\001\000\002\001\001\000\006\006\u018d\227\u018b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\056\002\034\004\u0191\005\043\006\u018f\013\003" +
    "\040\005\042\027\056\011\071\042\125\014\163\012\202" +
    "\004\204\030\207\033\223\032\226\023\230\u0190\246\007" +
    "\253\006\254\044\255\025\257\013\001\001\000\002\001" +
    "\001\000\002\001\001\000\050\002\034\005\154\013\003" +
    "\040\005\042\027\056\011\071\042\125\014\163\012\202" +
    "\004\204\030\207\033\223\032\226\023\246\007\253\006" +
    "\254\044\255\025\257\013\001\001\000\024\015\066\024" +
    "\073\031\u0193\032\061\033\074\034\057\036\065\037\062" +
    "\206\067\001\001\000\010\006\u0195\010\u0196\236\u0194\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\015\323\144\320\150" +
    "\u01a0\151\316\155\317\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\006\u0174\212\u01a3\213\u0176\001\001\000" +
    "\006\006\u0189\216\u01a4\001\001\000\006\006\u01a6\220\u01a7" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\u01ab\221\u01aa\001\001\000\002\001\001" +
    "\000\052\002\034\004\u01ac\005\043\013\003\040\005\042" +
    "\027\056\011\071\042\125\014\163\012\202\004\204\030" +
    "\207\033\223\032\226\023\246\007\253\006\254\044\255" +
    "\025\257\013\001\001\000\002\001\001\000\054\002\034" +
    "\005\154\006\u01ad\013\003\040\005\042\027\056\011\071" +
    "\042\125\014\163\012\202\004\204\030\207\033\222\u01ae" +
    "\223\032\226\023\246\007\253\006\254\044\255\025\257" +
    "\013\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\u01bc\130\u01b9\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u01c1\131\u01c0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\u01ca\142\u01c9\001\001\000\006\006\u01c1\131\u01cb\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u01ca\142\u01ce\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u01ca\142\u01d1" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u01ca\142\u01d4\001\001\000\002\001\001\000\006\006\u01d8" +
    "\132\u01d7\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\u01c1\131\u01da\001\001\000\002" +
    "\001\001\000\006\006\u01d8\132\u01dc\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u01ca\142\u01df\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u01e4\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\u01e6" +
    "\060\u01e5\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\061\u01e9\001\001\000\006\006\u01ed\062\u01eb\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u01ed\062\u01ef" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\063" +
    "\u01f2\001\001\000\002\001\001\000\016\024\u01f4\034\057" +
    "\036\065\037\062\064\u01f5\206\067\001\001\000\006\006" +
    "\u01fd\065\u01fc\001\001\000\002\001\001\000\006\006\u01f9" +
    "\066\u01f8\001\001\000\004\063\u01fa\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\024\u01fe" +
    "\034\057\036\065\037\062\206\067\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u01fd\065\u01ff\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u0202\001" +
    "\001\000\002\001\001\000\006\006\u020e\247\u020c\001\001" +
    "\000\004\153\u0205\001\001\000\006\006\u0208\203\u0207\001" +
    "\001\000\004\206\u0209\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\153\u020a\001\001\000\006\006\u0208\203" +
    "\u020b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\071\u0212\001\001\000\006\006\u0214\250\u0213" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\015" +
    "\u0216\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\u021a\252\u021b\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\206\u021d\001\001\000\006" +
    "\006\u021f\251\u0220\001\001\000\004\206\u0221\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\u021f\251\u0222" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\015\u02a2\024" +
    "\073\031\u02a1\032\061\033\074\034\057\036\065\037\062" +
    "\074\u02a0\075\u029f\100\u029e\206\067\232\u025e\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\017\u0231\034\u022f" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u0232\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\u0236\107\u0235\001\001\000\010\006" +
    "\u0244\112\u0246\113\u0245\001\001\000\006\006\u023a\111\u0239" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u023d\110\u023c\001\001\000\002\001\001\000\006\015\u0236" +
    "\107\u023e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\u024a\114\u029d\001\001\000\002\001\001\000\006\006" +
    "\u024a\114\u029c\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\u024d\016\u024b\001\001\000\006\006\u024a\114" +
    "\u0248\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u0252\116\u0254\001\001\000\004\015" +
    "\u024e\001\001\000\002\001\001\000\004\007\u024f\001\001" +
    "\000\024\015\066\024\073\031\u0250\032\061\033\074\034" +
    "\057\036\065\037\062\206\067\001\001\000\010\006\u0114" +
    "\021\u0251\023\u0113\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u0256\117\u0257\001\001" +
    "\000\012\015\u0285\100\u0287\120\u0286\232\u025e\001\001\000" +
    "\002\001\001\000\006\006\u025a\122\u0259\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\015" +
    "\u0261\100\u0262\232\u025e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\365\123\u0274\001\001\000\006\006\365" +
    "\123\u026d\001\001\000\002\001\001\000\010\006\u026a\101" +
    "\u0269\102\u0267\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\015\u026c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\u026f\124\u0270\001\001\000\004\015\u0271\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\365" +
    "\123\u0272\001\001\000\006\006\u025a\122\u0273\001\001\000" +
    "\002\001\001\000\006\006\u026f\124\u0278\001\001\000\020" +
    "\006\142\024\144\034\057\036\065\037\062\206\141\224" +
    "\u0276\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\006\u026a\101\u027a\102\u0267\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\006\u026a\101\u027d" +
    "\102\u0267\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\u026a\101\u0280\102\u0267\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\006\u026a\101\u0283\102\u0267\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\u028e" +
    "\001\001\000\002\001\001\000\004\007\u0288\001\001\000" +
    "\014\024\u0289\034\057\036\065\037\062\206\067\001\001" +
    "\000\010\006\u028c\023\u028b\121\u028a\001\001\000\002\001" +
    "\001\000\012\015\u0285\100\u0287\120\u028d\232\u025e\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\024\u028f\034" +
    "\057\036\065\037\062\206\067\001\001\000\010\006\u028c" +
    "\023\u028b\121\u0290\001\001\000\002\001\001\000\004\015" +
    "\u0292\001\001\000\006\006\214\055\u0293\001\001\000\002" +
    "\001\001\000\004\015\u0295\001\001\000\006\006\u023a\111" +
    "\u0296\001\001\000\002\001\001\000\004\015\u0298\001\001" +
    "\000\002\001\001\000\004\015\u029a\001\001\000\010\006" +
    "\u0244\112\u029b\113\u0245\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u02a7\103\u02a6\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\015\066\024\073\031\u02a4\032" +
    "\061\033\074\034\057\036\065\037\062\206\067\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u02aa\076" +
    "\u02a9\001\001\000\002\001\001\000\010\006\u022e\072\u02ab" +
    "\073\u022a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\132\260\u02af\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\u02b2\001\001\000\002\001\001\000\006" +
    "\170\u02f6\171\u02f5\001\001\000\006\165\u02ea\166\u02eb\001" +
    "\001\000\006\015\u02ce\173\u02cd\001\001\000\006\015\u0162" +
    "\137\u02cc\001\001\000\004\177\u02b9\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\200\u02bc" +
    "\201\u02c1\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\u02c3\162\u02c4\001\001\000\004\201\u02c5\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\174\u02d0\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\015\323\144\320\150\u02e5" +
    "\151\316\155\317\175\u02e4\001\001\000\006\015\u02d6\176" +
    "\u02d7\001\001\000\006\006\173\043\u02e1\001\001\000\004" +
    "\015\u02df\001\001\000\006\006\173\043\u02dc\001\001\000" +
    "\006\006\u02da\233\u02d8\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\u02d6\176\u02db\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\u02dd\001\001\000\006" +
    "\006\u02da\233\u02de\001\001\000\002\001\001\000\006\006" +
    "\u02da\233\u02e0\001\001\000\002\001\001\000\004\015\u02e2" +
    "\001\001\000\006\006\u02da\233\u02e3\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\015\323" +
    "\144\320\150\u02e7\151\316\155\317\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\167\u02ed\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\u02f8\001\001\000\004\172\u02fa\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\017\u0309\034\u022f" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\015" +
    "\u0306\001\001\000\006\006\214\055\u0307\001\001\000\006" +
    "\006\u024d\016\u0308\001\001\000\002\001\001\000\006\006" +
    "\u030c\020\u030a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\015\u030e\001\001\000\002\001" +
    "\001\000\004\015\u0310\001\001\000\002\001\001\000\030" +
    "\015\066\024\073\025\u0312\026\u0314\031\u0313\032\061\033" +
    "\074\034\057\036\065\037\062\206\067\001\001\000\006" +
    "\006\u024d\016\u031c\001\001\000\002\001\001\000\006\006" +
    "\u0316\027\u0317\001\001\000\004\015\u0318\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\030\015" +
    "\066\024\073\025\u031a\026\u0314\031\u0313\032\061\033\074" +
    "\034\057\036\065\037\062\206\067\001\001\000\006\006" +
    "\u024d\016\u031b\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\006\142\024\144\034\057\036\065\037\062\206" +
    "\141\224\u031e\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u0323\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




 
    
    private Symbol s;
    public int cont = 0;
    public String errores="";
    public LinkedList<Tabla> Lista_tablas = new LinkedList<Tabla>();

    public LinkedList<Tabla_alias> Lista_tablas_alias = new LinkedList<Tabla_alias>();
    public LinkedList<Campo> Lista_aux_group_by = new LinkedList<Campo>();
    public LinkedList<Campo> Lista_aux_having = new LinkedList<Campo>();
   public LinkedList<Campo> Lista_select = new LinkedList<Campo>();
   public String ambito="";


    public LinkedList<Funcion> Lista_funciones = new LinkedList<Funcion>();
    Stack<String> transacciones=new Stack<>();
    public LinkedList<Variable> Lista_variables  = new LinkedList<Variable>();


 public int buscar_variable(String id,String ambito)
    {       
        int index=-1;
        int i=0;
        for (Variable var : Lista_variables ) {            
            if(var.getNombre()==id && var.getAmbito()==ambito){
            index=i;
            }
            i++;
        }
        return index;
    }
    
    public int buscar_funcion(String id,String ambito)
    {       
        int index=-1;
        int i=0;
        for (Funcion var : Lista_funciones ) {            
            if(var.getNombre()==id && var.getAmbito()==ambito){
            index=i;
            }
            i++;
        }
        return index;
    }
    
    public int buscar_Tabla(String id,String ambito)
    {       
        int index=-1;
        int i=0;
        for (Tabla var : Lista_tablas ) {            
            if(var.getNombre()==id && var.getAmbito()==ambito){
            index=i;
            }
            i++;
        }
        return index;
    }
    
     public int buscar_Tabla_alias(String id,String ambito)
    {       
        int index=-1;
        int i=0;
        for (Tabla_alias var : Lista_tablas_alias ) {            
            if(var.getNombre()==id && var.getAmbito()==ambito){
            index=i;
            }
            i++;
        }
        return index;
    }    


    public void syntax_error(Symbol s){
         errores +="Error de sintaxis. Linea: " + (s.right + 1) +" Columna: " + s.left + ". Texto: \"" + s.value + "\"\n";
    }

    public Symbol getS(){
        return this.s;
}

public void unrecovered_syntax_error(Symbol s){ 
        errores +="Error de sintaxis. Linea: " + (s.right + 1) +" Columna: " + s.left + ". Texto: En alguna sentencia no se termino de cerrar la sentencia \"" + s.value + "\"\n";
    }




/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // empty ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empty",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= querys 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // querys ::= querys sentencia 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("querys",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // querys ::= sentencia 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("querys",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // sentencia ::= eliminar fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // sentencia ::= update fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // sentencia ::= truncate fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // sentencia ::= drop fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // sentencia ::= insert fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // sentencia ::= select fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // sentencia ::= create fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // sentencia ::= alter fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // sentencia ::= procedure fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // sentencia ::= sets fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sentencia ::= declares fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // sentencia ::= exec fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // sentencia ::= functions fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // sentencia ::= BEGIN_TRANSACTION_STATEMENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // sentencia ::= COMMIT_STATEMENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // sentencia ::= ROLLBACK_STATEMENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sentencia ::= SAVE_STATEMENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // sentencia ::= cursor fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // sentencia ::= USE objeto_nombre fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // sentencia ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentencia",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // cursor ::= DECLARE objeto_nombre tipo_cursor CURSOR FOR select abrir_cursor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cursor",164, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // abrir_cursor ::= OPEN objeto_nombre FETCH NEXT FROM tipo_fetch 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("abrir_cursor",166, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // abrir_cursor ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("abrir_cursor",166, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_cursor ::= INSENSITIVE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_cursor ::= SCROLL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_cursor ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_cursor",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // tipo_fetch ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_fetch",168, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // tipo_fetch ::= objeto_nombre INTO VARIABLES mas_variables 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_fetch",168, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // mas_variables ::= COMA VARIABLES mas_variables 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_variables",167, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // mas_variables ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_variables",167, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // SAVE_STATEMENT ::= SAVE TRANSACTION_OPTIONS objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAVE_STATEMENT",169, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ROLLBACK_STATEMENT ::= ROLLBACK TRANSACTION_OPTIONS OPTIONAL_TRANSACTION_NAME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROLLBACK_STATEMENT",170, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // COMMIT_STATEMENT ::= COMMIT OPTIONAL_COMMIT_OPTIONS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMIT_STATEMENT",171, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // OPTIONAL_COMMIT_OPTIONS ::= TRANSACTION_OPTIONS OPTIONAL_TRANSACTION_NAME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPTIONAL_COMMIT_OPTIONS",172, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // OPTIONAL_COMMIT_OPTIONS ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPTIONAL_COMMIT_OPTIONS",172, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // BEGIN_TRANSACTION_STATEMENT ::= BEGIN TRANSACTION_OPTIONS OPTIONAL_TRANSACTION_NAME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN_TRANSACTION_STATEMENT",173, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // OPTIONAL_TRANSACTION_NAME ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPTIONAL_TRANSACTION_NAME",174, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OPTIONAL_TRANSACTION_NAME ::= ARROBA objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPTIONAL_TRANSACTION_NAME",174, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // OPTIONAL_TRANSACTION_NAME ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OPTIONAL_TRANSACTION_NAME",174, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TRANSACTION_OPTIONS ::= TRAN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRANSACTION_OPTIONS",175, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TRANSACTION_OPTIONS ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRANSACTION_OPTIONS",175, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // functions ::= CREATE alterar FUNCTION objeto_nombre PARENTESIS_ABIERTO parametros PARENTESIS_CERRADO RETURNS tipo_retorno with_procedure as BEGIN interno_funcion RETURN E fin_function END 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("functions",148, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-16)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // as ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("as",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // as ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("as",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // tipo_retorno ::= tipo_dato 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // tipo_retorno ::= VARIABLES TABLE PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // tipo_retorno ::= TABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // llamar_funciones ::= objeto_nombre PARENTESIS_ABIERTO enviar_datos PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("llamar_funciones",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // fin_function ::= fin 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_function",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // fin_function ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_function",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // interno_funcion ::= querys 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("interno_funcion",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // interno_funcion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("interno_funcion",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // exec ::= EXECUTE objeto_nombre enviar_datos 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exec",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // exec ::= EXEC objeto_nombre enviar_datos 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exec",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // enviar_datos ::= VARIABLES ASIGNAR data_tipo mandar_mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // enviar_datos ::= data_tipo mandar_mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // enviar_datos ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("enviar_datos",146, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // mandar_mas ::= COMA enviar_datos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mandar_mas",147, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // mandar_mas ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mandar_mas",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // sets ::= SET VARIABLES ASIGNAR E sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // sets ::= SET NOCOUNT ON sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // sets2 ::= COMA VARIABLES ASIGNAR E sets2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets2",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // sets2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sets2",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // declares ::= DECLARE VARIABLES tipo_dato declares2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares",128, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // declares2 ::= COMA VARIABLES tipo_dato declares2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // declares2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("declares2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // procedure ::= CREATE alterar proc objeto_nombre parametros with_procedure replication AS empezar querys final 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // alterar ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alterar",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // alterar ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alterar",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // proc ::= PROC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("proc",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // proc ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("proc",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // parametros ::= parametros1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametros ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",136, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametros1 ::= ARROBA IDENTIFICADOR tipo_dato tipo_parametro parametros2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros1",137, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametros2 ::= COMA parametros1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros2",138, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametros2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros2",138, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // tipo_parametro ::= OUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // tipo_parametro ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // tipo_parametro ::= READONLY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // tipo_parametro ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_parametro",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // with_procedure ::= WITH procedure_option 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_procedure",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // with_procedure ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("with_procedure",140, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // procedure_option ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // procedure_option ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // procedure_option ::= EXECUTE AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("procedure_option",141, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // replication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("replication",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // replication ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("replication",142, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // empezar ::= BEGIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empezar",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // empezar ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("empezar",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // final ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("final",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // final ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("final",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // alter ::= ALTER opciones 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alter",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // opciones ::= DATABASE database_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // opciones ::= INDEX index_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // opciones ::= TABLE table_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // opciones ::= USER user_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // opciones ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // database_alter ::= nombre_actual tipo_alter_base 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database_alter",115, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // nombre_actual ::= CURRENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_actual",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // nombre_actual ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_actual",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // tipo_alter_base ::= MODIFY NAME ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // tipo_alter_base ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // index_alter ::= nombre_index ON objeto_nombre accion_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index_alter",118, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // nombre_index ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_index",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // nombre_index ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nombre_index",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // accion_index ::= REBUILD 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // accion_index ::= DISABLE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // accion_index ::= REORGANIZE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // accion_index ::= SET 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // accion_index ::= RESUME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // accion_index ::= PAUSE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // accion_index ::= ABORT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_index",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // table_alter ::= objeto_nombre accion_alter 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_alter",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // accion_alter ::= ALTER COLUMN add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // accion_alter ::= ADD tipo_add 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // accion_alter ::= DROP drop_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_alter",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // tipo_add ::= add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_add",123, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // drop_column ::= CONSTRAINT if_op objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // drop_column ::= COLUMN objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // drop_column ::= INDEX if_op objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // drop_column ::= objeto_nombre mas_drop 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_column",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // mas_drop ::= COMA drop_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_drop",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // mas_drop ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_drop",153, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // user_alter ::= IDENTIFICADOR WITH set_item 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user_alter",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // set_item ::= set_item1 set_item2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item",126, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // set_item1 ::= NAME ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // set_item1 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // set_item1 ::= LOGIN ASIGNAR IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // set_item1 ::= PASSWORD ASIGNAR STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item1",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // set_item2 ::= COMA set_item1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // set_item2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_item2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // create ::= CREATE opciones_crear 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("create",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // opciones_crear ::= DATABASE database_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // opciones_crear ::= opciones_index INDEX index_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // opciones_crear ::= TABLE table_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // opciones_crear ::= USER user 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // opciones_crear ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // database_create ::= objeto_nombre extras_database 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database_create",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // extras_database ::= ON PRIMARY PARENTESIS_ABIERTO filespec PARENTESIS_CERRADO mas_file 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // extras_database ::= COLLATE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // extras_database ::= WITH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // extras_database ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extras_database",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // filespec ::= NAME ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // filespec ::= NAMES ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // filespec ::= FILE ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // filespec ::= FILENAME ASIGNAR STRING mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // filespec ::= SIZE ASIGNAR INT_NUM mas_file2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // filespec ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("filespec",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // mas_file2 ::= COMA filespec 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file2",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // mas_file2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file2",96, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // mas_file ::= COMA PARENTESIS_ABIERTO filespec PARENTESIS_CERRADO mas_file 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // mas_file ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_file",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // opciones_index ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // opciones_index ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // opciones_index ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // opciones_index ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_index",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // index_create ::= objeto_nombre ON objeto_nombre PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index_create",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // column_index ::= objeto_nombre tipo_index_orden mas_de_columnindex 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_index",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // mas_de_columnindex ::= COMA column_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_columnindex",155, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // mas_de_columnindex ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_columnindex",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // tipo_index_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // tipo_index_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // tipo_index_orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_index_orden",154, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // mas_index ::= INCLUDE PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // mas_index ::= ON objeto_nombre PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // mas_index ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_index",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // view_create ::= objeto_nombre column_view AS select 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("view_create",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // column_view ::= PARENTESIS_ABIERTO column_view1 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // column_view ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // column_view1 ::= objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("column_view1",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // user ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user",99, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // user ::= IDENTIFICADOR FOR LOGIN IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("user",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // table_create ::= objeto_nombre PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO extra_create_table 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_create",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // extra_create_table ::= ON objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // extra_create_table ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // extra_create_table ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_create_table",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // add_column ::= add_column1 add_column2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // add_column1 ::= objeto_nombre tipo_dato constraint 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column1",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // add_column1 ::= aux2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column1",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // add_column2 ::= COMA add_column 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column2",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // add_column2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("add_column2",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // tipo_dato ::= CHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // tipo_dato ::= VARCHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // tipo_dato ::= NVARCHAR PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // tipo_dato ::= TEXT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // tipo_dato ::= IMAGE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // tipo_dato ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // tipo_dato ::= VARBINARY PARENTESIS_ABIERTO MAX PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // tipo_dato ::= DATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // tipo_dato ::= DATETIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // tipo_dato ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // tipo_dato ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // tipo_dato ::= TIME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // tipo_dato ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // tipo_dato ::= TIMESTAMP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // tipo_dato ::= FLOAT PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // tipo_dato ::= INT PARENTESIS_ABIERTO VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // tipo_dato ::= MONEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // tipo_dato ::= REAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // tipo_dato ::= BIT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // tipo_dato ::= INT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // tipo_dato ::= DECIMAL PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // tipo_dato ::= DEC PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // tipo_dato ::= NUMERIC PARENTESIS_ABIERTO VALORES_NUMEROS COMA VALORES_NUMEROS PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_dato",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // constraint ::= constraint1 constraint2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // constraint ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // constraint1 ::= IDENTITY PARENTESIS_ABIERTO NUM COMA NUM PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // constraint1 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // constraint1 ::= UNIQUE extra_unique 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // constraint1 ::= PRIMARY KEY extra_primary 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // constraint1 ::= FOREIGN KEY PARENTESIS_ABIERTO objeto_nombre PARENTESIS_CERRADO REFERENCES objeto_nombre PARENTESIS_ABIERTO objeto_nombre PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // constraint1 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // constraint1 ::= CHECK PARENTESIS_ABIERTO expresion_logica PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // constraint1 ::= DEFAULT data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint1",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // extra_unique ::= PARENTESIS_ABIERTO objeto_nombre mas_de_un_objeto PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_unique",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // extra_unique ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_unique",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // extra_primary ::= opciones_index PARENTESIS_ABIERTO objeto_nombre mas_de_un_objeto tipo_orden PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_primary",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // extra_primary ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("extra_primary",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // constraint2 ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // constraint2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("constraint2",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // expresion_logica ::= otra_condicion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion_logica",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // aux2 ::= constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("aux2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // aux2 ::= CONSTRAINT objeto_nombre constraint1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("aux2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // select ::= SELECT option_select FROM origen joins condicionales agrupado teniendo orden 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("select",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // option_select ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("option_select",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // option_select ::= seleccion columna 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("option_select",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // seleccion ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // seleccion ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // seleccion ::= TOP expresion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // seleccion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("seleccion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // columna ::= columna1 alias_columna columna2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // columna1 ::= funciones 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // columna1 ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // columna1 ::= objeto_nombre ASIGNAR E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna1",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // columna2 ::= COMA option_select 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // columna2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("columna2",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // data_tipo_operacion ::= data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo_operacion",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // data_tipo_operacion ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo_operacion",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // funciones ::= SUM PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // funciones ::= AVG PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // funciones ::= COUNT PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // funciones ::= MIN PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // funciones ::= MAX PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // funciones ::= llamar_funciones 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("funciones",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // valor ::= BIT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // valor ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // valor ::= puede objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // puede ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("puede",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // puede ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("puede",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // alias_columna ::= AS STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // alias_columna ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // alias_columna ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_columna",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // operacion ::= operacion_matematica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // operacion ::= operacion_logica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // operacion_matematica ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion_matematica",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // operacion_logica ::= data_tipo_operacion operadores data_tipo_operacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operacion_logica",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // operador ::= SUMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // operador ::= RESTA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // operador ::= MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // operador ::= DIVISION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // operador ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operador",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // origen ::= objeto_nombre alias_tabla origen1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // origen1 ::= COMA origen 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen1",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // origen1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen1",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // alias_tabla ::= AS STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // alias_tabla ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // alias_tabla ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // alias_tabla ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alias_tabla",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // joins ::= tipo_join JOIN objeto_nombre alias_tabla ON objeto_nombre ASIGNAR objeto_nombre joins 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("joins",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // joins ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("joins",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // tipo_join ::= INNER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // tipo_join ::= LEFT tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // tipo_join ::= RIGHT tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // tipo_join ::= FULL tipo_join1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // tipo_join ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // tipo_join1 ::= OUTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // tipo_join1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_join1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // agrupado ::= GROUP BY objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agrupado",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // agrupado ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agrupado",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // teniendo ::= HAVING teniendo1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // teniendo ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // teniendo1 ::= funciones operadores data_tipo teniendo2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo1",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // teniendo1 ::= objeto_nombre operadores data_tipo teniendo2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo1",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // teniendo2 ::= operadores_logicos teniendo1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo2",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // teniendo2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("teniendo2",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // orden ::= ORDER BY objeto_nombre tipo_orden orden2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // orden ::= ORDER BY funciones tipo_orden orden2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // tipo_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // tipo_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // tipo_orden ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_orden",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // orden2 ::= COMA objeto_nombre tipo_orden orden 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden2",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // orden2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("orden2",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // insert ::= INSERT into objeto_nombre campos VALUES valores 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("insert",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // insert ::= INSERT into objeto_nombre campos DEFAULT VALUES 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("insert",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // into ::= INTO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("into",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // into ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("into",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // campos ::= PARENTESIS_ABIERTO campos2 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // campos ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // campos2 ::= IDENTIFICADOR mas_de_un_identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("campos2",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // mas_de_un_identificador ::= COMA IDENTIFICADOR mas_de_un_identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_identificador",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // mas_de_un_identificador ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_identificador",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // valores ::= PARENTESIS_ABIERTO valores2 PARENTESIS_CERRADO mas_valores 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // valores2 ::= data_tipo mas_valores2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores2",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // mas_valores2 ::= COMA data_tipo mas_valores2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // mas_valores2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // mas_valores ::= COMA valores 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // mas_valores ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_valores",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // drop ::= DROP tipo_objeto 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // if_op ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("if_op",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // if_op ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("if_op",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // tipo_objeto ::= TABLE if_op tabla 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // tipo_objeto ::= index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // tipo_objeto ::= database 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // tipo_objeto ::= PROCEDURE objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // tipo_objeto ::= FUNCTION objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // tipo_objeto ::= USER if_op objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // tipo_objeto ::= VIEW if_op objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_objeto",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // tabla ::= objeto_nombre tabla2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // tabla2 ::= COMA tabla 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla2",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // tabla2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabla2",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // index ::= INDEX if_op objeto_nombre index2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // index2 ::= drop_relational_or_xml_or_spatial_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // index2 ::= drop_backward_compatible_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("index2",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // drop_relational_or_xml_or_spatial_index ::= ON objeto_nombre drop_relational_or_xml_or_spatial_index2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // drop_relational_or_xml_or_spatial_index2 ::= COMA objeto_nombre drop_relational_or_xml_or_spatial_index 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index2",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // drop_relational_or_xml_or_spatial_index2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index2",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // drop_backward_compatible_index ::= objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // drop_backward_compatible_index2 ::= mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index2",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // drop_backward_compatible_index2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("drop_backward_compatible_index2",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // database ::= DATABASE if_op objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("database",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // mas_de_un_objeto ::= COMA objeto_nombre mas_de_un_objeto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_objeto",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // mas_de_un_objeto ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("mas_de_un_objeto",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // truncate ::= TRUNCATE TABLE objeto_nombre 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("truncate",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // update ::= UPDATE opciones_delete objeto_nombre SET objeto_nombre ASIGNAR asignaciones condicionales 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores.");cont++; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("update",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // asignaciones ::= asignaciones1 asignaciones2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // asignaciones2 ::= COMA objeto_nombre ASIGNAR asignaciones condicionales 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // asignaciones2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // asignaciones1 ::= E 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("asignaciones1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // E ::= E SUMA T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // E ::= E RESTA T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // E ::= T 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("E",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // T ::= T MULTIPLICACION F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // T ::= T DIVISION F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // T ::= F 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("T",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // F ::= PARENTESIS_ABIERTO E PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // F ::= objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // F ::= data_tipo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("F",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // NUM ::= INT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NUM",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // NUM ::= BIT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NUM",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // FLOTANTE ::= FLOAT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLOTANTE",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // VALORES_NUMEROS ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VALORES_NUMEROS",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // VALORES_NUMEROS ::= FLOTANTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VALORES_NUMEROS",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // eliminar ::= DELETE opciones_delete FROM objeto_nombre mas_de_un_objeto condicionales 
            {
              Object RESULT =null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); cont++;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("eliminar",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // fin ::= PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // fin ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // opciones_delete ::= TOP expresion porcentaje 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_delete",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // opciones_delete ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_delete",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // expresion ::= PARENTESIS_ABIERTO NUM PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // expresion ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("expresion",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // porcentaje ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("porcentaje",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // porcentaje ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("porcentaje",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // condicionales ::= WHERE objeto_nombre operadores E condicionales1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // condicionales ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // condicionales1 ::= operadores_logicos otra_condicion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // condicionales1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicionales1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // otra_condicion ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("otra_condicion",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // otra_condicion ::= objeto_nombre operadores data_tipo condicionales1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("otra_condicion",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // operadores_logicos ::= AND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores_logicos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // operadores_logicos ::= OR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores_logicos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // data_tipo ::= STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // data_tipo ::= VALORES_NUMEROS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // data_tipo ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // data_tipo ::= VARIABLES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("data_tipo",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // VARIABLES ::= ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VARIABLES",132, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // operadores ::= MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // operadores ::= MENOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // operadores ::= MAYOR_IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // operadores ::= MENOR_IGUAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // operadores ::= DIFERENTE_DE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // operadores ::= LIKE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // operadores ::= BETWEEN NUM AND INT_NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // operadores ::= ASIGNAR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // operadores ::= IS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("operadores",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // objeto_nombre ::= IDENTIFICADOR objeto_nombre1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // objeto_nombre1 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // objeto_nombre1 ::= PUNTO objeto_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre1",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // objeto_nombre2 ::= PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // objeto_nombre2 ::= empty 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("objeto_nombre2",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
