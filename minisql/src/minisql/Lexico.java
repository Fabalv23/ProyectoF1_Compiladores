/* The following code was generated by JFlex 1.7.0 */

package minisql;
import static minisql.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/fabia/Desktop/Url 2do Ciclo 2019/Compiladores/Proyecto_F1/Github/ProyectoF1_Compiladores/minisql/src/minisql/Lexico.flex</tt>
 */
class Lexico {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\70\1\71\1\71\1\4\22\0\1\3\1\52\1\0"+
    "\1\66\2\0\1\53\1\5\1\61\1\62\1\45\1\44\1\6\1\42"+
    "\1\56\1\46\1\43\1\43\10\2\1\0\1\55\1\47\1\50\1\51"+
    "\1\0\1\65\1\7\1\25\1\21\1\10\1\11\1\23\1\31\1\24"+
    "\1\26\1\40\1\33\1\16\1\34\1\15\1\20\1\17\1\41\1\14"+
    "\1\27\1\13\1\22\1\36\1\35\1\12\1\30\1\32\1\57\1\0"+
    "\1\60\1\0\1\37\1\0\4\1\1\67\25\1\1\63\1\54\1\64"+
    "\7\0\1\71\u1fa2\0\1\71\1\71\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\30\2"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\2\1\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\2\1\34"+
    "\6\2\1\35\20\2\1\36\12\2\1\37\15\2\1\40"+
    "\1\41\3\2\1\42\31\2\1\43\1\2\1\44\1\45"+
    "\1\46\21\2\1\47\17\2\1\0\1\50\1\51\1\52"+
    "\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62"+
    "\1\0\1\63\1\64\1\65\1\66\1\67\1\2\1\70"+
    "\3\2\1\71\1\2\1\72\1\2\1\73\3\2\1\74"+
    "\16\2\1\75\11\2\1\76\23\2\1\77\20\2\1\100"+
    "\20\2\1\101\26\2\1\102\6\2\1\103\17\2\1\104"+
    "\2\2\1\105\10\2\1\106\12\2\1\107\4\2\1\110"+
    "\1\2\1\111\5\2\1\112\1\2\1\113\4\2\1\114"+
    "\12\2\1\4\2\0\1\32\1\0\7\2\1\115\1\2"+
    "\1\116\5\2\1\117\1\120\2\2\1\121\1\122\3\2"+
    "\1\123\1\124\3\2\1\125\2\2\1\0\1\126\4\2"+
    "\1\127\1\2\1\130\2\2\1\131\1\2\1\132\1\133"+
    "\2\2\1\134\1\135\12\2\1\136\1\2\1\137\4\2"+
    "\1\140\1\141\3\2\1\142\2\2\1\143\1\2\1\144"+
    "\1\2\1\145\4\2\1\146\6\2\1\147\4\2\1\150"+
    "\4\2\1\151\1\152\5\2\1\153\1\2\1\154\1\155"+
    "\22\2\1\156\10\2\1\157\4\2\1\160\5\2\1\161"+
    "\1\2\1\162\3\2\1\163\5\2\1\164\1\165\5\2"+
    "\1\166\7\2\1\167\11\2\1\170\4\2\1\171\6\2"+
    "\1\172\3\2\1\173\1\174\1\175\7\2\1\176\1\2"+
    "\1\177\1\2\1\200\3\2\1\201\1\202\1\203\31\2"+
    "\1\0\1\2\1\204\30\2\1\205\2\2\1\206\2\2"+
    "\1\207\4\2\1\210\1\211\1\212\1\213\10\2\1\214"+
    "\1\215\4\2\1\216\1\217\6\2\1\220\6\2\1\221"+
    "\1\222\12\2\1\223\6\2\1\224\1\2\1\225\3\2"+
    "\1\226\1\227\1\230\1\231\1\232\1\2\1\233\2\2"+
    "\1\234\1\2\1\235\5\2\1\236\1\237\3\2\1\240"+
    "\3\2\1\241\1\242\16\2\1\243\7\2\1\244\3\2"+
    "\1\245\1\246\1\2\1\247\1\250\1\2\1\251\2\2"+
    "\1\252\1\253\1\2\1\254\3\2\1\255\1\2\1\256"+
    "\5\2\1\257\5\2\1\260\1\261\7\2\1\262\1\263"+
    "\1\264\1\0\1\265\16\2\1\266\6\2\1\267\1\270"+
    "\7\2\1\271\3\2\1\272\1\2\1\273\10\2\1\274"+
    "\4\2\1\275\1\2\1\276\4\2\1\277\11\2\1\300"+
    "\1\2\1\301\1\2\1\302\4\2\1\303\1\2\1\304"+
    "\5\2\1\305\1\2\1\306\1\2\1\307\10\2\1\310"+
    "\4\2\1\311\1\2\1\312\4\2\1\313\1\314\10\2"+
    "\1\315\1\316\1\317\6\2\1\320\6\2\1\321\1\322"+
    "\1\323\10\2\1\324\1\2\1\325\1\2\1\0\7\2"+
    "\1\326\3\2\1\327\7\2\1\330\3\2\1\331\2\2"+
    "\1\332\1\333\1\2\1\334\1\335\1\336\1\337\3\2"+
    "\1\340\3\2\1\341\3\2\1\342\1\2\1\343\1\344"+
    "\5\2\1\345\1\2\1\346\1\347\1\2\1\350\1\351"+
    "\3\2\1\352\1\353\2\2\1\354\1\355\3\2\1\356"+
    "\5\2\1\357\1\360\4\2\1\361\1\362\1\2\1\363"+
    "\7\2\1\364\2\2\1\365\3\2\1\366\1\367\1\370"+
    "\1\2\1\371\1\2\1\372\2\2\1\373\1\2\1\374"+
    "\2\2\1\375\1\2\1\376\1\2\1\377\1\2\1\u0100"+
    "\3\2\1\u0101\1\u0102\4\2\1\u0103\1\u0104\3\2\1\u0105"+
    "\1\u0106\1\u0107\1\2\1\u0108\1\2\1\u0109\1\2\1\u010a"+
    "\2\2\1\u010b\4\2\1\u010c\1\u010d\1\2\1\u010e\1\2"+
    "\1\u010f\1\u0110\10\2\1\u0111\1\u0112\1\2\1\u0113\1\2"+
    "\1\u0114\2\2\1\u0115\11\2\1\u0116\1\2\1\u0117\1\u0118"+
    "\1\u0119\2\2\1\u011a\2\2\1\u011b\6\2\1\u011c\1\2"+
    "\1\u011d\1\2\1\u011e\2\2\1\u011f\1\2\1\u0120\5\2"+
    "\1\u0121\1\u0122\3\2\1\u0123\1\2\1\u0124\4\2\1\u0125"+
    "\3\2\1\u0126\10\2\1\u0127\1\u0128\1\u0129\1\2\1\u012a"+
    "\1\u012b\5\2\1\u012c\2\2\1\u012d\2\2\1\u012e\1\u012f"+
    "\1\u0130\2\2\1\u0131\10\2\1\u0132\1\u0133\1\2\1\u0134"+
    "\1\2\1\u0135\3\2\1\u0136\1\u0137\5\2\1\u0138\1\u0139"+
    "\1\2\1\u013a\1\u013b\7\2\1\u013c\1\2\1\u013d\2\2"+
    "\1\u013e\1\u013f\1\u0140\1\u0141\1\u0142\1\u0143\2\2\1\u0144"+
    "\1\u0145\5\2\1\u0146\4\2\1\u0147\1\2\1\u0148\1\2"+
    "\1\u0149\4\2\1\u014a\1\u014b\3\2\1\u014c\1\2\1\u014d"+
    "\2\2\1\u014e\1\u014f\1\u0150\4\2\1\u0151\2\2\1\u0152"+
    "\1\u0153\2\2\1\u0154\1\u0155\2\2\1\u0156\1\2\1\u0157"+
    "\3\2\1\u0158\5\2\1\u0159\2\2\1\u015a\3\2\1\u015b"+
    "\2\2\1\u015c\17\2\1\u015d\1\2\1\u015e\6\2\1\u015f";

  private static int [] zzUnpackAction() {
    int [] result = new int[1395];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\72\0\164\0\256\0\72\0\350\0\72\0\u0122"+
    "\0\u015c\0\u0196\0\u01d0\0\u020a\0\u0244\0\u027e\0\u02b8\0\u02f2"+
    "\0\u032c\0\u0366\0\u03a0\0\u03da\0\u0414\0\u044e\0\u0488\0\u04c2"+
    "\0\u04fc\0\u0536\0\u0570\0\u05aa\0\u05e4\0\u061e\0\u0658\0\u0692"+
    "\0\256\0\72\0\72\0\u06cc\0\u0706\0\u0740\0\u077a\0\u07b4"+
    "\0\u07ee\0\u0828\0\72\0\72\0\u0862\0\72\0\u089c\0\72"+
    "\0\u08d6\0\72\0\72\0\u0910\0\u094a\0\72\0\u0984\0\164"+
    "\0\u09be\0\u09f8\0\u0a32\0\u0a6c\0\u0aa6\0\u0ae0\0\u0b1a\0\u0b54"+
    "\0\u0b8e\0\u0bc8\0\u0c02\0\u0c3c\0\u0c76\0\u0cb0\0\u0cea\0\u0d24"+
    "\0\u0d5e\0\u0d98\0\u0dd2\0\u0e0c\0\u0e46\0\u0e80\0\u0eba\0\u0ef4"+
    "\0\u0f2e\0\u0f68\0\u0fa2\0\u0fdc\0\u1016\0\u1050\0\u108a\0\u10c4"+
    "\0\u10fe\0\u1138\0\u1172\0\u11ac\0\u11e6\0\u1220\0\u125a\0\u1294"+
    "\0\u12ce\0\u1308\0\u1342\0\u137c\0\u13b6\0\u13f0\0\u142a\0\u1464"+
    "\0\u149e\0\u14d8\0\u1512\0\u154c\0\u1586\0\u15c0\0\u15fa\0\u1634"+
    "\0\u166e\0\u16a8\0\u16e2\0\u171c\0\u1756\0\u1790\0\u17ca\0\u1804"+
    "\0\u183e\0\u1878\0\u18b2\0\u18ec\0\u1926\0\u1960\0\u199a\0\u19d4"+
    "\0\u1a0e\0\u1a48\0\u1a82\0\u1abc\0\u1af6\0\u1b30\0\u1b6a\0\164"+
    "\0\u1ba4\0\u1bde\0\164\0\u1c18\0\u1c52\0\u1c8c\0\u1cc6\0\u1d00"+
    "\0\u1d3a\0\u1d74\0\u1dae\0\u1de8\0\u1e22\0\u1e5c\0\u1e96\0\u1ed0"+
    "\0\u1f0a\0\u1f44\0\u1f7e\0\u1fb8\0\u1ff2\0\u202c\0\u2066\0\u20a0"+
    "\0\u20da\0\u2114\0\u214e\0\u2188\0\u21c2\0\u21fc\0\u2236\0\u2270"+
    "\0\u22aa\0\u22e4\0\u231e\0\u2358\0\u2392\0\u23cc\0\u2406\0\72"+
    "\0\72\0\72\0\72\0\72\0\72\0\72\0\72\0\72"+
    "\0\72\0\u2440\0\164\0\164\0\164\0\164\0\164\0\u247a"+
    "\0\u24b4\0\u24ee\0\u2528\0\u2562\0\164\0\u259c\0\164\0\u25d6"+
    "\0\164\0\u2610\0\u264a\0\u2684\0\u26be\0\u26f8\0\u2732\0\u276c"+
    "\0\u27a6\0\u27e0\0\u281a\0\u2854\0\u288e\0\u28c8\0\u2902\0\u293c"+
    "\0\u2976\0\u29b0\0\u29ea\0\u2a24\0\u2a5e\0\u2a98\0\u2ad2\0\u2b0c"+
    "\0\u2b46\0\u2b80\0\u2bba\0\u2bf4\0\u2c2e\0\164\0\u2c68\0\u2ca2"+
    "\0\u2cdc\0\u2d16\0\u2d50\0\u2d8a\0\u2dc4\0\u2dfe\0\u2e38\0\u2e72"+
    "\0\u2eac\0\u2ee6\0\u2f20\0\u2f5a\0\u2f94\0\u2fce\0\u3008\0\u3042"+
    "\0\u307c\0\164\0\u30b6\0\u30f0\0\u312a\0\u3164\0\u319e\0\u31d8"+
    "\0\u3212\0\u324c\0\u3286\0\u32c0\0\u32fa\0\u3334\0\u336e\0\u33a8"+
    "\0\u33e2\0\u341c\0\164\0\u3456\0\u3490\0\u34ca\0\u3504\0\u353e"+
    "\0\u3578\0\u35b2\0\u35ec\0\u3626\0\u3660\0\u369a\0\u36d4\0\u370e"+
    "\0\u3748\0\u3782\0\u37bc\0\u37f6\0\u3830\0\u386a\0\u38a4\0\u38de"+
    "\0\u3918\0\u3952\0\u398c\0\u39c6\0\u3a00\0\u3a3a\0\u3a74\0\u3aae"+
    "\0\u3ae8\0\u3b22\0\u3b5c\0\u3b96\0\u3bd0\0\u3c0a\0\u3c44\0\u3c7e"+
    "\0\u3cb8\0\u3cf2\0\u3d2c\0\u3d66\0\u3da0\0\u3dda\0\u3e14\0\u3e4e"+
    "\0\u3e88\0\u3ec2\0\u3efc\0\u3f36\0\u3f70\0\u3faa\0\u3fe4\0\u401e"+
    "\0\u4058\0\u4092\0\u40cc\0\u4106\0\u4140\0\u417a\0\u41b4\0\u41ee"+
    "\0\u4228\0\u4262\0\u429c\0\u42d6\0\u4310\0\u434a\0\u4384\0\u43be"+
    "\0\u43f8\0\u4432\0\u446c\0\u44a6\0\u44e0\0\u451a\0\u4554\0\u458e"+
    "\0\u45c8\0\u4602\0\u463c\0\u4676\0\u46b0\0\u46ea\0\u4724\0\u475e"+
    "\0\164\0\u4798\0\u47d2\0\u480c\0\u4846\0\u4880\0\u48ba\0\164"+
    "\0\u48f4\0\u492e\0\u4968\0\u49a2\0\u49dc\0\164\0\u4a16\0\164"+
    "\0\u4a50\0\u4a8a\0\u4ac4\0\u4afe\0\u4b38\0\u4b72\0\u4bac\0\u4be6"+
    "\0\u4c20\0\u4c5a\0\u4c94\0\u4cce\0\u4d08\0\u4d42\0\u4d7c\0\u4db6"+
    "\0\u4df0\0\u4e2a\0\u4e64\0\u4e64\0\u4e9e\0\u4ed8\0\u4f12\0\u4f4c"+
    "\0\u4f86\0\u4fc0\0\u4ffa\0\164\0\u5034\0\164\0\u506e\0\u50a8"+
    "\0\u50e2\0\u511c\0\u5156\0\u5190\0\164\0\u51ca\0\u5204\0\164"+
    "\0\164\0\u523e\0\u5278\0\u52b2\0\164\0\u52ec\0\u5326\0\u5360"+
    "\0\u539a\0\164\0\u53d4\0\u540e\0\u5448\0\164\0\u5482\0\u54bc"+
    "\0\u54f6\0\u5530\0\u556a\0\u55a4\0\164\0\u55de\0\u5618\0\164"+
    "\0\u5652\0\164\0\u568c\0\u56c6\0\u5700\0\u573a\0\164\0\u5774"+
    "\0\u57ae\0\u57e8\0\u5822\0\u585c\0\u5896\0\u58d0\0\u590a\0\u5944"+
    "\0\u597e\0\164\0\u59b8\0\164\0\u59f2\0\u5a2c\0\u5a66\0\u5aa0"+
    "\0\164\0\164\0\u5ada\0\u5b14\0\u5b4e\0\u5b88\0\u5bc2\0\u5bfc"+
    "\0\164\0\u5c36\0\164\0\u5c70\0\164\0\u5caa\0\u5ce4\0\u5d1e"+
    "\0\u5d58\0\164\0\u5d92\0\u5dcc\0\u5e06\0\u5e40\0\u5e7a\0\u5eb4"+
    "\0\u5eee\0\u5f28\0\u5f62\0\u5f9c\0\u5fd6\0\164\0\u6010\0\u604a"+
    "\0\u6084\0\u60be\0\164\0\u60f8\0\u6132\0\u616c\0\u61a6\0\u61e0"+
    "\0\u621a\0\u6254\0\u628e\0\164\0\164\0\u62c8\0\u6302\0\u633c"+
    "\0\u6376\0\u63b0\0\u63ea\0\u6424\0\u645e\0\u6498\0\u64d2\0\u650c"+
    "\0\u6546\0\u6580\0\u65ba\0\u65f4\0\u662e\0\u6668\0\u66a2\0\u66dc"+
    "\0\u6716\0\u6750\0\u678a\0\u67c4\0\u67fe\0\u6838\0\u6872\0\u68ac"+
    "\0\164\0\u68e6\0\u6920\0\u695a\0\u6994\0\164\0\u69ce\0\u6a08"+
    "\0\u6a42\0\u6a7c\0\u6ab6\0\164\0\u6af0\0\164\0\u6b2a\0\u6b64"+
    "\0\u6b9e\0\164\0\u6bd8\0\u6c12\0\u6c4c\0\u6c86\0\u6cc0\0\164"+
    "\0\164\0\u6cfa\0\u6d34\0\u6d6e\0\u6da8\0\u6de2\0\164\0\u6e1c"+
    "\0\u6e56\0\u6e90\0\u6eca\0\u6f04\0\u6f3e\0\u6f78\0\164\0\u6fb2"+
    "\0\u6fec\0\u7026\0\u7060\0\u709a\0\u70d4\0\u710e\0\u7148\0\u7182"+
    "\0\164\0\u71bc\0\u71f6\0\u7230\0\u726a\0\164\0\u72a4\0\u72de"+
    "\0\u7318\0\u7352\0\u738c\0\u73c6\0\164\0\u7400\0\u743a\0\u7474"+
    "\0\164\0\164\0\164\0\u74ae\0\u74e8\0\u7522\0\u755c\0\u7596"+
    "\0\u75d0\0\u760a\0\164\0\u7644\0\u767e\0\u76b8\0\u76f2\0\u772c"+
    "\0\u7766\0\u77a0\0\164\0\164\0\164\0\u77da\0\u7814\0\u784e"+
    "\0\u7888\0\u78c2\0\u78fc\0\u7936\0\u7970\0\u79aa\0\u79e4\0\u7a1e"+
    "\0\u7a58\0\u7a92\0\u7acc\0\u7b06\0\u7b40\0\u7b7a\0\u7bb4\0\u7bee"+
    "\0\u7c28\0\u7c62\0\u7c9c\0\u7cd6\0\u7d10\0\u7d4a\0\u7d84\0\u7dbe"+
    "\0\u7df8\0\u7e32\0\u7e6c\0\u7ea6\0\u7ee0\0\u7f1a\0\u7f54\0\u7f8e"+
    "\0\u7fc8\0\u8002\0\u803c\0\u8076\0\u80b0\0\u80ea\0\u8124\0\u815e"+
    "\0\u8198\0\u81d2\0\u820c\0\u8246\0\u8280\0\u82ba\0\u82f4\0\u832e"+
    "\0\u8368\0\164\0\u83a2\0\u83dc\0\164\0\u8416\0\u8450\0\164"+
    "\0\u848a\0\u84c4\0\u84fe\0\u8538\0\164\0\164\0\164\0\164"+
    "\0\u8572\0\u85ac\0\u85e6\0\u8620\0\u865a\0\u8694\0\u86ce\0\u8708"+
    "\0\164\0\164\0\u8742\0\u877c\0\u87b6\0\u87f0\0\164\0\164"+
    "\0\u882a\0\u8864\0\u889e\0\u88d8\0\u8912\0\u894c\0\164\0\u8986"+
    "\0\u89c0\0\u89fa\0\u8a34\0\u8a6e\0\u8aa8\0\164\0\164\0\u8ae2"+
    "\0\u8b1c\0\u8b56\0\u8b90\0\u8bca\0\u8c04\0\u8c3e\0\u8c78\0\u8cb2"+
    "\0\u8cec\0\164\0\u8d26\0\u8d60\0\u8d9a\0\u8dd4\0\u8e0e\0\u8e48"+
    "\0\u8e82\0\u8ebc\0\164\0\u8ef6\0\u8f30\0\u8f6a\0\164\0\164"+
    "\0\164\0\164\0\164\0\u8fa4\0\164\0\u8fde\0\u9018\0\164"+
    "\0\u9052\0\164\0\u908c\0\u90c6\0\u9100\0\u913a\0\u9174\0\164"+
    "\0\164\0\u91ae\0\u91e8\0\u9222\0\164\0\u925c\0\u9296\0\u92d0"+
    "\0\164\0\164\0\u930a\0\u9344\0\u937e\0\u93b8\0\u93f2\0\u942c"+
    "\0\u9466\0\u94a0\0\u94da\0\u9514\0\u954e\0\u9588\0\u95c2\0\u95fc"+
    "\0\164\0\u9636\0\u9670\0\u96aa\0\u96e4\0\u971e\0\u9758\0\u9792"+
    "\0\164\0\u97cc\0\u9806\0\u9840\0\164\0\164\0\u987a\0\164"+
    "\0\164\0\u98b4\0\164\0\u98ee\0\u9928\0\u9962\0\164\0\u999c"+
    "\0\164\0\u99d6\0\u9a10\0\u9a4a\0\u9a84\0\u9abe\0\164\0\u9af8"+
    "\0\u9b32\0\u9b6c\0\u9ba6\0\u9be0\0\164\0\u9c1a\0\u9c54\0\u9c8e"+
    "\0\u9cc8\0\u9d02\0\164\0\164\0\u9d3c\0\u9d76\0\u9db0\0\u9dea"+
    "\0\u9e24\0\u9e5e\0\u9e98\0\u9ed2\0\164\0\164\0\u9f0c\0\164"+
    "\0\u9f46\0\u9f80\0\u9fba\0\u9ff4\0\ua02e\0\ua068\0\ua0a2\0\ua0dc"+
    "\0\ua116\0\ua150\0\ua18a\0\ua1c4\0\ua1fe\0\ua238\0\164\0\ua272"+
    "\0\ua2ac\0\ua2e6\0\ua320\0\ua35a\0\ua394\0\164\0\164\0\ua3ce"+
    "\0\ua408\0\ua442\0\ua47c\0\ua4b6\0\ua4f0\0\ua52a\0\164\0\ua564"+
    "\0\ua59e\0\ua5d8\0\164\0\ua612\0\164\0\ua64c\0\ua686\0\ua6c0"+
    "\0\ua6fa\0\ua734\0\ua76e\0\ua7a8\0\ua7e2\0\164\0\ua81c\0\ua856"+
    "\0\ua890\0\ua8ca\0\164\0\ua904\0\164\0\ua93e\0\ua978\0\ua9b2"+
    "\0\ua9ec\0\164\0\uaa26\0\uaa60\0\uaa9a\0\uaad4\0\uab0e\0\uab48"+
    "\0\uab82\0\uabbc\0\uabf6\0\164\0\uac30\0\164\0\uac6a\0\164"+
    "\0\uaca4\0\uacde\0\uad18\0\uad52\0\164\0\uad8c\0\uadc6\0\uae00"+
    "\0\uae3a\0\uae74\0\uaeae\0\uaee8\0\164\0\uaf22\0\164\0\uaf5c"+
    "\0\164\0\uaf96\0\uafd0\0\ub00a\0\ub044\0\ub07e\0\ub0b8\0\ub0f2"+
    "\0\ub12c\0\164\0\ub166\0\ub1a0\0\ub1da\0\ub214\0\164\0\ub24e"+
    "\0\164\0\ub288\0\ub2c2\0\ub2fc\0\ub336\0\164\0\164\0\ub370"+
    "\0\ub3aa\0\ub3e4\0\ub41e\0\ub458\0\ub492\0\ub4cc\0\ub506\0\164"+
    "\0\164\0\164\0\ub540\0\ub57a\0\ub5b4\0\ub5ee\0\ub628\0\ub662"+
    "\0\164\0\ub69c\0\ub6d6\0\ub710\0\ub74a\0\ub784\0\ub7be\0\164"+
    "\0\164\0\164\0\ub7f8\0\ub832\0\ub86c\0\ub8a6\0\ub8e0\0\ub91a"+
    "\0\ub954\0\ub98e\0\164\0\ub9c8\0\164\0\uba02\0\uba3c\0\uba76"+
    "\0\ubab0\0\ubaea\0\ubb24\0\ubb5e\0\ubb98\0\ubbd2\0\164\0\ubc0c"+
    "\0\ubc46\0\ubc80\0\164\0\ubcba\0\ubcf4\0\ubd2e\0\ubd68\0\ubda2"+
    "\0\ubddc\0\ube16\0\164\0\ube50\0\ube8a\0\ubec4\0\164\0\ubefe"+
    "\0\ubf38\0\164\0\164\0\ubf72\0\164\0\164\0\164\0\164"+
    "\0\ubfac\0\ubfe6\0\uc020\0\164\0\uc05a\0\uc094\0\uc0ce\0\164"+
    "\0\uc108\0\uc142\0\uc17c\0\164\0\uc1b6\0\164\0\uc1f0\0\uc22a"+
    "\0\uc264\0\uc29e\0\uc2d8\0\uc312\0\uc34c\0\uc386\0\164\0\164"+
    "\0\uc3c0\0\164\0\uc3fa\0\uc434\0\uc46e\0\uc4a8\0\164\0\164"+
    "\0\uc4e2\0\uc51c\0\164\0\164\0\uc556\0\uc590\0\uc5ca\0\164"+
    "\0\uc604\0\uc63e\0\uc678\0\uc6b2\0\uc6ec\0\164\0\164\0\uc726"+
    "\0\uc760\0\uc79a\0\uc7d4\0\164\0\164\0\uc80e\0\uc848\0\uc882"+
    "\0\uc8bc\0\uc8f6\0\uc930\0\uc96a\0\uc9a4\0\uc9de\0\164\0\uca18"+
    "\0\uca52\0\164\0\uca8c\0\ucac6\0\ucb00\0\164\0\164\0\164"+
    "\0\ucb3a\0\164\0\ucb74\0\164\0\ucbae\0\ucbe8\0\164\0\ucc22"+
    "\0\164\0\ucc5c\0\ucc96\0\164\0\uccd0\0\164\0\ucd0a\0\72"+
    "\0\ucd44\0\164\0\ucd7e\0\ucdb8\0\ucdf2\0\164\0\164\0\uce2c"+
    "\0\uce66\0\ucea0\0\uceda\0\164\0\164\0\ucf14\0\ucf4e\0\ucf88"+
    "\0\164\0\164\0\164\0\ucfc2\0\164\0\ucffc\0\164\0\ud036"+
    "\0\164\0\ud070\0\ud0aa\0\164\0\ud0e4\0\ud11e\0\ud158\0\ud192"+
    "\0\164\0\164\0\ud1cc\0\164\0\ud206\0\ud240\0\164\0\ud27a"+
    "\0\ud2b4\0\ud2ee\0\ud328\0\ud362\0\ud39c\0\ud3d6\0\ud410\0\ud44a"+
    "\0\164\0\ud484\0\164\0\ud4be\0\ud4f8\0\ud532\0\ud56c\0\164"+
    "\0\ud5a6\0\ud5e0\0\ud61a\0\ud654\0\ud68e\0\ud6c8\0\ud702\0\ud73c"+
    "\0\ud776\0\164\0\ud7b0\0\164\0\164\0\164\0\ud7ea\0\ud824"+
    "\0\164\0\ud85e\0\ud898\0\164\0\ud8d2\0\ud90c\0\ud946\0\ud980"+
    "\0\ud9ba\0\ud9f4\0\164\0\uda2e\0\164\0\uda68\0\164\0\udaa2"+
    "\0\udadc\0\164\0\udb16\0\164\0\udb50\0\udb8a\0\udbc4\0\udbfe"+
    "\0\udc38\0\164\0\164\0\udc72\0\udcac\0\udce6\0\164\0\udd20"+
    "\0\164\0\udd5a\0\udd94\0\uddce\0\ude08\0\164\0\ude42\0\ude7c"+
    "\0\udeb6\0\udef0\0\udf2a\0\udf64\0\udf9e\0\udfd8\0\ue012\0\ue04c"+
    "\0\ue086\0\ue0c0\0\164\0\164\0\164\0\ue0fa\0\164\0\164"+
    "\0\ue134\0\ue16e\0\ue1a8\0\ue1e2\0\ue21c\0\164\0\ue256\0\ue290"+
    "\0\164\0\ue2ca\0\ue304\0\164\0\164\0\164\0\ue33e\0\ue378"+
    "\0\164\0\ue3b2\0\ue3ec\0\ue426\0\ue460\0\ue49a\0\ue4d4\0\ue50e"+
    "\0\ue548\0\164\0\164\0\ue582\0\164\0\ue5bc\0\164\0\ue5f6"+
    "\0\ue630\0\ue66a\0\164\0\ue6a4\0\ue6de\0\ue718\0\ue752\0\ue78c"+
    "\0\ue7c6\0\164\0\164\0\ue800\0\164\0\164\0\ue83a\0\ue874"+
    "\0\ue8ae\0\ue8e8\0\ue922\0\ue95c\0\ue996\0\164\0\ue9d0\0\164"+
    "\0\uea0a\0\uea44\0\164\0\164\0\164\0\164\0\164\0\164"+
    "\0\uea7e\0\ueab8\0\164\0\164\0\ueaf2\0\ueb2c\0\ueb66\0\ueba0"+
    "\0\uebda\0\164\0\uec14\0\uec4e\0\uec88\0\uecc2\0\164\0\uecfc"+
    "\0\164\0\ued36\0\164\0\ued70\0\uedaa\0\uede4\0\uee1e\0\164"+
    "\0\164\0\uee58\0\uee92\0\ueecc\0\164\0\uef06\0\164\0\uef40"+
    "\0\uef7a\0\164\0\uefb4\0\164\0\uefee\0\uf028\0\uf062\0\uf09c"+
    "\0\164\0\uf0d6\0\uf110\0\164\0\164\0\uf14a\0\uf184\0\164"+
    "\0\164\0\uf1be\0\uf1f8\0\164\0\uf232\0\164\0\uf26c\0\uf2a6"+
    "\0\uf2e0\0\164\0\uf31a\0\uf354\0\uf38e\0\uf3c8\0\uf402\0\164"+
    "\0\uf43c\0\uf476\0\164\0\uf4b0\0\uf4ea\0\uf524\0\164\0\uf55e"+
    "\0\uf598\0\164\0\uf5d2\0\uf60c\0\uf646\0\uf680\0\uf6ba\0\uf6f4"+
    "\0\uf72e\0\uf768\0\uf7a2\0\uf7dc\0\uf816\0\uf850\0\uf88a\0\uf8c4"+
    "\0\uf8fe\0\164\0\uf938\0\164\0\uf972\0\uf9ac\0\uf9e6\0\ufa20"+
    "\0\ufa5a\0\ufa94\0\164";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1395];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\2\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\3\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\1\3\1\37"+
    "\1\3\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\3\1\5"+
    "\74\0\2\3\4\0\33\3\1\0\1\3\23\0\1\3"+
    "\4\0\1\4\40\0\1\4\12\0\1\65\13\0\5\6"+
    "\1\66\62\6\1\0\1\6\1\0\2\3\4\0\1\3"+
    "\1\67\2\3\1\70\1\71\1\72\1\73\2\3\1\74"+
    "\1\75\2\3\1\76\1\3\1\77\6\3\1\100\3\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\101"+
    "\1\3\1\102\2\3\1\103\3\3\1\104\1\3\1\105"+
    "\2\3\1\106\1\107\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\3\3\1\110\1\3\1\111\1\112"+
    "\1\113\10\3\1\114\12\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\115\1\3\1\116\2\3\1\117"+
    "\3\3\1\120\3\3\1\121\1\3\1\122\1\123\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\124"+
    "\1\3\1\125\6\3\1\126\1\3\1\127\3\3\1\130"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\131\1\3\1\132\6\3\1\133\1\134\1\135\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\136"+
    "\1\3\1\137\6\3\1\140\5\3\1\141\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\142\1\3"+
    "\1\143\2\3\1\144\1\3\1\145\1\3\1\146\1\3"+
    "\1\147\3\3\1\150\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\151\1\152\1\3\1\153"+
    "\1\3\1\154\1\155\1\156\12\3\1\157\3\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\160\4\3"+
    "\1\161\1\3\1\162\1\3\1\163\1\3\1\164\1\3"+
    "\1\165\15\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\166\1\3\1\167\7\3\1\170\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\171"+
    "\1\3\1\172\2\3\1\173\1\3\1\174\1\3\1\175"+
    "\1\3\1\176\3\3\1\177\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\200\10\3\1\201\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\202"+
    "\1\3\1\203\2\3\1\204\3\3\1\205\1\3\1\206"+
    "\3\3\1\207\1\3\1\210\11\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\3\1\211\4\3\1\212"+
    "\5\3\1\213\3\3\1\214\4\3\1\215\5\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\216\1\3"+
    "\1\217\1\3\1\220\3\3\1\221\1\222\1\223\1\224"+
    "\1\3\1\225\1\3\1\226\1\3\1\227\3\3\1\230"+
    "\4\3\1\231\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\232\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\233\2\3\1\234\1\3"+
    "\1\235\1\3\1\236\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\237\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\240\14\3"+
    "\1\241\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\242\1\3\1\243\6\3\1\244\5\3\1\245"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\246\4\3\1\247\3\3\1\250\3\3\1\251\1\3"+
    "\1\252\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\253\16\3\1\254\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\255\21\3\1\0"+
    "\1\3\23\0\1\3\44\0\1\256\74\0\1\257\74\0"+
    "\1\260\71\0\1\261\71\0\1\262\71\0\1\263\74\0"+
    "\1\264\72\0\1\265\75\0\1\266\73\0\1\267\73\0"+
    "\1\270\73\0\1\271\5\0\1\65\6\0\1\272\31\0"+
    "\1\65\23\0\1\272\3\0\2\3\4\0\1\273\1\274"+
    "\31\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\275\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\3\1\276\17\3\1\277\11\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\300"+
    "\2\3\1\301\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\302\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\303\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\304"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\305\5\3\1\306\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\22\3\1\307\10\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\310"+
    "\14\3\1\311\11\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\312\5\3\1\313\1\314\2\3\1\315"+
    "\1\3\1\316\3\3\1\317\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\320\21\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\13\3\1\321"+
    "\11\3\1\322\5\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\25\3\1\323\5\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\12\3\1\324\20\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\325\17\3"+
    "\1\326\12\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\327\1\3\1\330\5\3\1\331\4\3"+
    "\1\332\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\333\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\3\1\334\31\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\335\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\336\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\16\3\1\337\14\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\3\3\1\340\21\3\1\341\5\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\342"+
    "\12\3\1\343\3\3\1\344\1\3\1\345\11\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\10\3\1\346"+
    "\22\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\347\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\25\3\1\350\5\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\351\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\352"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\353\3\3\1\354\2\3\1\355\1\356\1\3\1\357"+
    "\1\3\1\360\3\3\1\361\6\3\1\362\3\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\7\3\1\363"+
    "\16\3\1\364\4\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\365\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\22\3\1\366\10\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\367"+
    "\20\3\1\370\5\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\3\3\1\371\27\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\372\1\3\1\373"+
    "\3\3\1\374\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\15\3\1\375\15\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\376\15\3\1\377"+
    "\5\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0100\11\3\1\u0101\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u0102\13\3\1\u0103\12\3"+
    "\1\u0104\3\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u0105\11\3\1\u0106\7\3\1\u0107\3\3\1\u0108"+
    "\4\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0109\15\3\1\u010a\6\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\3\1\u010b\3\3\1\u010c"+
    "\12\3\1\u010d\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u010e\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u010f\6\3\1\u0110"+
    "\5\3\1\u0111\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u0112\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u0113\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\16\3\1\u0114\14\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\27\3"+
    "\1\u0115\3\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u0116\31\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u0117\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0118\1\3"+
    "\1\u0119\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u011a\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u011b\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\14\3\1\u011c\16\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u011d\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u011e\13\3\1\u011f\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0120\6\3"+
    "\1\u0121\21\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0122\1\3\1\u0123\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u0124\4\3\1\u0125"+
    "\1\u0126\1\u0127\3\3\1\u0128\11\3\1\u0129\5\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u012a"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u012b\1\3\1\u012c\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\10\3\1\u012d\6\3\1\u012e\4\3"+
    "\1\u012f\6\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u0130\6\3\1\u0131\22\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u0132\1\3\1\u0133"+
    "\14\3\1\u0134\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u0135\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0136\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0137"+
    "\6\3\1\u0138\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u0139\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u013a\5\3\1\u013b"+
    "\17\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u013c\1\u013d\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u013e\1\3\1\u013f\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\27\3"+
    "\1\u0140\3\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u0141\3\3\1\u0142\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u0143\20\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u0144\15\3\1\u0145\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0146\6\3\1\u0147\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u0148\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u0149\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u014a\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u014b\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\3"+
    "\1\u014c\2\3\1\u014d\1\3\1\u014e\1\3\1\u014f\1\3"+
    "\1\u0150\4\3\1\u0151\1\u0152\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\u0153\21\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\25\3\1\u0154"+
    "\5\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\27\3\1\u0155\3\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u0156\2\3\1\u0157\2\3\1\u0158"+
    "\5\3\1\u0159\4\3\1\u015a\5\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u015b\32\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u015c\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\25\3\1\u015d"+
    "\5\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u015e\7\3\1\u015f\15\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\16\3\1\u0160\6\3\1\u0161"+
    "\5\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\13\3\1\u0162\17\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\23\3\1\u0163\7\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\20\3\1\u0164\12\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u0165\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u0166\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u0167\32\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u0168\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u0169\10\3\1\u016a\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\11\3"+
    "\1\u016b\21\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u016c\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u016d\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\21\3\1\u016e\11\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u016f\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\3\3\1\u0170\1\u0171\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u0172\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\3\1\u0173"+
    "\4\3\1\u0174\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\6\3\1\u0175\24\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0176\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u0177"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u0178\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u0179\14\3\1\u017a\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u017b"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u017c\1\3\1\u017d\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u017e\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u017f"+
    "\13\3\1\0\1\3\23\0\1\3\2\0\4\256\1\u0180"+
    "\63\256\1\5\1\256\45\257\1\u0181\1\u0182\21\257\1\u0182"+
    "\1\257\2\0\1\u0183\37\0\1\u0184\1\u0183\1\u0184\26\0"+
    "\2\3\4\0\2\3\1\u0185\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\u0186\21\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u0187"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\15\3\1\u0188\15\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u0189\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u018a\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u018b\1\3"+
    "\1\u018c\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u018d\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\21\3\1\u018e\11\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u018f\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u0190\7\3\1\u0191\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u0192\1\3\1\u0193\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u0194"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\10\3\1\u0195\22\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\16\3\1\u0196\14\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u0197\32\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\10\3\1\u0198\22\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u0199\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\22\3\1\u019a\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u019b\5\3\1\u019c\11\3"+
    "\1\u019d\6\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\12\3\1\u019e\20\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u019f\2\3\1\u01a0\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u01a1\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u01a2\13\3\1\u01a3\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u01a4\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\33\3"+
    "\1\u01a5\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u01a6\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u01a7\32\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u01a8\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u01a9\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\10\3\1\u01aa"+
    "\22\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u01ab\10\3\1\u01ac\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u01ad\3\3\1\u01ae"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\22\3\1\u01af\2\3\1\u01b0\5\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\30\3\1\u01b1\2\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u01b2"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u01b3\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\32\3\1\u01b4\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u01b5\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\3\1\u01b6\5\3"+
    "\1\u01b7\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\13\3\1\u01b8\17\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u01b9\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\u01ba\23\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\11\3\1\u01bb"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u01bc\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u01bd\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u01be\6\3\1\u01bf"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u01c0\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u01c1\5\3\1\u01c2\1\3\1\u01c3"+
    "\10\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u01c4\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\15\3\1\u01c5\15\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\13\3\1\u01c6\3\3\1\u01c7"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u01c8\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u01c9\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u01ca\7\3\1\u01cb"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\15\3\1\u01cc\15\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u01cd\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u01ce\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u01cf\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\22\3"+
    "\1\u01d0\10\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u01d1\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\3\1\u01d2\31\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u01d3\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u01d4\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u01d5\31\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u01d6\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u01d7\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u01d8"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u01d9\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u01da\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u01db\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u01dc"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\u01dd\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\10\3\1\u01de\1\3\1\u01df\5\3\1\u01e0"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\u01e1\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\6\3\1\u01e2\2\3\1\u01e3\13\3\1\u01e4"+
    "\1\3\1\u01e5\3\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\6\3\1\u01e6\24\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u01e7\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\7\3\1\u01e8"+
    "\23\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u01e9\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u01ea\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\21\3\1\u01eb\11\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u01ec"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\17\3\1\u01ed\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u01ee\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u01ef\5\3\1\u01f0"+
    "\22\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u01f1\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u01f2\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u01f3\32\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u01f4\1\3"+
    "\1\u01f5\5\3\1\u01f6\20\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u01f7\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\20\3\1\u01f8\12\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u01f9"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u01fa\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u01fb\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u01fc\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u01fd"+
    "\1\3\1\u01fe\11\3\1\u01ff\6\3\1\u0200\3\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\7\3\1\u0201"+
    "\3\3\1\u0202\17\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\6\3\1\u0203\24\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\10\3\1\u0204\14\3\1\u0205"+
    "\5\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u0206\12\3\1\u0207\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u0208\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u0209"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\17\3\1\u020a\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u020b\20\3\1\u020c\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u020d\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u020e"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u020f\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\22\3\1\u0210\10\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u0211\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u0212"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u0213\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u0214\20\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0215\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\25\3\1\u0216"+
    "\5\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u0217\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0218\1\3\1\u0219\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u021a\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u021b\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u021c\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u021d\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u021e\4\3"+
    "\1\u021f\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u0220\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\3\1\u0221\31\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\5\3\1\u0222\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\24\3"+
    "\1\u0223\6\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\26\3\1\u0224\4\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u0225\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u0226\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\26\3\1\u0227"+
    "\4\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\15\3\1\u0228\15\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\24\3\1\u0229\6\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\30\3\1\u022a\2\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u022b"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u022c\14\3\1\u022d\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u022e\6\3\1\u022f"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0230\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\13\3\1\u0231\17\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\u0232\23\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u0233"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0234\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u0235\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0236\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0237"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\13\3\1\u0238\17\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u0239\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u023a\4\3\1\u023b"+
    "\1\3\1\u023c\17\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\20\3\1\u023d\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u023e\32\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u023f\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u0240\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0241\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u0242\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0243\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\20\3"+
    "\1\u0244\12\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u0245\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0246\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u0247\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u0248\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0249\7\3\1\u024a\5\3\1\u024b\5\3"+
    "\1\u024c\4\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u024d\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u024e\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\13\3\1\u024f\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\16\3"+
    "\1\u0250\14\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0251\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0252\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u0253\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u0254\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\22\3\1\u0255\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\13\3\1\u0256\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u0257\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u0258\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u0259\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u025a\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\24\3\1\u025b\6\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u025c\1\u025d\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u025e\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\15\3\1\u025f\15\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u0260"+
    "\6\3\1\u0261\11\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\13\3\1\u0262\17\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\26\3\1\u0263\4\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u0264"+
    "\24\3\1\0\1\3\23\0\1\3\72\0\1\5\1\0"+
    "\45\u0182\1\u0181\1\5\70\u0182\1\u0181\24\u0182\2\0\1\u0183"+
    "\40\0\1\u0183\27\0\2\3\4\0\5\3\1\u0265\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u0266\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0267\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u0268\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u0269\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u026a\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\16\3\1\u026b\14\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u026c\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u026d\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u026e"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\25\3\1\u026f\5\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\13\3\1\u0270\17\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u0271\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u0272"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u0273\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\17\3\1\u0274\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u0275\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u0276"+
    "\11\3\1\u0277\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u0278\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\13\3\1\u0279\17\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u027a"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u027b\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\10\3\1\u027c\22\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u027d\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\27\3\1\u027e\3\3"+
    "\1\0\1\3\23\0\1\3\13\0\1\u027f\61\0\2\3"+
    "\4\0\10\3\1\u0280\22\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0281\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u0282\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\11\3"+
    "\1\u0283\21\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\20\3\1\u0284\12\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u0285\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u0286\20\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\22\3"+
    "\1\u0287\10\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\12\3\1\u0288\20\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u0289\2\3\1\u028a\7\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u028b\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u028c\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u028d\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\5\3\1\u028e\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u028f\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u0290\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u0291\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\5\3\1\u0292\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u0293\3\3\1\u0294\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u0295\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\24\3\1\u0296\6\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\16\3"+
    "\1\u0297\14\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0298\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\13\3\1\u0299\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u029a\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u029b\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u029c\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u029d\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u029e\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u029f\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u02a0\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u02a1\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\5\3\1\u02a2\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u02a3\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u02a4\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u02a5\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u02a6\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u02a7\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u02a8\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u02a9\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u02aa\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u02ab"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u02ac\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u02ad\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u02ae\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u02af\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u02b0\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u02b1\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u02b2\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u02b3\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u02b4"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u02b5\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\17\3\1\u02b6\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u02b7\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u02b8"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\3\1\u02b9\1\3\1\u02ba\1\3\1\u02bb\24\3\1\u02bc"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\11\3"+
    "\1\u02bd\21\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u02be\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u02bf\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\13\3\1\u02c0\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u02c1\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u02c2\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u02c3\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u02c4\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u02c5"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u02c6\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u02c7\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u02c8\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u02c9"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u02ca\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u02cb\16\3\1\u02cc\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u02cd\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u02ce\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u02cf\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u02d0\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\25\3\1\u02d1\5\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u02d2"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\13\3\1\u02d3\17\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\17\3\1\u02d4\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u02d5\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\11\3\1\u02d6"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u02d7\27\3\1\u02d8\2\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\24\3\1\u02d9\6\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\27\3\1\u02da\3\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u02db\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\13\3\1\u02dc\17\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u02dd\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u02de\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u02df\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u02e0\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\22\3\1\u02e1\10\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u02e2\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\15\3"+
    "\1\u02e3\15\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u02e4\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u02e5\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u02e6\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u02e7\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u02e8\31\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u02e9\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u02ea\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\14\3"+
    "\1\u02eb\16\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u02ec\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u02ed\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\13\3\1\u02ee\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u02ef\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u02f0\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\24\3\1\u02f1\6\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u02f2\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u02f3\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u02f4\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\3\3\1\u02f5\27\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u02f6\20\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u02f7\14\3\1\u02f8\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u02f9\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u02fa\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u02fb\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u02fc\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u02fd\1\u02fe\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u02ff\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\3"+
    "\1\u0300\31\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\20\3\1\u0301\12\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\12\3\1\u0302\20\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u0303\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u0304\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u0305\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u0306\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u0307\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u0308\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0309\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u030a\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\25\3\1\u030b\5\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u030c\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u030d\31\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u030e\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u030f\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u0310\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u0311\10\3\1\u0312\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0313\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u0314\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u0315\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\10\3\1\u0316\22\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u0317\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\15\3\1\u0318\15\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0319"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u031a\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\15\3\1\u031b\15\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u031c\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\14\3\1\u031d"+
    "\16\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u031e\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u031f\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0320\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0321"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\17\3\1\u0322\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\15\3\1\u0323\15\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0324\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0325"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u0326\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u0327\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u0328\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\13\3\1\u0329\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u032a\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u032b\32\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u032c\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u032d\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u032e"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u032f\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u0330\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u0331\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u0332\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0333\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u0334\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u0335\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u0336\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u0337\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u0338\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u0339\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u033a\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u033b\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u033c\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u033d\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u033e\23\3"+
    "\1\0\1\3\23\0\1\3\14\0\1\u033f\60\0\2\3"+
    "\4\0\2\3\1\u0340\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u0341\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u0342\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u0343\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u0344\6\3\1\u0345\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0346\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u0347\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0348\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0349\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u034a\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\11\3\1\u034b\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u034c"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u034d\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u034e\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u034f\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u0350"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\u0351\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\14\3\1\u0352\16\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0353\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u0354"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u0355\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u0356\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0357\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u0358\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u0359\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u035a\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u035b\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u035c\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\13\3\1\u035d"+
    "\17\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\u035e\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\14\3\1\u035f\16\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0360\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u0361\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u0362\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0363\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u0364\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\u0365\23\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u0366"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u0367\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\20\3\1\u0368\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u0369\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\3\1\u036a"+
    "\31\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u036b\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u036c\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u036d\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u036e"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u036f\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\25\3\1\u0370\5\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u0371\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\13\3\1\u0372\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u0373\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\30\3\1\u0374\2\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u0375\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u0376\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u0377"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u0378\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\3\1\u0379\31\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u037a\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u037b"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u037c\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\20\3\1\u037d\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u037e\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u037f"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\u0380\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u0381\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u0382\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u0383"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0384\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u0385\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0386\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u0387"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u0388\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u0389\20\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\u038a\23\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\10\3\1\u038b"+
    "\22\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u038c\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u038d\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\26\3\1\u038e\4\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u038f"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0390\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\22\3\1\u0391\10\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\u0392\32\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u0393\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u0394"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\22\3\1\u0395\10\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u0396\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\10\3\1\u0397\22\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0398"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0399\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u039a\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u039b\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u039c\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\20\3"+
    "\1\u039d\6\3\1\u039e\3\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u039f\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\3\1\u03a0\31\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u03a1"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u03a2\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\20\3\1\u03a3\12\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u03a4\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u03a5"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u03a6\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u03a7\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\u03a8\21\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\3\1\u03a9"+
    "\31\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\17\3\1\u03aa\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u03ab\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u03ac\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u03ad"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u03ae\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u03af\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u03b0\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\11\3\1\u03b1\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\25\3"+
    "\1\u03b2\5\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u03b3\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u03b4\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\3\1\u03b5\31\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u03b6"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u03b7\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\7\3\1\u03b8\23\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u03b9\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u03ba"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u03bb\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u03bc\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\27\3\1\u03bd\3\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u03be"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u03bf\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u03c0\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u03c1\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u03c2\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u03c3\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u03c4\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u03c5\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u03c6\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u03c7\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u03c8\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u03c9\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u03ca\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u03cb"+
    "\1\3\1\u03cc\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\10\3\1\u03cd\5\3\1\u03ce\14\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u03cf"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\16\3\1\u03d0\14\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u03d1\20\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u03d2\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u03d3"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u03d4\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u03d5\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u03d6\13\3\1\0\1\3"+
    "\23\0\1\3\13\0\1\u03d7\61\0\2\3\4\0\1\u03d8"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\23\3\1\u03d9\7\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u03da\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\12\3\1\u03db\20\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u03dc\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u03dd"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u03de\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u03df\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u03e0\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u03e1\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u03e2\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u03e3\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u03e4\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\3\3\1\u03e5\27\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\27\3"+
    "\1\u03e6\3\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u03e7\32\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\17\3\1\u03e8\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u03e9\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u03ea"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u03eb\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u03ec\20\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u03ed\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\3\1\u03ee"+
    "\31\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u03ef\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u03f0\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u03f1\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\24\3\1\u03f2\6\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u03f3\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\22\3\1\u03f4\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\22\3\1\u03f5\10\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u03f6\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u03f7\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u03f8\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u03f9\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\27\3\1\u03fa\3\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u03fb\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\21\3\1\u03fc\11\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u03fd\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\11\3\1\u03fe\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u03ff\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u0400\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\26\3\1\u0401\4\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0402\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u0403\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\20\3\1\u0404\12\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\10\3\1\u0405\22\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\22\3\1\u0406\10\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0407\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u0408\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\12\3\1\u0409\20\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\10\3\1\u040a\22\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u040b\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\13\3\1\u040c\17\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u040d\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u040e\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u040f"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0410\14\3\1\u0411\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0412\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u0413"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u0414\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u0415\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\u0416\21\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u0417"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0418\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u0419\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\3\3\1\u041a\27\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u041b"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u041c\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u041d\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\12\3\1\u041e\20\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\12\3\1\u041f"+
    "\20\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0420\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\6\3\1\u0421\24\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0422\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u0423"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0424\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u0425\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u0426\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0427\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u0428\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\17\3\1\u0429\13\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u042a\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u042b\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u042c"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u042d\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u042e\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\6\3\1\u042f\24\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u0430"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u0431\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\17\3\1\u0432\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\26\3\1\u0433\4\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\30\3\1\u0434"+
    "\2\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0435\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u0436\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0437\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u0438"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0439\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u043a\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u043b\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u043c"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\22\3\1\u043d\10\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u043e\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\22\3\1\u043f\10\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0440"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\23\3\1\u0441\7\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u0442\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\11\3\1\u0443\21\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0444"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u0445\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\16\3\1\u0446\14\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\3\1\u0447\31\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u0448\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0449\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u044a\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\13\3\1\u044b\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u044c\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u044d\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u044e\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u044f\21\3\1\0\1\3"+
    "\23\0\1\3\23\0\1\u0450\51\0\2\3\4\0\25\3"+
    "\1\u0451\5\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0452\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u0453\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u0454\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u0455\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\22\3\1\u0456\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0457\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\27\3\1\u0458\3\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\25\3"+
    "\1\u0459\5\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u045a\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u045b\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u045c\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u045d\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u045e\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\22\3\1\u045f\10\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u0460\20\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u0461\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\24\3\1\u0462\6\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u0463\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u0464\20\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u0465\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u0466\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0467\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\11\3\1\u0468\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0469\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u046a\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\22\3\1\u046b\10\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u046c\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u046d"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u046e\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u046f\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0470\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u0471"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\3\1\u0472\31\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u0473\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u0474\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\11\3\1\u0475"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u0476\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u0477\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0478\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\17\3\1\u0479"+
    "\13\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u047a\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\30\3\1\u047b\2\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u047c\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u047d"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\17\3\1\u047e\13\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u047f\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0480\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u0481"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u0482\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\24\3\1\u0483\6\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\22\3\1\u0484\10\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\21\3\1\u0485"+
    "\11\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u0486\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u0487\20\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\u0488\23\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\7\3\1\u0489"+
    "\23\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u048a\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u048b\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u048c\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\21\3\1\u048d"+
    "\11\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\30\3\1\u048e\2\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\12\3\1\u048f\20\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0490\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\6\3\1\u0491"+
    "\24\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\6\3\1\u0492\24\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\13\3\1\u0493\17\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0494\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u0495"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\2\3\1\u0496\30\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\17\3\1\u0497\13\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\3\3\1\u0498\27\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u0499"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\5\3\1\u049a\25\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u049b\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u049c\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u049d\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\7\3"+
    "\1\u049e\23\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u049f\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u04a0\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u04a1\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\12\3"+
    "\1\u04a2\20\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u04a3\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\10\3\1\u04a4\22\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\21\3\1\u04a5\11\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u04a6\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u04a7\14\3\1\u04a8\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u04a9\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\10\3"+
    "\1\u04aa\22\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\30\3\1\u04ab\2\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u04ac\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\17\3\1\u04ad\13\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\13\3"+
    "\1\u04ae\17\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u04af\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u04b0\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u04b1\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u04b2\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u04b3\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u04b4\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u04b5\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u04b6\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\21\3\1\u04b7\11\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u04b8\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\3\1\u04b9\31\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u04ba\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u04bb\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u04bc\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u04bd\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u04be\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u04bf\2\3\1\u04c0\6\3\1\u04c1\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u04c2\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\22\3\1\u04c3\10\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u04c4\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\3\3\1\u04c5\27\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u04c6\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u04c7\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u04c8\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u04c9\15\3"+
    "\1\u04ca\2\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u04cb\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u04cc\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\21\3\1\u04cd\11\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u04ce\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\6\3\1\u04cf\24\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u04d0\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\1\u04d1\32\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\13\3\1\u04d2"+
    "\17\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u04d3\3\3\1\u04d4\6\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\12\3\1\u04d5\20\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\22\3\1\u04d6"+
    "\10\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\20\3\1\u04d7\12\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\6\3\1\u04d8\24\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u04d9\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\11\3\1\u04da"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u04db\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u04dc\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u04dd\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\5\3\1\u04de"+
    "\25\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\12\3\1\u04df\20\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\2\3\1\u04e0\30\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u04e1\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\7\3\1\u04e2"+
    "\23\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\11\3\1\u04e3\21\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u04e4\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u04e5\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\15\3\1\u04e6"+
    "\7\3\1\u04e7\5\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\11\3\1\u04e8\21\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u04e9\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u04ea"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u04eb\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\5\3\1\u04ec\25\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\20\3\1\u04ed\12\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\11\3\1\u04ee"+
    "\21\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u04ef\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\22\3\1\u04f0\10\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\1\3\1\u04f1\31\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u04f2\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u04f3\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u04f4\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u04f5\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u04f6\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u04f7"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\30\3\1\u04f8\2\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u04f9\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u04fa\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\4\3\1\u04fb"+
    "\26\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u04fc\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u04fd\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\15\3\1\u04fe\15\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\11\3\1\u04ff\21\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u0500\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\27\3\1\u0501\3\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\13\3\1\u0502\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u0503\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u0504\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0505\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u0506\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0507\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\22\3"+
    "\1\u0508\10\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\13\3\1\u0509\17\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u050a\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u050b\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\3"+
    "\1\u050c\31\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u050d\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u050e\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u050f\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u0510\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\11\3\1\u0511\21\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u0512\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u0513\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0514\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0515\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\13\3\1\u0516\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u0517\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u0518\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\16\3\1\u0519\14\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u051a\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u051b\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\25\3"+
    "\1\u051c\5\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u051d\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u051e\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\15\3\1\u051f\15\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\16\3"+
    "\1\u0520\14\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u0521\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\6\3\1\u0522\24\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0523\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\3"+
    "\1\u0524\31\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0525\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\25\3\1\u0526\5\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\21\3\1\u0527\11\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u0528\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\10\3\1\u0529\22\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\11\3\1\u052a\21\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\13\3\1\u052b\17\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u052c\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\3\1\u052d\31\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\5\3\1\u052e\25\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\15\3\1\u052f\15\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u0530\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\7\3\1\u0531\23\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u0532\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u0533\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\5\3"+
    "\1\u0534\25\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0535\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u0536\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u0537\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u0538\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u0539\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\17\3\1\u053a\13\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\10\3\1\u053b\22\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\6\3"+
    "\1\u053c\24\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u053d\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\13\3\1\u053e\17\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\12\3\1\u053f\20\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\22\3"+
    "\1\u0540\10\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0541\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\20\3\1\u0542\12\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\6\3\1\u0543\24\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0544\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u0545\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u0546\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\7\3\1\u0547\23\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\15\3"+
    "\1\u0548\15\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u0549\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\2\3\1\u054a\30\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\4\3\1\u054b\26\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\22\3"+
    "\1\u054c\10\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\5\3\1\u054d\25\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\1\u054e\32\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\5\3\1\u054f\25\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0550"+
    "\30\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\1\u0551\32\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\4\3\1\u0552\26\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\4\3\1\u0553\26\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\5\3\1\u0554\25\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\1\u0555"+
    "\32\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\25\3\1\u0556\5\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\15\3\1\u0557\15\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\17\3\1\u0558\13\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\20\3\1\u0559"+
    "\12\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\10\3\1\u055a\22\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\4\3\1\u055b\26\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\2\3\1\u055c\30\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\21\3\1\u055d"+
    "\11\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\4\3\1\u055e\26\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\3\1\u055f\2\3\1\u0560\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\1\u0561\32\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\2\3"+
    "\1\u0562\30\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u0563\32\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\16\3\1\u0564\14\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\4\3\1\u0565\26\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\16\3\1\u0566"+
    "\14\3\1\0\1\3\23\0\1\3\3\0\2\3\4\0"+
    "\7\3\1\u0567\23\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\1\u0568\32\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u0569\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\2\3\1\u056a\30\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\17\3"+
    "\1\u056b\13\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\2\3\1\u056c\30\3\1\0\1\3\23\0\1\3"+
    "\3\0\2\3\4\0\7\3\1\u056d\23\3\1\0\1\3"+
    "\23\0\1\3\3\0\2\3\4\0\20\3\1\u056e\12\3"+
    "\1\0\1\3\23\0\1\3\3\0\2\3\4\0\4\3"+
    "\1\u056f\26\3\1\0\1\3\23\0\1\3\3\0\2\3"+
    "\4\0\1\u0570\32\3\1\0\1\3\23\0\1\3\3\0"+
    "\2\3\4\0\16\3\1\u0571\14\3\1\0\1\3\23\0"+
    "\1\3\3\0\2\3\4\0\7\3\1\u0572\23\3\1\0"+
    "\1\3\23\0\1\3\3\0\2\3\4\0\2\3\1\u0573"+
    "\30\3\1\0\1\3\23\0\1\3\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[64206];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\1\1\1\11\32\1\2\11"+
    "\7\1\2\11\1\1\1\11\1\1\1\11\1\1\2\11"+
    "\2\1\1\11\167\1\1\0\1\1\12\11\1\0\306\1"+
    "\2\0\1\1\1\0\40\1\1\0\331\1\1\0\277\1"+
    "\1\0\227\1\1\0\170\1\1\11\u0123\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1395];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String palabra;
    public int linea;
    public int col;



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexico(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 184) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ;return ERROR;
            } 
            // fall through
          case 352: break;
          case 2: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return IDENTIFICADOR;
            } 
            // fall through
          case 353: break;
          case 3: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return INT_NUM;
            } 
            // fall through
          case 354: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 355: break;
          case 5: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return ERROR_STRING;
            } 
            // fall through
          case 356: break;
          case 6: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return COMA;
            } 
            // fall through
          case 357: break;
          case 7: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return RESTA;
            } 
            // fall through
          case 358: break;
          case 8: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return BIT_NUM;
            } 
            // fall through
          case 359: break;
          case 9: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return SUMA;
            } 
            // fall through
          case 360: break;
          case 10: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return MULTIPLICACION;
            } 
            // fall through
          case 361: break;
          case 11: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return DIVISION;
            } 
            // fall through
          case 362: break;
          case 12: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return MENOR_QUE;
            } 
            // fall through
          case 363: break;
          case 13: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return ASIGNAR;
            } 
            // fall through
          case 364: break;
          case 14: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return MAYOR_QUE;
            } 
            // fall through
          case 365: break;
          case 15: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return ADMIRACION_CERRADO;
            } 
            // fall through
          case 366: break;
          case 16: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return PUNTO_COMA;
            } 
            // fall through
          case 367: break;
          case 17: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return PUNTO;
            } 
            // fall through
          case 368: break;
          case 18: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return CORCHETE_ABIERTO;
            } 
            // fall through
          case 369: break;
          case 19: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return CORCHETE_CERRADO;
            } 
            // fall through
          case 370: break;
          case 20: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return PARENTESIS_ABIERTO;
            } 
            // fall through
          case 371: break;
          case 21: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return PARENTESIS_CERRADO;
            } 
            // fall through
          case 372: break;
          case 22: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return LLAVE_ABIERTA;
            } 
            // fall through
          case 373: break;
          case 23: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return LLAVE_CERRADA;
            } 
            // fall through
          case 374: break;
          case 24: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return ARROBA;
            } 
            // fall through
          case 375: break;
          case 25: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return NUMERAL;
            } 
            // fall through
          case 376: break;
          case 26: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return FLOAT_NUM;
            } 
            // fall through
          case 377: break;
          case 27: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return STRING;
            } 
            // fall through
          case 378: break;
          case 28: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return AT;
            } 
            // fall through
          case 379: break;
          case 29: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return AS;
            } 
            // fall through
          case 380: break;
          case 30: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TO;
            } 
            // fall through
          case 381: break;
          case 31: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NO;
            } 
            // fall through
          case 382: break;
          case 32: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OR;
            } 
            // fall through
          case 383: break;
          case 33: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ON;
            } 
            // fall through
          case 384: break;
          case 34: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OF;
            } 
            // fall through
          case 385: break;
          case 35: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BY;
            } 
            // fall through
          case 386: break;
          case 36: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IN;
            } 
            // fall through
          case 387: break;
          case 37: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IF;
            } 
            // fall through
          case 388: break;
          case 38: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IS;
            } 
            // fall through
          case 389: break;
          case 39: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return GO;
            } 
            // fall through
          case 390: break;
          case 40: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return ERROR_COMENTARIO;
            } 
            // fall through
          case 391: break;
          case 41: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return MENOR_IGUAL;
            } 
            // fall through
          case 392: break;
          case 42: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return IGUAL_IGUAL;
            } 
            // fall through
          case 393: break;
          case 43: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return MAYOR_IGUAL;
            } 
            // fall through
          case 394: break;
          case 44: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return DIFERENTE_DE;
            } 
            // fall through
          case 395: break;
          case 45: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return AND_OP;
            } 
            // fall through
          case 396: break;
          case 46: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return OR_OP;
            } 
            // fall through
          case 397: break;
          case 47: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return CORCHETES;
            } 
            // fall through
          case 398: break;
          case 48: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return PARENTESIS;
            } 
            // fall through
          case 399: break;
          case 49: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return LLAVES;
            } 
            // fall through
          case 400: break;
          case 50: 
            { palabra=yytext() ; linea = yyline ; col = yycolumn ; return NUMERALES;
            } 
            // fall through
          case 401: break;
          case 51: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ADA;
            } 
            // fall through
          case 402: break;
          case 52: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ADD;
            } 
            // fall through
          case 403: break;
          case 53: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ARE;
            } 
            // fall through
          case 404: break;
          case 54: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return AND;
            } 
            // fall through
          case 405: break;
          case 55: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ANY;
            } 
            // fall through
          case 406: break;
          case 56: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ALL;
            } 
            // fall through
          case 407: break;
          case 57: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ASC;
            } 
            // fall through
          case 408: break;
          case 58: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return AVG;
            } 
            // fall through
          case 409: break;
          case 59: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DAY;
            } 
            // fall through
          case 410: break;
          case 60: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DEC;
            } 
            // fall through
          case 411: break;
          case 61: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return END;
            } 
            // fall through
          case 412: break;
          case 62: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TOP;
            } 
            // fall through
          case 413: break;
          case 63: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NOT;
            } 
            // fall through
          case 414: break;
          case 64: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PAD;
            } 
            // fall through
          case 415: break;
          case 65: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OFF;
            } 
            // fall through
          case 416: break;
          case 66: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return USE;
            } 
            // fall through
          case 417: break;
          case 67: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FOR;
            } 
            // fall through
          case 418: break;
          case 68: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BIT;
            } 
            // fall through
          case 419: break;
          case 69: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INT;
            } 
            // fall through
          case 420: break;
          case 70: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SET;
            } 
            // fall through
          case 421: break;
          case 71: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SUM;
            } 
            // fall through
          case 422: break;
          case 72: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SQL;
            } 
            // fall through
          case 423: break;
          case 73: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return GET;
            } 
            // fall through
          case 424: break;
          case 74: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return KEY;
            } 
            // fall through
          case 425: break;
          case 75: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MAX;
            } 
            // fall through
          case 426: break;
          case 76: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MIN;
            } 
            // fall through
          case 427: break;
          case 77: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DATE;
            } 
            // fall through
          case 428: break;
          case 78: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DENY;
            } 
            // fall through
          case 429: break;
          case 79: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DESC;
            } 
            // fall through
          case 430: break;
          case 80: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DROP;
            } 
            // fall through
          case 431: break;
          case 81: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DUMP;
            } 
            // fall through
          case 432: break;
          case 82: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DBCC;
            } 
            // fall through
          case 433: break;
          case 83: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DISK;
            } 
            // fall through
          case 434: break;
          case 84: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXEC;
            } 
            // fall through
          case 435: break;
          case 85: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXIT;
            } 
            // fall through
          case 436: break;
          case 86: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ELSE;
            } 
            // fall through
          case 437: break;
          case 87: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRAN;
            } 
            // fall through
          case 438: break;
          case 88: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRUE;
            } 
            // fall through
          case 439: break;
          case 89: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRIM;
            } 
            // fall through
          case 440: break;
          case 90: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return THEN;
            } 
            // fall through
          case 441: break;
          case 91: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TIME;
            } 
            // fall through
          case 442: break;
          case 92: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return READ;
            } 
            // fall through
          case 443: break;
          case 93: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return REAL;
            } 
            // fall through
          case 444: break;
          case 94: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ROWS;
            } 
            // fall through
          case 445: break;
          case 95: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RULE;
            } 
            // fall through
          case 446: break;
          case 96: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NEXT;
            } 
            // fall through
          case 447: break;
          case 97: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NONE;
            } 
            // fall through
          case 448: break;
          case 98: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NULL;
            } 
            // fall through
          case 449: break;
          case 99: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LAST;
            } 
            // fall through
          case 450: break;
          case 100: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LEFT;
            } 
            // fall through
          case 451: break;
          case 101: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LOAD;
            } 
            // fall through
          case 452: break;
          case 102: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LIKE;
            } 
            // fall through
          case 453: break;
          case 103: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PROC;
            } 
            // fall through
          case 454: break;
          case 104: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PLAN;
            } 
            // fall through
          case 455: break;
          case 105: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ONLY;
            } 
            // fall through
          case 456: break;
          case 106: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OPEN;
            } 
            // fall through
          case 457: break;
          case 107: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OVER;
            } 
            // fall through
          case 458: break;
          case 108: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CASE;
            } 
            // fall through
          case 459: break;
          case 109: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CAST;
            } 
            // fall through
          case 460: break;
          case 110: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CHAR;
            } 
            // fall through
          case 461: break;
          case 111: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return USER;
            } 
            // fall through
          case 462: break;
          case 112: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FROM;
            } 
            // fall through
          case 463: break;
          case 113: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FULL;
            } 
            // fall through
          case 464: break;
          case 114: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FILE;
            } 
            // fall through
          case 465: break;
          case 115: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return HOUR;
            } 
            // fall through
          case 466: break;
          case 116: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BOTH;
            } 
            // fall through
          case 467: break;
          case 117: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BULK;
            } 
            // fall through
          case 468: break;
          case 118: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INTO;
            } 
            // fall through
          case 469: break;
          case 119: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SAVE;
            } 
            // fall through
          case 470: break;
          case 120: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SOME;
            } 
            // fall through
          case 471: break;
          case 121: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SIZE;
            } 
            // fall through
          case 472: break;
          case 122: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return YEAR;
            } 
            // fall through
          case 473: break;
          case 123: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return GOTO;
            } 
            // fall through
          case 474: break;
          case 124: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ZONE;
            } 
            // fall through
          case 475: break;
          case 125: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return KILL;
            } 
            // fall through
          case 476: break;
          case 126: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WORK;
            } 
            // fall through
          case 477: break;
          case 127: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WHEN;
            } 
            // fall through
          case 478: break;
          case 128: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WITH;
            } 
            // fall through
          case 479: break;
          case 129: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return VIEW;
            } 
            // fall through
          case 480: break;
          case 130: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return JOIN;
            } 
            // fall through
          case 481: break;
          case 131: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ALTER;
            } 
            // fall through
          case 482: break;
          case 132: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TABLE;
            } 
            // fall through
          case 483: break;
          case 133: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RIGHT;
            } 
            // fall through
          case 484: break;
          case 134: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NAMES;
            } 
            // fall through
          case 485: break;
          case 135: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NCHAR;
            } 
            // fall through
          case 486: break;
          case 136: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LEVEL;
            } 
            // fall through
          case 487: break;
          case 137: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LOCAL;
            } 
            // fall through
          case 488: break;
          case 138: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LOGIN;
            } 
            // fall through
          case 489: break;
          case 139: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LOWER;
            } 
            // fall through
          case 490: break;
          case 140: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PRINT;
            } 
            // fall through
          case 491: break;
          case 141: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PRIOR;
            } 
            // fall through
          case 492: break;
          case 142: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PIVOT;
            } 
            // fall through
          case 493: break;
          case 143: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ORDER;
            } 
            // fall through
          case 494: break;
          case 144: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OUTER;
            } 
            // fall through
          case 495: break;
          case 145: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CROSS;
            } 
            // fall through
          case 496: break;
          case 146: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CLOSE;
            } 
            // fall through
          case 497: break;
          case 147: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COUNT;
            } 
            // fall through
          case 498: break;
          case 148: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CHECK;
            } 
            // fall through
          case 499: break;
          case 149: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UNION;
            } 
            // fall through
          case 500: break;
          case 150: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UPPER;
            } 
            // fall through
          case 501: break;
          case 151: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return USAGE;
            } 
            // fall through
          case 502: break;
          case 152: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return USING;
            } 
            // fall through
          case 503: break;
          case 153: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FALSE;
            } 
            // fall through
          case 504: break;
          case 154: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FETCH;
            } 
            // fall through
          case 505: break;
          case 155: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FLOAT;
            } 
            // fall through
          case 506: break;
          case 156: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FOUND;
            } 
            // fall through
          case 507: break;
          case 157: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FIRST;
            } 
            // fall through
          case 508: break;
          case 158: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BEGIN;
            } 
            // fall through
          case 509: break;
          case 159: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BREAK;
            } 
            // fall through
          case 510: break;
          case 160: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INDEX;
            } 
            // fall through
          case 511: break;
          case 161: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INNER;
            } 
            // fall through
          case 512: break;
          case 162: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INPUT;
            } 
            // fall through
          case 513: break;
          case 163: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SPACE;
            } 
            // fall through
          case 514: break;
          case 164: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SQLCA;
            } 
            // fall through
          case 515: break;
          case 165: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return GRANT;
            } 
            // fall through
          case 516: break;
          case 166: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return GROUP;
            } 
            // fall through
          case 517: break;
          case 167: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MATCH;
            } 
            // fall through
          case 518: break;
          case 168: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MERGE;
            } 
            // fall through
          case 519: break;
          case 169: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MONTH;
            } 
            // fall through
          case 520: break;
          case 170: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WRITE;
            } 
            // fall through
          case 521: break;
          case 171: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WHERE;
            } 
            // fall through
          case 522: break;
          case 172: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WHILE;
            } 
            // fall through
          case 523: break;
          case 173: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return VALUE;
            } 
            // fall through
          case 524: break;
          case 174: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ACTION;
            } 
            // fall through
          case 525: break;
          case 175: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DELETE;
            } 
            // fall through
          case 526: break;
          case 176: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DOUBLE;
            } 
            // fall through
          case 527: break;
          case 177: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DOMAIN;
            } 
            // fall through
          case 528: break;
          case 178: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXCEPT;
            } 
            // fall through
          case 529: break;
          case 179: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXISTS;
            } 
            // fall through
          case 530: break;
          case 180: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ERRLVL;
            } 
            // fall through
          case 531: break;
          case 181: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ESCAPE;
            } 
            // fall through
          case 532: break;
          case 182: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RETURN;
            } 
            // fall through
          case 533: break;
          case 183: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return REVERT;
            } 
            // fall through
          case 534: break;
          case 184: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return REVOKE;
            } 
            // fall through
          case 535: break;
          case 185: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NULLIF;
            } 
            // fall through
          case 536: break;
          case 186: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LINENO;
            } 
            // fall through
          case 537: break;
          case 187: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PASCAL;
            } 
            // fall through
          case 538: break;
          case 188: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PUBLIC;
            } 
            // fall through
          case 539: break;
          case 189: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OPTION;
            } 
            // fall through
          case 540: break;
          case 190: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OUTPUT;
            } 
            // fall through
          case 541: break;
          case 191: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CREATE;
            } 
            // fall through
          case 542: break;
          case 192: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COLUMN;
            } 
            // fall through
          case 543: break;
          case 193: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COMMIT;
            } 
            // fall through
          case 544: break;
          case 194: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CURSOR;
            } 
            // fall through
          case 545: break;
          case 195: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UNIQUE;
            } 
            // fall through
          case 546: break;
          case 196: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UPDATE;
            } 
            // fall through
          case 547: break;
          case 197: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return HAVING;
            } 
            // fall through
          case 548: break;
          case 198: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BACKUP;
            } 
            // fall through
          case 549: break;
          case 199: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BROWSE;
            } 
            // fall through
          case 550: break;
          case 200: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INSERT;
            } 
            // fall through
          case 551: break;
          case 201: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SELECT;
            } 
            // fall through
          case 552: break;
          case 202: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SECOND;
            } 
            // fall through
          case 553: break;
          case 203: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SCROLL;
            } 
            // fall through
          case 554: break;
          case 204: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SCHEMA;
            } 
            // fall through
          case 555: break;
          case 205: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return GLOBAL;
            } 
            // fall through
          case 556: break;
          case 206: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MODULE;
            } 
            // fall through
          case 557: break;
          case 207: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return MINUTE;
            } 
            // fall through
          case 558: break;
          case 208: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return VALUES;
            } 
            // fall through
          case 559: break;
          case 209: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DECLARE;
            } 
            // fall through
          case 560: break;
          case 210: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DECIMAL;
            } 
            // fall through
          case 561: break;
          case 211: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DEFAULT;
            } 
            // fall through
          case 562: break;
          case 212: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXECUTE;
            } 
            // fall through
          case 563: break;
          case 213: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXTRACT;
            } 
            // fall through
          case 564: break;
          case 214: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRIGGER;
            } 
            // fall through
          case 565: break;
          case 215: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TSEQUAL;
            } 
            // fall through
          case 566: break;
          case 216: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RESTORE;
            } 
            // fall through
          case 567: break;
          case 217: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NATURAL;
            } 
            // fall through
          case 568: break;
          case 218: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NOCHECK;
            } 
            // fall through
          case 569: break;
          case 219: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NUMERIC;
            } 
            // fall through
          case 570: break;
          case 220: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LEADING;
            } 
            // fall through
          case 571: break;
          case 221: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PARTIAL;
            } 
            // fall through
          case 572: break;
          case 222: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PERCENT;
            } 
            // fall through
          case 573: break;
          case 223: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PREPARE;
            } 
            // fall through
          case 574: break;
          case 224: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PRIMARY;
            } 
            // fall through
          case 575: break;
          case 225: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OPENXML;
            } 
            // fall through
          case 576: break;
          case 226: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OFFSETS;
            } 
            // fall through
          case 577: break;
          case 227: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CATALOG;
            } 
            // fall through
          case 578: break;
          case 228: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CASCADE;
            } 
            // fall through
          case 579: break;
          case 229: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONNECT;
            } 
            // fall through
          case 580: break;
          case 230: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONVERT;
            } 
            // fall through
          case 581: break;
          case 231: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COLLATE;
            } 
            // fall through
          case 582: break;
          case 232: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COMPUTE;
            } 
            // fall through
          case 583: break;
          case 233: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CURRENT;
            } 
            // fall through
          case 584: break;
          case 234: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UNPIVOT;
            } 
            // fall through
          case 585: break;
          case 235: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UNKNOWN;
            } 
            // fall through
          case 586: break;
          case 236: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FOREIGN;
            } 
            // fall through
          case 587: break;
          case 237: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FORTRAN;
            } 
            // fall through
          case 588: break;
          case 238: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BETWEEN;
            } 
            // fall through
          case 589: break;
          case 239: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INTEGER;
            } 
            // fall through
          case 590: break;
          case 240: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INCLUDE;
            } 
            // fall through
          case 591: break;
          case 241: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SETUSER;
            } 
            // fall through
          case 592: break;
          case 242: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SECTION;
            } 
            // fall through
          case 593: break;
          case 243: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SESSION;
            } 
            // fall through
          case 594: break;
          case 244: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SQLCODE;
            } 
            // fall through
          case 595: break;
          case 245: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WAITFOR;
            } 
            // fall through
          case 596: break;
          case 246: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return VARCHAR;
            } 
            // fall through
          case 597: break;
          case 247: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return VARYING;
            } 
            // fall through
          case 598: break;
          case 248: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ALLOCATE;
            } 
            // fall through
          case 599: break;
          case 249: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ABSOLUTE;
            } 
            // fall through
          case 600: break;
          case 250: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DATABASE;
            } 
            // fall through
          case 601: break;
          case 251: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DEFERRED;
            } 
            // fall through
          case 602: break;
          case 252: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DESCRIBE;
            } 
            // fall through
          case 603: break;
          case 253: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DISTINCT;
            } 
            // fall through
          case 604: break;
          case 254: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXTERNAL;
            } 
            // fall through
          case 605: break;
          case 255: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ENDEXEC;
            } 
            // fall through
          case 606: break;
          case 256: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TEXTSIZE;
            } 
            // fall through
          case 607: break;
          case 257: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRAILING;
            } 
            // fall through
          case 608: break;
          case 258: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRUNCATE;
            } 
            // fall through
          case 609: break;
          case 259: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return READTEXT;
            } 
            // fall through
          case 610: break;
          case 260: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RELATIVE;
            } 
            // fall through
          case 611: break;
          case 261: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RESTRICT;
            } 
            // fall through
          case 612: break;
          case 262: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ROLLBACK;
            } 
            // fall through
          case 613: break;
          case 263: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ROWCOUNT;
            } 
            // fall through
          case 614: break;
          case 264: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NATIONAL;
            } 
            // fall through
          case 615: break;
          case 265: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return LANGUAGE;
            } 
            // fall through
          case 616: break;
          case 266: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PRESERVE;
            } 
            // fall through
          case 617: break;
          case 267: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return POSITION;
            } 
            // fall through
          case 618: break;
          case 268: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OVERLAPS;
            } 
            // fall through
          case 619: break;
          case 269: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CASCADED;
            } 
            // fall through
          case 620: break;
          case 270: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COALESCE;
            } 
            // fall through
          case 621: break;
          case 271: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONTAINS;
            } 
            // fall through
          case 622: break;
          case 272: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONTINUE;
            } 
            // fall through
          case 623: break;
          case 273: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FREETEXT;
            } 
            // fall through
          case 624: break;
          case 274: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FUNCTION;
            } 
            // fall through
          case 625: break;
          case 275: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return HOLDLOCK;
            } 
            // fall through
          case 626: break;
          case 276: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IDENTITY;
            } 
            // fall through
          case 627: break;
          case 277: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INTERVAL;
            } 
            // fall through
          case 628: break;
          case 278: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SHUTDOWN;
            } 
            // fall through
          case 629: break;
          case 279: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SMALLINT;
            } 
            // fall through
          case 630: break;
          case 280: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SQLERROR;
            } 
            // fall through
          case 631: break;
          case 281: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SQLSTATE;
            } 
            // fall through
          case 632: break;
          case 282: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WHENEVER;
            } 
            // fall through
          case 633: break;
          case 283: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ASSERTION;
            } 
            // fall through
          case 634: break;
          case 284: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return EXCEPTION;
            } 
            // fall through
          case 635: break;
          case 285: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TEMPORARY;
            } 
            // fall through
          case 636: break;
          case 286: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRANSLATE;
            } 
            // fall through
          case 637: break;
          case 287: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TIMESTAMP;
            } 
            // fall through
          case 638: break;
          case 288: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RAISERROR;
            } 
            // fall through
          case 639: break;
          case 289: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PRECISION;
            } 
            // fall through
          case 640: break;
          case 290: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PROCEDURE;
            } 
            // fall through
          case 641: break;
          case 291: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OPENQUERY;
            } 
            // fall through
          case 642: break;
          case 292: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CLUSTERED;
            } 
            // fall through
          case 643: break;
          case 293: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return COLLATION;
            } 
            // fall through
          case 644: break;
          case 294: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CHARACTER;
            } 
            // fall through
          case 645: break;
          case 295: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INDICATOR;
            } 
            // fall through
          case 646: break;
          case 296: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INTERSECT;
            } 
            // fall through
          case 647: break;
          case 297: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INITIALLY;
            } 
            // fall through
          case 648: break;
          case 298: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ISOLATION;
            } 
            // fall through
          case 649: break;
          case 299: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IMMEDIATE;
            } 
            // fall through
          case 650: break;
          case 300: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SUBSTRING;
            } 
            // fall through
          case 651: break;
          case 301: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WRITETEXT;
            } 
            // fall through
          case 652: break;
          case 302: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DEALLOCATE;
            } 
            // fall through
          case 653: break;
          case 303: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DEFERRABLE;
            } 
            // fall through
          case 654: break;
          case 304: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DESCRIPTOR;
            } 
            // fall through
          case 655: break;
          case 305: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DISCONNECT;
            } 
            // fall through
          case 656: break;
          case 306: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return REFERENCES;
            } 
            // fall through
          case 657: break;
          case 307: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return ROWGUIDCOL;
            } 
            // fall through
          case 658: break;
          case 308: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return PRIVILEGES;
            } 
            // fall through
          case 659: break;
          case 309: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OPENROWSET;
            } 
            // fall through
          case 660: break;
          case 310: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONNECTION;
            } 
            // fall through
          case 661: break;
          case 311: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONSTRAINT;
            } 
            // fall through
          case 662: break;
          case 312: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CHECKPOINT;
            } 
            // fall through
          case 663: break;
          case 313: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return UPDATETEXT;
            } 
            // fall through
          case 664: break;
          case 314: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FILLFACTOR;
            } 
            // fall through
          case 665: break;
          case 315: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return BIT_LENGTH;
            } 
            // fall through
          case 666: break;
          case 316: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return STATISTICS;
            } 
            // fall through
          case 667: break;
          case 317: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SQLWARNING;
            } 
            // fall through
          case 668: break;
          case 318: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DIAGNOSTICS;
            } 
            // fall through
          case 669: break;
          case 319: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return DISTRIBUTED;
            } 
            // fall through
          case 670: break;
          case 320: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TABLESAMPLE;
            } 
            // fall through
          case 671: break;
          case 321: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRANSACTION;
            } 
            // fall through
          case 672: break;
          case 322: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRANSLATION;
            } 
            // fall through
          case 673: break;
          case 323: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TRY_CONVERT;
            } 
            // fall through
          case 674: break;
          case 324: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return REPLICATION;
            } 
            // fall through
          case 675: break;
          case 325: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return RECONFIGURE;
            } 
            // fall through
          case 676: break;
          case 326: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONSTRAINTS;
            } 
            // fall through
          case 677: break;
          case 327: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CHAR_LENGTH;
            } 
            // fall through
          case 678: break;
          case 328: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IDENTITYCOL;
            } 
            // fall through
          case 679: break;
          case 329: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return INSENSITIVE;
            } 
            // fall through
          case 680: break;
          case 330: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SYSTEM_USER;
            } 
            // fall through
          case 681: break;
          case 331: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return WITHINGROUP;
            } 
            // fall through
          case 682: break;
          case 332: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return NONCLUSTERED;
            } 
            // fall through
          case 683: break;
          case 333: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OCTET_LENGTH;
            } 
            // fall through
          case 684: break;
          case 334: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CURRENT_DATE;
            } 
            // fall through
          case 685: break;
          case 335: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CURRENT_TIME;
            } 
            // fall through
          case 686: break;
          case 336: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CURRENT_USER;
            } 
            // fall through
          case 687: break;
          case 337: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SESSION_USER;
            } 
            // fall through
          case 688: break;
          case 338: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return AUTHORIZATION;
            } 
            // fall through
          case 689: break;
          case 339: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TIMEZONE_HOUR;
            } 
            // fall through
          case 690: break;
          case 340: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CORRESPONDING;
            } 
            // fall through
          case 691: break;
          case 341: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CONTAINSTABLE;
            } 
            // fall through
          case 692: break;
          case 342: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return FREETEXTTABLE;
            } 
            // fall through
          case 693: break;
          case 343: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SECURITYAUDIT;
            } 
            // fall through
          case 694: break;
          case 344: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return OPENDATASOURCE;
            } 
            // fall through
          case 695: break;
          case 345: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return TIMEZONE_MINUTE;
            } 
            // fall through
          case 696: break;
          case 346: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return IDENTITY_INSERT;
            } 
            // fall through
          case 697: break;
          case 347: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CHARACTER_LENGTH;
            } 
            // fall through
          case 698: break;
          case 348: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return CURRENT_TIMESTAMP;
            } 
            // fall through
          case 699: break;
          case 349: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SEMANTICKEYPHRASETABLE;
            } 
            // fall through
          case 700: break;
          case 350: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SEMANTICSIMILARITYTABLE;
            } 
            // fall through
          case 701: break;
          case 351: 
            { palabra=yytext(); linea = yyline ; col = yycolumn ; return SEMANTICSIMILARITYDETAILSTABLE;
            } 
            // fall through
          case 702: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
